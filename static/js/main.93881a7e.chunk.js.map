{"version":3,"sources":["common/enum/app/app-router.enum.ts","common/enum/app/storage-key.enum.ts","common/enum/exception/exception-name.enum.ts","common/enum/file/content-type.enum.ts","common/enum/http/http-header.enum.ts","common/enum/http/http-method.enum.ts","store/method/slice.ts","store/registrar/slice.ts","store/transaction/slice.ts","store/type/slice.ts","store/ui/slice.ts","exceptions/http-error/http-error.exception.ts","helpers/date/dayjs/dayjs.ts","services/http/http.service.ts","helpers/http/get-stringified-query/get-stringified-query.helper.ts","services/method/MethodMapper.ts","services/method/method.service.ts","services/storage/storage.service.ts","services/user/UserMapper.ts","services/transaction/TransactionMapper.ts","services/transaction/transaction.service.ts","services/type/TypeMapper.ts","services/type/type.service.ts","services/user/user.service.ts","services/services.ts","store/user/slice.ts","store/store.ts","components/common/header/Menu.tsx","components/common/header/UserCard.tsx","components/common/header/Header.tsx","store/user/actions.ts","components/common/sign/LoginForm.tsx","components/common/sign/Sign.tsx","components/common/NotFound.tsx","store/type/actions.ts","components/common/create/interfaces.ts","store/method/actions.ts","components/common/create/CreateMethod.tsx","components/common/search/SearchLine.tsx","components/common/search/CheckBoxListItem.tsx","components/common/search/Search.tsx","components/common/table/MethodTable.tsx","store/registrar/actions.ts","components/common/create/CreateUser.tsx","components/common/table/UserTable.tsx","store/transaction/actions.ts","components/common/table/TransactionTable.tsx","components/common/update/interfaces.ts","components/common/update/UpdateMethod.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppRoute","StorageKey","ExceptionName","ContentType","HttpHeader","HttpMethod","methodSlice","createSlice","name","initialState","methods","page","count","totalPages","totalCount","reducers","replaceMethod","state","action","payload","Math","ceil","loadMethods","method","methodActions","actions","methodReducer","reducer","registorSlice","registrars","organizations","addresses","authorities","position","getRegistors","getRelations","loadRegistrars","registrar","registrarActions","registrarReducer","transactionSlice","transactions","replaceTransaction","loadTransactios","transaction","transactionActions","transactionReducer","typeSlice","types","setTypes","loadTypes","type","typeActions","typeReducer","uiSlice","notification","currentPage","showNotification","clearNotification","console","log","selectNotification","ui","uiActions","uiReducer","DEFAULT_MESSAGE","HttpError","status","message","Error","dayjs","extend","relativeTime","getDateStr","d","format","getYear","year","config","Http","storage","_storage","this","url","a","options","hasAuth","contentType","query","form","headers","_getHeaders","token","getItem","axios","data","_getUrl","Authorization","request","Request","body","fetch","json","b","Headers","append","response","ok","catch","statusText","parsedException","params","process","Object","keys","map","key","String","join","err","MethodMapper","value","id","registration_code","author","id_domaims","domainsOfMethod","id_types","typesOfMethods","year_creation","year_making_changes","year_termination_application","date_of_decision_on_state_registration","date_of_decision_on_state_registration_of_changes","date_of_decision_to_terminate_the_application","doc_copy_of_method","doc_report_review","doc_certificate_of_approbation","doc_copy_of_implementation","doc_discount_card","MethodService","http","_http","filter","load","toDTO","metod","StorageService","setItem","removeItem","clear","UserMapper","full_name","date_of_birth","Date","toDateString","series_passport","date_of_issue_of_passport","id_authority_that_issued_the_passport","ITN","email","id_role","id_organizations","id_adress","id_position","passport_number","TransactionMapper","datetime","id_method","id_old_value","id_type","id_user","methodslogs","id_domains","typeAction","users","TransactionService","e","logs","TypeMapper","domains","TypeService","UserService","res","localStorage","Token","setTimeout","__refreshToken","JSON","stringify","city","flat_number","house_number","region","street","code","user","userService","transactionService","typeService","methodService","getUserRole","parse","storageService","role","getInitialState","userSlice","setUser","getUser","userActions","userReduser","store","configureStore","useTypedDispatch","useDispatch","useTypedSelector","useSelector","menuTabs","public","link","admin","Menu","pathname","useLocation","React","pathLink","getTab","setValue","Box","sx","width","display","Tabs","onChange","event","newValue","aria-label","selectionFollowsFocus","tab","Tab","label","href","getLinkByRole","UserCard","CardHeader","avatar","Avatar","bgcolor","green","IconButton","component","Link","to","title","Typography","variant","subheader","headerInfo","Header","Card","maxWidth","justifyContent","CardMedia","alt","height","src","flexDirection","CardContent","flex","Divider","color","LoginForm","setEmail","password","setPassword","isLoading","setIsLoading","isEmailValid","setIsEmailValid","isPasswordValid","setIsPasswordValid","gutterBottom","TextField","error","target","onBlur","validator","isEmail","autoComplete","Boolean","CardActions","LoadingButton","size","loading","loadingIndicator","onClick","onLogin","SignPage","dispatch","handleLogin","loginPayload","login","getUserByToken","Grid","container","direction","alignItems","style","minHeight","item","path","getScreen","NotFound","fetchTypesData","getAllTypes","then","initialMethodCheckValid","initialDocsState","fetchMethodsData","getAllMethods","CreateMethod","methodData","setMethodData","methodCheckFields","setCheckField","docs","setDocs","forEach","push","typeNames","reduce","acc","obj","fWidth","Paper","margin","flexGrow","padding","spacing","Stack","required","test","Autocomplete","sort","toString","localeCompare","groupBy","option","getOptionLabel","renderInput","trim","isEmpty","ignore_whitespace","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","views","maxDate","InputLabel","htmlFor","Input","inputProps","accept","files","Button","values","every","element","FormData","addMethod","createMethod","SearchLine","useState","field","setSearchField","m","noValidate","p","fullWidth","orientation","onSubmit","CheckBoxTree","props","section","t","createCheckedData","checked","setChecked","handleChangeParent","k","onSearch","handleChangeChild","RenderChild","domain","newChecked","TreeItem","nodeId","FormControlLabel","control","Checkbox","TreeView","defaultCollapseIcon","ExpandMore","defaultExpandIcon","ExpandLess","indeterminate","some","el","Array","isArray","Search","sections","createData","selected","setSelected","handleSearch","ids","idType","Number","checkBoxPaiload","columns","minWidth","privateColumns","startIcon","ind","blob","URL","saveAs","methodsFilter","MethodTable","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","align","TableBody","index","row","isPrivat","number","developer","created","updated","stoped","registered","registered_changes","stop_date","undefined","change_row","hover","tabIndex","uuid","Pagination","newPage","shape","fetchRegistrarsData","getUsers","fetchUsersRelations","Promise","all","getOrganizations","getAddresses","getAuthorities","getPositions","initialStateUserData","initialCheckState","CreateUser","autocompleteFields","userData","setUserData","userCheckFields","positions","disablePortal","textAlign","postUser","createUser","Row","openUserInfo","setOpenUserInfo","openDialogSend","setOpenDialogSend","openDialogDelete","setOpenDialogDelete","borderBottom","scope","endIcon","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","sendDataUser","autoFocus","deleteUserById","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","organization","authority","userFilter","UserTable","length","address","onDelete","fetchTransactionData","getTransactions","transactionFilter","initialSFields","PaginationSearch","searchData","setSearchData","dateValue","setDates","setAction","mx","DateRangePicker","startText","endText","startProps","endProps","ToggleButtonGroup","exclusive","newAction","ToggleButton","fields","date1","date2","id_typeAction","TransactionTable","border","UpdateMethod","updateMetod","updateMethod","Routing","handleClose","notice","Snackbar","autoHideDuration","Alert","severity","notify","exact","render","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"2PAAaA,EACL,IADKA,EAEN,IAFMA,EAGJ,SAHIA,EAKI,cALJA,EAMH,UANGA,EAOI,iBAPJA,EAQD,YARCA,EASM,mBATNA,EAUE,eAVFA,EAaH,UCbJC,EACG,QADHA,EAEE,OAFFA,EAGW,UCHXC,EACQ,YCDRC,EACE,mBADFA,EAEO,qCCFPC,EACU,eADVA,EAGW,gBCHXC,EACC,MADDA,EAEE,OAFFA,EAGC,MAHDA,EAII,S,iBCsBJC,EAAcC,YAAY,CAC9BC,KAAM,SACNC,aAVgC,CAChCC,QAAS,GACTC,KAAM,EACNC,MAAO,GACPC,WAAY,EACZC,WAAY,GAMZC,SAAU,CACRC,cAAe,SAACC,EAAOC,GACrBD,EAAMP,QAAUQ,EAAOC,QAAQT,QAC/BO,EAAMN,KAAOO,EAAOC,QAAQR,KAC5BM,EAAMH,WAAaI,EAAOC,QAAQL,WAClCG,EAAMJ,WAAaO,KAAKC,KAAKH,EAAOC,QAAQL,WAAaG,EAAML,WAKxDU,EAAc,SAACL,GAAD,OAAsBA,EAAMM,QAE1CC,EAAgBlB,EAAYmB,QAE5BC,EAAgBpB,EAAYqB,QCenCC,EAAgBrB,YAAY,CAChCC,KAAM,YACNC,aAdmC,CACnCoB,WAAY,GACZC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,SAAU,GACVtB,KAAM,EACNC,MAAO,GACPC,WAAY,EACZC,WAAY,GAMZC,SAAU,CACRmB,aAAc,SAACjB,EAAOC,GACpBD,EAAMY,WAAaX,EAAOC,QAAQU,WAClCZ,EAAMN,KAAOO,EAAOC,QAAQR,KAC5BM,EAAMH,WAAaI,EAAOC,QAAQL,WAClCG,EAAMJ,WAAaO,KAAKC,KAAKH,EAAOC,QAAQL,WAAaG,EAAML,QAEjEuB,aAAc,SACZlB,EACAC,GAOAD,EAAMa,cAAgBZ,EAAOC,QAAQW,cACrCb,EAAMc,UAAYb,EAAOC,QAAQY,UACjCd,EAAMe,YAAcd,EAAOC,QAAQa,YACnCf,EAAMgB,SAAWf,EAAOC,QAAQc,aAKzBG,EAAiB,SAACnB,GAAD,OAAsBA,EAAMoB,WAE7CC,EAAmBV,EAAcH,QAEjCc,EAAmBX,EAAcD,QC/DxCa,EAAmBjC,YAAY,CACnCC,KAAM,cACNC,aAVqC,CACrCgC,aAAc,GACd3B,WAAY,EACZF,MAAO,GACPD,KAAM,EACNE,WAAY,GAMZE,SAAU,CACR2B,mBAAoB,SAACzB,EAAOC,GAC1BD,EAAMwB,aAAevB,EAAOC,QAAQsB,aACpCxB,EAAMN,KAAOO,EAAOC,QAAQR,KAC5BM,EAAMH,WAAaI,EAAOC,QAAQL,WAClCG,EAAMJ,WAAaO,KAAKC,KAAKH,EAAOC,QAAQL,WAAaG,EAAML,WAKxD+B,EAAkB,SAAC1B,GAAD,OAAsBA,EAAM2B,aAE9CC,EAAqBL,EAAiBf,QAEtCqB,EAAqBN,EAAiBb,QC3B7CoB,EAAYxC,YAAY,CAC5BC,KAAM,OACNC,aAN8B,CAC9BuC,MAAO,IAMPjC,SAAU,CACRkC,SAAU,SAAChC,EAAOC,GAChBD,EAAM+B,MAAQ9B,EAAOC,QAAQ6B,UAKtBE,EAAY,SAACjC,GAAD,OAAsBA,EAAMkC,MAExCC,EAAcL,EAAUtB,QAExB4B,EAAcN,EAAUpB,QCX/B2B,EAAU/C,YAAY,CAC1BC,KAAM,KACNC,aAP4B,CAC5B8C,aAAc,KACdC,YAAa,GAMbzC,SAAU,CACR0C,iBAAkB,SAACxC,EAAOC,GACxBD,EAAMsC,aAAerC,EAAOC,SAE9BuC,kBAAmB,SAACzC,EAAOC,GACzByC,QAAQC,IAAI,OAEZ3C,EAAMsC,aAAe,SAKdM,EAAqB,SAAC5C,GAAD,OAAsBA,EAAM6C,GAAGP,cAEpDQ,EAAYT,EAAQ7B,QAEpBuC,EAAYV,EAAQ3B,Q,yECpC3BsC,GAAkB,gBAElBC,G,oDACJ,aAGS,IAAD,2DAAJ,GAAI,KAFNC,OAEM,EADNC,gBACM,MADIH,GACJ,+BACN,cAAMG,IAED5D,KAAON,EAHN,E,uBAJcmE,Q,0CCDxBC,KAAMC,OAAOC,MACb,IAAMC,GAAa,SAACC,GAAD,OAAaJ,KAAMI,GAAGC,OAAO,eAE1CC,GAAU,SAACF,GAAD,OAAqBJ,KAAMI,GAAGG,Q,+BCS9CC,oB,IAgBMC,G,WAGJ,WAAYC,GAA0B,0BAF9BC,cAE6B,EACnCC,KAAKD,SAAWD,E,gFAGlB,WAAWG,GAAX,8BAAAC,EAAA,6BAAAA,EAAA,yDAAwBC,EAAxB,+BAA2C,GAA3C,EAQMA,EANF9D,cAFJ,MAEalB,EAFb,IAQMgF,EALFlE,eAHJ,MAGc,KAHd,IAQMkE,EAJFC,eAJJ,SAKIC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MANJ,EAQMH,EADFI,YAPJ,MAOW,KAPX,EAUQC,EAAUR,KAAKS,YAAYL,EAASC,GAEtCA,IAAgBpF,EAZtB,oBAaIwD,QAAQC,IAAI6B,EAAM,QAEZG,EAAQV,KAAKD,SAASY,QAAQ5F,GAChCsB,IAAWlB,EAhBnB,iCAiBsByF,KAAM,CACpBvE,OAAQ,MACRwE,KAAMN,EACNN,IAAKD,KAAKc,QAAQb,EAAKK,GACvBE,QAAS,CACP,eAAgBvF,EAChB8F,cAAc,UAAD,OAAYL,MAvBnC,cAiBYR,EAjBZ,yBA0BaA,GA1Bb,WA4BQ7D,IAAWlB,EA5BnB,kCA6BsByF,KAAM,CACpBvE,OAAQ,OACRwE,KAAMN,EACNN,IAAKD,KAAKc,QAAQb,EAAKK,GACvBE,QAAS,CACP,eAAgBvF,EAChB8F,cAAc,UAAD,OAAYL,MAnCnC,eA6BYR,EA7BZ,yBAsCaA,GAtCb,uCA0DUc,EAAU,IAAIC,QAAQjB,KAAKc,QAAQb,EAAKK,GAAQ,CACpDjE,OAAQA,EACRmE,QAASA,EACTU,KAAMjF,IAERwC,QAAQC,IAAI,KA/DhB,UAiEoByC,MAAMH,GAjE1B,eAiEUd,EAjEV,iBAmEoBA,EAAEkB,OAnEtB,eAmEUC,EAnEV,OAqEI5C,QAAQC,IAAI2C,GArEhB,kBAuEWA,GAvEX,iD,gFAgFA,SAAoBjB,EAAkBC,GACpC,IAAMG,EAAU,IAAIc,QAUpB,GARIjB,GACFG,EAAQe,OAAOrG,EAAyBmF,GAOtCD,EAAS,CACX,IAAMM,EAAQV,KAAKD,SAASY,QAAQ5F,GAEpCyF,EAAQe,OAAOrG,EAAf,iBAAmDwF,IAGrD,OAAOF,I,iEAGT,WAA2BgB,GAA3B,0EACE/C,QAAQC,IAAI,kBAAmB8C,GAE1BA,EAASC,GAHhB,gCAIkCD,EAASJ,OAAOM,OAAM,iBAAO,CACzDxC,QAASsC,EAASG,eALxB,aAIUC,EAJV,OAQU,IAAI5C,GAAU,CAClBC,OAAQuC,EAASvC,OACjBC,QAAO,OAAE0C,QAAF,IAAEA,OAAF,EAAEA,EAAiB1C,UAVhC,gCAaSsC,GAbT,2C,4EAgBA,SAAgBvB,EAAaK,GAC3B7B,QAAQC,IAAIuB,EAAKK,GAEjB,IC3JyBuB,ED6JzB,MAAM,GAAN,OAFYC,sCAEZ,OAAgB7B,GAAhB,OAAsBK,EAAK,YC7JFuB,ED6J6BvB,EC5JxDyB,OAAOC,KAAKH,GACTI,KAAI,SAACC,GAAD,OAASA,EAAM,KAAOL,EAAOK,GAAOC,OAAON,EAAOK,IAAQ,OAC9DE,KAAK,OD0J2D,M,+DAGnE,WAAyBZ,GAAzB,wEACE/C,QAAQC,IAAI,WAAY8C,GAD1B,kBAESA,EAASJ,QAFlB,2C,gFAKA,SAAoBiB,GAGlB,MAFA5D,QAAQC,IAAI,MAAO2D,GAEbA,M,aExKGC,GAAb,4FACE,SAAoBC,GAClB,MAAO,CACLC,GAAID,EAAMC,GACVC,kBAAmBF,EAAME,kBACzBnH,KAAMiH,EAAMjH,KAEZoH,OAAQH,EAAMG,OAEdC,WAAYJ,EAAMI,WAClBC,gBAAiB,CACfJ,GAAID,EAAMK,gBAAgBJ,GAC1BlH,KAAMiH,EAAMK,gBAAgBtH,KAC5BuH,SAAUN,EAAMK,gBAAgBC,SAChCC,eAAgB,CACdN,GAAID,EAAMK,gBAAgBE,eAAeN,GACzClH,KAAMiH,EAAMK,gBAAgBE,eAAexH,OAI/CyH,cAAeR,EAAMQ,cACrBC,oBAAqBT,EAAMS,qBAAuB,KAClDC,6BAA8BV,EAAMU,8BAAgC,KAEpEC,uCACEX,EAAMW,uCAERC,kDACEZ,EAAMY,mDAAqD,KAC7DC,8CACEb,EAAMa,+CAAiD,KAEzDC,mBAAoBd,EAAMc,mBAC1BC,kBAAmBf,EAAMe,kBACzBC,+BAAgChB,EAAMgB,+BACtCC,2BAA4BjB,EAAMiB,2BAClCC,kBAAmBlB,EAAMkB,uBApC/B,KCOMC,G,WAEJ,WAAYC,GAAqB,0BADzBC,WACwB,EAC9B5D,KAAK4D,MAAQD,E,yFAGf,WACEE,GADF,eAAA3D,EAAA,6DAGEzB,QAAQC,IAAImF,GAHd,SAKwB7D,KAAK4D,MAAME,KAAK,eAAgB,CACpDzH,OAAQlB,EACRmF,MAAM,gBAAMuD,KAPhB,cAKQrI,EALR,yBASS,CACLA,QAASA,EAAQA,QAAQyG,IAAIK,GAAayB,OAC1CrI,MAAOF,EAAQE,QAXnB,gD,qHAeA,WAAgB8G,GAAhB,eAAAtC,EAAA,sEACsBF,KAAK4D,MAAME,KAAX,uBAAgCtB,GAAM,CACxDnG,OAAQlB,IAFZ,cACQ6I,EADR,yBAIS1B,GAAayB,MAAMC,IAJ5B,gD,qHAOA,WAAgB/H,GAAhB,SAAAiE,EAAA,+EACSF,KAAK4D,MAAME,KAAK,eAAgB,CACrCzH,OAAQlB,EACRkF,YAAapF,EACbsF,KAAMtE,EACNmE,SAAS,KALb,gD,uHASA,WAAkBoC,EAAYnG,GAA9B,SAAA6D,EAAA,+EACSF,KAAK4D,MAAME,KAAX,uBAAgCtB,GAAM,CAC3CnG,OAAQlB,EACRkF,YAAapF,EACbsF,KAAMlE,EACN+D,SAAS,KALb,gD,gECvCI6D,G,WAGJ,WAAYnE,GAAoB,0BAFxBC,cAEuB,EAC7BC,KAAKD,SAAWD,E,4CAGlB,SAAQoC,GACN,OAAOlC,KAAKD,SAASY,QAAQuB,K,qBAG/B,SAAQA,EAAaK,GACnB,OAAOvC,KAAKD,SAASmE,QAAQhC,EAAKK,K,wBAGpC,SAAWL,GACT,OAAOlC,KAAKD,SAASoE,WAAWjC,K,mBAGlC,WACE,OAAOlC,KAAKD,SAASqE,Y,KCzBZC,GAAb,4FACE,SAAoB9B,GAClB,MAAO,CACLC,GAAID,EAAMC,GACV8B,UAAW/B,EAAM+B,UACjBC,cAAe,IAAIC,KAAKjC,EAAMgC,eAAeE,eAC7CC,gBAAiBnC,EAAMmC,iBAAmB,KAC1CC,0BAA2B,IAAIH,KAC7BjC,EAAMoC,2BACNF,eACFG,sCACErC,EAAMqC,sCACRC,IAAKtC,EAAMsC,IACXC,MAAOvC,EAAMuC,MACbC,QAASxC,EAAMwC,QACfC,iBAAkBzC,EAAMyC,iBACxBC,UAAW1C,EAAM0C,UACjBC,YAAa3C,EAAM2C,YACnBC,gBAAiB5C,EAAM4C,qBAlB7B,KCCaC,GAAb,4FACE,SAAoB7C,GAClB,MAAO,CACLC,GAAID,EAAMC,GACV6C,SAAU9C,EAAM8C,SAChBC,UAAW/C,EAAM+C,UACjBC,aAAchD,EAAMgD,cAAgB,KACpCC,QAASjD,EAAMiD,QACfC,QAASlD,EAAMkD,QACfC,YACwB,OAAtBnD,EAAMmD,YACF,KACA,CACElD,GAAID,EAAMmD,YAAYlD,GACtBC,kBAAmBF,EAAMmD,YAAYjD,kBACrCnH,KAAMiH,EAAMmD,YAAYpK,KAExBqK,WAAYpD,EAAMmD,YAAYC,WAE9BjD,OAAQH,EAAMmD,YAAYhD,OAE1BK,cAAeR,EAAMmD,YAAY3C,cACjCC,oBACET,EAAMmD,YAAY1C,qBAAuB,KAC3CC,6BACEV,EAAMmD,YAAYzC,8BAAgC,KAEpDC,uCACEX,EAAMmD,YAAYxC,uCACpBC,kDACEZ,EAAMmD,YACHvC,mDAAqD,KAC1DC,8CACEb,EAAMmD,YACHtC,+CAAiD,KAEtDC,mBAAoBd,EAAMmD,YAAYrC,mBACtCC,kBAAmBf,EAAMmD,YAAYpC,kBACrCC,+BACEhB,EAAMmD,YAAYnC,+BACpBC,2BACEjB,EAAMmD,YAAYlC,2BACpBC,kBAAmBlB,EAAMmD,YAAYjC,mBAE7CmC,WAAY,CAAEpD,GAAID,EAAMqD,WAAWpD,GAAIlH,KAAMiH,EAAMqD,WAAWtK,MAC9DuK,MAAOxB,GAAWN,MAAMxB,EAAMsD,YA7CpC,KCIaC,GAAb,WAEE,WAAYnC,GAAqB,0BADzBC,WACwB,EAC9B5D,KAAK4D,MAAQD,EAHjB,sFAKE,4BAAAzD,EAAA,sEACwBF,KAAK4D,MAAME,KAAK,gBAAiB,CACrDzD,YAAapF,IAFjB,cACQsB,EADR,yBAISA,EAAQ0F,KAAI,SAAC8D,GAAD,MAA0C,CAC3DvD,GAAIuD,EAAEvD,GACNlH,KAAMyK,EAAEzK,UANZ,gDALF,4HAcE,WAAwBkH,GAAxB,SAAAtC,EAAA,+EACSF,KAAK4D,MAAME,KAAX,oBAA6BtB,GAAM,CACxCnG,OAAQlB,EACRkF,YAAapF,EACbmF,SAAS,KAJb,gDAdF,2HAsBE,WACEyD,GADF,eAAA3D,EAAA,sEAG6BF,KAAK4D,MAAME,KAAK,YAAa,CACtDzD,YAAapF,EACbqF,MAAM,gBAAMuD,GACZzD,SAAS,IANb,cAGQ7C,EAHR,yBASS,CACLyI,KAAMzI,EAAayI,KAAK/D,IAAImD,GAAkBrB,OAC9CrI,MAAO6B,EAAa7B,QAXxB,gDAtBF,8DCLauK,GAAb,4FACE,SAAoB1D,GAClB,MAAO,CACLC,GAAID,EAAMC,GACVlH,KAAMiH,EAAMjH,KACZ4K,QAAS3D,EAAM2D,QAAQjE,KAAI,SAAC8D,GAAD,MAA0C,CACnEvD,GAAIuD,EAAEvD,GACNlH,KAAMyK,EAAEzK,KACRuH,SAAUkD,EAAElD,kBARpB,KCIasD,GAAb,WAEE,WAAYxC,GAAqB,0BADzBC,WACwB,EAC9B5D,KAAK4D,MAAQD,EAHjB,uFAKE,WAAkBnB,GAAlB,eAAAtC,EAAA,sEACqBF,KAAK4D,MAAME,KAAX,4BAAqCtB,GAAM,CAC5DnC,YAAapF,IAFjB,cACQgD,EADR,yBAISgI,GAAWlC,MAAM9F,IAJ1B,gDALF,uHAWE,4BAAAiC,EAAA,sEACsBF,KAAK4D,MAAME,KAAK,oBAAqB,CACvDzD,YAAapF,IAFjB,cACQ6C,EADR,yBAKSA,EAAMmE,IAAIgE,GAAWlC,QAL9B,gDAXF,6DCGaqC,GAAb,WAEE,WAAYzC,GAAqB,0BADzBC,WACwB,EAC9B5D,KAAK4D,MAAQD,EAHjB,0FAME,mCAAAzD,EAAA,+EAEsBF,KAAKU,QAF3B,OAEU2F,EAFV,OAGI5H,QAAQC,IAAI2H,GACZC,aAAapC,QAAQnJ,EAAkBsL,EAAIE,OACvCD,aAAa3F,QAAQ5F,IACvByL,WAAU,sBAAC,sBAAAtG,EAAA,0DACLoG,aAAa3F,QAAQ5F,GADhB,gCAED,EAAK0L,iBAFJ,2CAIR,KAVT,gDAaIhI,QAAQC,IAAR,MACA4H,aAAalC,QAdjB,yDANF,gHAwBE,WAAYnI,GAAZ,eAAAiE,EAAA,sEAIoBF,KAAK4D,MAAME,KAAK,cAAe,CAC/CzH,OAAQlB,EACRkF,YAAapF,EACbgB,QAASyK,KAAKC,UAAU1K,KAP5B,cAIQoK,EAJR,yBAUS,CAAEE,MAAOF,EAAIE,QAVtB,gDAxBF,iHAqCE,4BAAArG,EAAA,sEACoBF,KAAK4D,MAAME,KAAK,cAAe,CAC/CzD,YAAapF,EACbmF,SAAS,IAHb,cACQiG,EADR,yBAKS,CAAEE,MAAOF,EAAIE,QALtB,gDArCF,uHA6CE,4BAAArG,EAAA,sEACoBF,KAAK4D,MAAME,KAAK,sBAAuB,CACvDzD,YAAapF,IAFjB,cACQoL,EADR,yBAISA,EAAIpE,KAAI,SAAC8D,GAAD,MAA0C,CACvDvD,GAAIuD,EAAEvD,GACNlH,KAAMyK,EAAEzK,UANZ,gDA7CF,uHAuDE,4BAAA4E,EAAA,sEACoBF,KAAK4D,MAAME,KAAK,kBAAmB,CACnDzD,YAAapF,IAFjB,cACQoL,EADR,yBAISA,EAAIpE,KAAI,SAAC8D,GAAD,MAA0C,CACvDvD,GAAIuD,EAAEvD,GACNoE,KAAMb,EAAEa,KACRC,YAAad,EAAEc,aAAe,KAC9BC,aAAcf,EAAEe,aAChBC,OAAQhB,EAAEgB,OACVC,OAAQjB,EAAEiB,YAVd,gDAvDF,yHAqEE,4BAAA9G,EAAA,sEAGoBF,KAAK4D,MAAME,KAAK,oBAAqB,CACrDzD,YAAapF,IAJjB,cAGQoL,EAHR,yBAMSA,EAAIpE,KAAI,SAAC8D,GAAD,MAA0C,CACvDvD,GAAIuD,EAAEvD,GACNyE,KAAMlB,EAAEkB,KACRhC,UAAWc,EAAEd,UACb3J,KAAMyK,EAAEzK,UAVZ,gDArEF,2HAmFE,4BAAA4E,EAAA,sEACoBF,KAAK4D,MAAME,KAAK,qBAAsB,CACtDzD,YAAapF,IAFjB,cACQoL,EADR,yBAISA,EAAIpE,KAAI,SAAC8D,GAAD,MAA0C,CACvDvD,GAAIuD,EAAEvD,GACNlH,KAAMyK,EAAEzK,UANZ,gDAnFF,mHA6FE,WACEuI,GADF,eAAA3D,EAAA,sEAGsBF,KAAK4D,MAAME,KAAK,aAAc,CAChD1D,SAAS,EACTC,YAAapF,EACbqF,MAAM,gBAAMuD,KANhB,cAGQgC,EAHR,yBAQS,CAAEA,MAAOA,EAAMA,MAAM5D,IAAIoC,GAAWN,OAAQrI,MAAOmK,EAAMnK,QARlE,gDA7FF,0HAwGE,4BAAAwE,EAAA,sEACqBF,KAAK4D,MAAME,KAAK,kBAAmB,CACpD1D,SAAS,IAFb,cACQ8G,EADR,yBAIS7C,GAAWN,MAAMmD,IAJ1B,gDAxGF,yHA+GE,WAAqB1E,GAArB,eAAAtC,EAAA,sEACqBF,KAAK4D,MAAME,KAAX,qBAA8BtB,GAAM,CACrDnG,OAAQlB,EACRiF,SAAS,IAHb,cACQ8G,EADR,yBAKS,CAAE1E,GAAI0E,EAAK1E,KALpB,gDA/GF,oHAuHE,WAAe0E,GAAf,eAAAhH,EAAA,sEACoBF,KAAK4D,MAAME,KAAK,aAAc,CAC9CzH,OAAQlB,EACRkF,YAAapF,EACbmF,SAAS,EACTnE,QAASyK,KAAKC,UAAUO,KAL5B,cACQb,EADR,yBAOS,CAAE7D,GAAI6D,EAAI7D,KAPnB,gDAvHF,2HAiIE,4BAAAtC,EAAA,sEACoBF,KAAK4D,MAAME,KAAK,iBAAkB,CAClDzD,YAAapF,IAFjB,cACQoL,EADR,yBAISA,EAAIpE,KAAI,SAAC8D,GAAD,MAA0C,CACvDvD,GAAIuD,EAAEvD,GACNlH,KAAMyK,EAAEzK,UANZ,gDAjIF,uHA2IE,WAAmBkH,GAAnB,eAAAtC,EAAA,sEACoBF,KAAK4D,MAAME,KAAK,kBAAmB,CACnDzH,OAAQlB,EACRkF,YAAapF,EACbmF,SAAS,EACTnE,QAASyK,KAAKC,UAAU,CAAElB,QAASjD,MALvC,cACQ6D,EADR,yBAOS,CAAEvB,MAAOuB,EAAIvB,QAPtB,gDA3IF,8DCFMhF,GAAU,IAAImE,GAAeqC,cAE7B3C,GAAO,IAAI9D,GAAKC,IAEhBqH,GAAc,IAAIf,GAAYzC,IAE9ByD,GAAqB,IAAItB,GAAmBnC,IAE5C0D,GAAc,IAAIlB,GAAYxC,IAE9B2D,GAAgB,IAAI5D,GAAcC,ICClC4D,GAAc,SAAC/E,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,QACT,QACE,MAAO,SAkBPjH,GAdkB,WACtB,IAAM2L,EAAuBR,KAAKc,MAChCC,GAAe9G,QAAQ5F,IAAoB,QAE7C,OAAa,OAATmM,EACK,CACLA,KAAM,KACNQ,KAAM,QAGD,CAAER,KAAMA,EAAMQ,KAAMH,GAAYL,EAAKnC,UAIhB4C,GAO1BC,GAAYvM,YAAY,CAC5BC,KAAM,OACNC,gBACAM,SAAU,CACRgM,QAAS,SAAC9L,EAAOC,GACfD,EAAMmL,KAAOlL,EAAOC,QAAQiL,KAC5BnL,EAAM2L,KAAO1L,EAAOC,QAAQyL,SAKrBI,GAAU,SAAC/L,GAAD,OAAsBA,EAAMmL,MAEtCa,GAAcH,GAAUrL,QAExByL,GAAcJ,GAAUnL,QCtDxBwL,GAAQC,YAAe,CAClCzL,QAAS,CACPJ,OAAQG,EACR0K,KAAMc,GACNpJ,GAAIE,EACJb,KAAME,EAENhB,UAAWE,EACXK,YAAaE,KAOJuK,GAAmB,kBAAMC,eACzBC,GAAoDC,I,gGCpB3DC,GAAW,CACfC,OAAQ,CACN,CAAElN,KAAM,mDAAYmN,KAAM3N,GAC1B,CAAEQ,KAAM,iCAASmN,KAAM3N,GACvB,CAAEQ,KAAM,2BAAQmN,KAAM3N,IAExB4N,MAAO,CACL,CAAEpN,KAAM,qEAAemN,KAAM3N,GAC7B,CAAEQ,KAAM,+DAAcmN,KAAM3N,KAIjB,SAAS6N,KAAQ,IACtBC,EAAaC,cAAbD,SAsBF1B,EAAOmB,GAAiBP,IAvBD,EAyBHgB,WAtBX,SAACC,GACd,OAAQA,GACN,KAAKjO,EACH,OAAO,EAET,KAAKA,EACH,OAAO,EAET,KAAKA,EACH,MAAqB,UAAdoM,EAAKQ,KAAmB,EAAI,EAErC,KAAK5M,EACH,MAAqB,UAAdoM,EAAKQ,KAAmB,EAAI,EAGrC,QACE,OAAO,GAM4BsB,CAAOJ,IAzBnB,oBAyBtBrG,EAzBsB,KAyBf0G,EAzBe,KA8B7B,OACE,eAACC,GAAA,EAAD,CAAKC,GAAI,CAAEC,MAAO,OAAQC,QAAS,QAAnC,SACE,gBAACC,GAAA,EAAD,CACEC,SAPe,SAACC,EAA6BC,GACjDR,EAASQ,IAOLlH,MAAOA,EACPmH,aAAW,qCACXC,uBAAqB,EAJvB,UAMGpB,GAASC,OAAOvG,KAAI,SAAC2H,GAAD,OACnB,eAACC,GAAA,EAAD,CAAKC,MAAOF,EAAItO,KAAqByO,KAAMH,EAAInB,MAApBmB,EAAItO,SAElB,UAAd4L,EAAKQ,MACJa,GAASG,MAAMzG,KAAI,SAAC2H,GAAD,OACjB,eAACC,GAAA,EAAD,CAAKC,MAAOF,EAAItO,KAAqByO,KAAMH,EAAInB,MAApBmB,EAAItO,c,yECrDrC0O,GAAgB,SAACtC,GACrB,OAAQA,GACN,IAAK,cACH,OAAO5M,EACT,IAAK,QACH,OAAOA,EACT,QACE,OAAOA,IAIE,SAASmP,KACtB,IAAM/C,EAAOmB,GAAiBP,IAE9B,OAAIZ,EAAKA,KAEL,eAACgD,GAAA,EAAD,CACEC,OACE,eAACC,GAAA,EAAD,CAAQjB,GAAI,CAAEkB,QAASC,KAAM,MAAQZ,aAAW,SAAhD,SACE,eAACa,GAAA,EAAD,CACEb,aAAW,WACXc,UAAWC,KACXC,GAAIV,GAAc9C,EAAKQ,MAHzB,SAKE,eAAC,KAAD,QAINiD,MACE,eAACC,GAAA,EAAD,CAAYJ,UAAU,MAAMK,QAAQ,KAApC,SACG3D,EAAKQ,OAGVoD,UAAW5D,EAAKA,KAAK5C,YAGb,KChChB,IAAMyG,GACE,eADFA,GAEG,iKAFHA,GAGO,iPAGE,SAASC,KACtB,OACE,gBAACC,GAAA,EAAD,CACE9B,GAAI,CACF+B,SAAU,OACV7B,QAAS,OACT8B,eAAgB,iBAJpB,UAOE,gBAACjC,GAAA,EAAD,CAAKC,GAAI,CAAEE,QAAS,QAApB,UACE,eAAC+B,GAAA,EAAD,CACEZ,UAAU,MACVa,IAAKN,GACL5B,GAAI,CAAEC,MAAO,IAAKkC,OAAQ,IAC1BC,IAAKR,GACLJ,MAAOI,KAET,eAAC7B,GAAA,EAAD,CAAKC,GAAI,CAAEE,QAAS,OAAQmC,cAAe,UAA3C,SACE,gBAACC,GAAA,EAAD,CAAatC,GAAI,CAAEuC,KAAM,YAAzB,UACE,eAACd,GAAA,EAAD,CAAYJ,UAAU,MAAMK,QAAQ,KAApC,SACGE,KAEH,eAACY,GAAA,EAAD,IACA,eAACf,GAAA,EAAD,CACEC,QAAQ,YACRe,MAAM,iBACNpB,UAAU,MAHZ,SAKGO,KAEH,eAACpC,GAAD,YAIN,eAACsB,GAAD,O,wBC5CA1C,GAAc,SAAC/E,GACnB,OAAQA,GACN,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAO,QACT,QACE,MAAO,S,4DCJE,SAASqJ,GAAUhK,GAE9B,IAAD,EACyBiH,WAAe,IADxC,oBACMhE,EADN,KACagH,EADb,OAE+BhD,WAAe,IAF9C,oBAEMiD,EAFN,KAEgBC,EAFhB,OAGiClD,YAAe,GAHhD,oBAGMmD,EAHN,KAGiBC,EAHjB,OAIuCpD,YAAe,GAJtD,oBAIMqD,EAJN,KAIoBC,EAJpB,OAK6CtD,YAAe,GAL5D,oBAKMuD,EALN,KAKuBC,EALvB,KA4BD,OACE,gBAACrB,GAAA,EAAD,WACE,gBAACQ,GAAA,EAAD,CAAatC,GAAI,CAAEE,QAAS,OAAQmC,cAAe,UAAnD,UACE,eAACZ,GAAA,EAAD,CAAY2B,cAAY,EAAC1B,QAAQ,KAAKL,UAAU,MAAhD,mCAGA,eAACmB,GAAA,EAAD,IACA,eAACa,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,QACNe,QAAQ,WACR4B,OAAQN,EACR5C,SAjCa,SAACC,GACpBsC,EAAStC,EAAMkD,OAAOnK,OACtB6J,GAAgB,IAgCVO,OAAQ,kBAAMP,EAAgBQ,KAAUC,QAAQ/H,OAGlD,eAAC0H,GAAA,EAAD,CACEhK,GAAG,0BACHsH,MAAM,WACN7L,KAAK,WACL6O,aAAa,mBACbjC,QAAQ,WACR4B,OAAQJ,EACR9C,SAvCgB,SAACC,GACvBwC,EAAYxC,EAAMkD,OAAOnK,OACzB+J,GAAmB,IAsCbK,OAAQ,kBAAML,EAAmBS,QAAQhB,UAG7C,eAACiB,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEC,KAAK,QACLtB,MAAM,UACNuB,QAASlB,EACTmB,iBAAiB,aACjBC,QA5CiB,WACPlB,GAAgBE,IAChBJ,IAGhBC,GAAa,GAEbrK,EAAOyL,QAAQ,CAAExI,QAAOiH,aACxBG,GAAa,KA+BT,wBC9DD,IAAMqB,GAAW,WACtB,IAAMC,EAAWrF,KACTS,EAAaC,cAAbD,SAEF6E,EAAc3E,eAClB,SAAC4E,GAAD,OACEF,GFwCHxM,EExCkB0M,EFwCnB,uCACA,WAAOF,GAAP,iBAAAtN,EAAA,+EAEsBiH,GAAYwG,MAAM3M,GAFxC,cAEUqF,EAFV,OAGI5H,QAAQC,IAAI2H,GACZoB,GAAevD,QAAQnJ,EAAkBsL,EAAIE,OAJjD,SAMuBY,GAAYyG,iBANnC,OAMU1G,EANV,OAOIO,GAAevD,QAAQnJ,EAAiB2L,KAAKC,UAAUO,IAEvDO,GAAevD,QACbnJ,EACAA,GAMFyS,EACEzF,GAAYF,QAAQ,CAAEX,KAAMA,EAAMQ,KAAMH,GAAYL,EAAKnC,YAE3DyI,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,UACR0L,MAAO,WACPzL,QAAQ,gEAAD,OAAgBgI,EAAK5C,UAArB,kDAxBf,kDA4BI7F,QAAQC,IAAR,MAEA8O,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,mBAlCjB,0DADA,4DAAC8B,IEvCC,CAACwM,IAcH,OACE,eAACK,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACV5C,eAAe,SACf6C,WAAW,SACXC,MAAO,CAAEC,UAAW,QALtB,SAOE,eAACL,GAAA,EAAD,CAAMM,MAAI,EAAChF,GAAI,CAAEC,MAAO,KAAxB,SAnBc,SAACgF,GACjB,OAAQA,GACN,KAAKtT,EACH,OAAO,eAAC+Q,GAAD,CAAWyB,QAASG,IAE7B,QACE,OAAO,MAcNY,CAAUzF,Q,qBCxBJ0F,GAVE,kBACf,gCACE,eAAC,KAAD,IACA,kDAFF,QAIE,eAAC,KAAD,CAAS5D,GAAI5P,EAAb,oBAJF,W,mGCAWyT,GAAiB,kBAAM,SAACf,GACnCnG,GACGmH,cACAC,MAAK,SAAC3Q,GACL0P,EAAStP,EAAYH,SAAS,CAAED,MAAOA,QAExC4D,OAAM,WACL8L,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,qCCONwP,GAAwC,CACnDjM,mBAAmB,EACnBnH,MAAM,EACNoH,QAAQ,EACRiD,YAAY,GAGDpK,GAA8B,CACzCkH,kBAAmB,GACnBnH,KAAM,GACNoH,OAAQ,GACRiD,WAAY,KAEZ5C,cAAe,KACfC,oBAAqB,KACrBC,6BAA8B,KAE9BC,uCAAwC,KACxCC,kDAAmD,KACnDC,8CAA+C,MAapCuL,GAAyB,CACpCtL,mBAAoB,KACpBC,kBAAmB,KAEnBC,+BAAgC,KAChCC,2BAA4B,KAE5BC,kBAAmB,MCvDRmL,GACX,SAAC/K,GAAD,OAA0B,SAAC2J,GACzB/O,QAAQC,IAAImF,EAAQ,OAEpByD,GACGuH,cAAchL,GACd4K,MAAK,SAACjT,GACLgS,EACElR,EAAcR,cAAc,CAC1BN,QAASA,EAAQA,QACjBI,WAAYJ,EAAQE,MACpBD,KAAMoI,EAAOpI,WAIlBiG,OAAM,WACL8L,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,uCCGR4P,GAAe,WAC1B,IAAMhR,EAAQuK,GAAiBrK,GACzBwP,EAAWrF,KAEjBW,aAAgB,WACd0E,EAASe,QACR,CAACf,IAN4B,MAS9B1E,WAA8BvN,IATA,oBAQzBwT,EARyB,KAQbC,EARa,OAWWlG,WACzC4F,IAZ8B,oBAWzBO,EAXyB,KAWNC,EAXM,OAeRpG,WAAqB6F,IAfb,oBAezBQ,EAfyB,KAenBC,EAfmB,KAoH1BlJ,EAAuB,GAC7BpI,EAAMA,MAAMuR,SAAQ,SAACpR,GACnBiI,EAAQoJ,KAAR,MAAApJ,EAAO,aAASjI,EAAKiI,aAGvB,IAAMqJ,EAAYzR,EAAMA,MAAM0R,QAC5B,SACEC,EAGAC,GAGA,OADAD,EAAIC,EAAIlN,IAAMkN,EAAIpU,KACXmU,IAET,IAGIE,EAAS,IACf,OACE,eAACC,GAAA,EAAD,CAAOzG,GAAI,CAAE0G,OAAQ,OAAQC,SAAU,EAAGC,QAAS,GAAnD,SACE,eAAClC,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACV5C,eAAe,SACf6C,WAAW,SACXC,MAAO,CAAEC,UAAW,QALtB,SAOE,gBAACL,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACV5C,eAAe,eACf6C,WAAW,aACX7E,GAAI,CAAE2G,SAAU,GAChBE,QAAS,EANX,UAQE,gBAACC,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,eACf6C,WAAW,SACXgC,QAAS,EAJX,UAME,eAACxD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,oGACNe,QAAQ,WACRtI,MAAOwM,EAAWtM,kBAClBgK,OAAQwC,EAAkBxM,kBAC1ByN,UAAQ,EACR3G,SAAU,SAACC,GAAD,OACRwF,EAAc,6BACTD,GADQ,IAEXtM,kBAAmB+G,EAAMkD,OAAOnK,UAGpCoK,OAAQ,kBACNuC,EAAc,6BACTD,GADQ,IAEXxM,kBAAmB,6BAA6B0N,KAC9CpB,EAAWtM,uBAIjByK,KAAK,QACL/D,GAAI,CAAEC,MAAOuG,KAEf,eAACS,GAAA,EAAD,CACE5N,GAAG,eACHrC,QAAS+F,EAAQmK,MACf,SAACnQ,EAAGmB,GAAJ,OACGA,EAAEwB,SAASyN,WAAWC,cAAcrQ,EAAE2C,SAASyN,eAEpDE,QAAS,SAACC,GAAD,OAAYlB,EAAUkB,EAAO5N,WACtC6N,eAAgB,SAACD,GAAD,OAAYA,EAAOnV,MACnCiO,SAAU,SAACC,EAAYiH,GAAb,OACRzB,EAAc,6BACTD,GADQ,IAEXpJ,WAAuB,OAAX8K,EAAkB,KAAOA,EAAOjO,OAGhD2G,GAAI,CAAEC,MAAOuG,GACbgB,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BACM3K,GADN,IAEEqO,UAAQ,EACRhD,KAAK,QACLpD,MAAM,kFACN2C,OAAQwC,EAAkBtJ,WAC1BgH,OAAQ,kBACNuC,EAAc,6BACTD,GADQ,IAEXtJ,WAAsC,OAA1BoJ,EAAWpJ,qBAOjC,eAAC6G,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,kFACNe,QAAQ,WACRqC,KAAK,QACL/D,GAAI,CAAEC,MAAOuG,GACbO,UAAQ,EACR3N,MAAOwM,EAAWzT,KAClBmR,OAAQwC,EAAkB3T,KAC1BqR,OAAQ,SAACnD,GACPwF,EAAc,6BACTD,GADQ,IAEXzT,KAAMkO,EAAMkD,OAAOnK,MAAMqO,UAE3B1B,EAAc,6BACTD,GADQ,IAEX3T,MAAOsR,KAAUiE,QAAQ9B,EAAWzT,KAAM,CACxCwV,mBAAmB,QAIzBvH,SAAU,SAACC,GAAD,OACRwF,EAAc,6BACTD,GADQ,IAEXzT,KAAMkO,EAAMkD,OAAOnK,YAIzB,eAACiK,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,iCACNe,QAAQ,WACRqC,KAAK,QACL/D,GAAI,CAAEC,MAAOuG,GACbO,UAAQ,EACR3N,MAAOwM,EAAWrM,OAClB6G,SAAU,SAACC,GAAD,OACRwF,EAAc,6BACTD,GADQ,IAEXrM,OAAQ8G,EAAMkD,OAAOnK,UAGzBkK,OAAQwC,EAAkBvM,OAC1BiK,OAAQ,SAACnD,GACPwF,EAAc,6BACTD,GADQ,IAEXrM,OAAQ8G,EAAMkD,OAAOnK,MAAMqO,UAE7B1B,EAAc,6BACTD,GADQ,IAEXvM,QAASkK,KAAUiE,QAAQ9B,EAAWrM,OAAQ,CAC5CoO,mBAAmB,UAK3B,gBAACC,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,UACE,eAACC,GAAA,EAAD,CACEC,MAAO,CAAC,QACRrH,MAAM,6HACNvH,MAAOwM,EAAWhM,cAClBqO,QAAS,IAAI5M,KACb+E,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEXhM,cAAe0G,MAGnBkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,2BACE0D,UAAQ,EACRhD,KAAK,SACDrL,GAHN,IAIEsH,GAAI,CAAEC,MAAOuG,SAInB,eAACuB,GAAA,EAAD,CACEC,MAAO,CAAC,QACRrH,MAAM,6JACNvH,MAAOwM,EAAW/L,oBAClBuG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX/L,oBAAqByG,MAGzBkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEC,MAAO,CAAC,QACRrH,MAAM,4MACNvH,MAAOwM,EAAW9L,6BAClBsG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX9L,6BAA8BwG,MAGlCkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEpH,MAAM,8PACNvH,MAAOwM,EAAW7L,uCAClBqG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX7L,uCAAwCuG,MAG5CkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BACM3K,GADN,IAEEqO,UAAQ,EACRhD,KAAK,QACL/D,GAAI,CAAEC,MAAOuG,SAInB,eAACuB,GAAA,EAAD,CACEpH,MAAM,kRACNvH,MACEwM,EAAW5L,kDAEboG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX5L,kDAAmDsG,MAGvDkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEpH,MAAM,uUACNvH,MAAOwM,EAAW3L,8CAClBmG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX3L,8CAA+CqG,MAGnDkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,eAKzD,gBAACM,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,eACf6C,WAAW,SACXgC,QAAS,EAJX,UAME,eAACqB,GAAA,EAAD,CAAYC,QAAQ,gBAAgBnI,GAAI,CAAEC,MAAOuG,GAAjD,SACE,gBAAC9B,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS5C,eAAe,gBAAlD,UACG,yFAED,eAACoG,GAAA,EAAD,CACE/O,GAAG,gBACHgP,WAAY,CACVC,OAAQ,CAAC,OAAQ,MAAO,UAE1BlI,SAAU,SAACC,GACkB,OAAvBA,EAAMkD,OAAOgF,OACftC,EAAQ,6BACHD,GADE,IAEL7L,kBAAmBkG,EAAMkD,OAAOgF,MAAM,OAI5CzT,KAAK,cAIX,eAACoT,GAAA,EAAD,CAAYC,QAAQ,gBAAgBnI,GAAI,CAAEC,MAAOuG,GAAjD,SACE,gBAAC9B,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS5C,eAAe,gBAAlD,UACG,oNAED,eAACoG,GAAA,EAAD,CACE/O,GAAG,gBACHgP,WAAY,CACVC,OAAQ,CAAC,OAAQ,MAAO,UAE1BlI,SAAU,SAACC,GACkB,OAAvBA,EAAMkD,OAAOgF,OACftC,EAAQ,6BACHD,GADE,IAEL9L,mBAAoBmG,EAAMkD,OAAOgF,MAAM,OAI7CzT,KAAK,cAIX,eAACoT,GAAA,EAAD,CAAYC,QAAQ,gBAAgBnI,GAAI,CAAEC,MAAOuG,GAAjD,SACE,gBAAC9B,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS5C,eAAe,gBAAlD,UACG,uHAED,eAACoG,GAAA,EAAD,CACE/O,GAAG,gBACHgP,WAAY,CACVC,OAAQ,CAAC,OAAQ,MAAO,UAE1BlI,SAAU,SAACC,GACkB,OAAvBA,EAAMkD,OAAOgF,OACftC,EAAQ,6BACHD,GADE,IAEL5L,+BAAgCiG,EAAMkD,OAAOgF,MAAM,OAIzDzT,KAAK,cAIX,eAACoT,GAAA,EAAD,CAAYC,QAAQ,gBAAgBnI,GAAI,CAAEC,MAAOuG,GAAjD,SACE,gBAAC9B,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS5C,eAAe,gBAAlD,UACG,+SAED,eAACoG,GAAA,EAAD,CACE/O,GAAG,gBACHgP,WAAY,CACVC,OAAQ,CAAC,OAAQ,MAAO,UAE1BlI,SAAU,SAACC,GACkB,OAAvBA,EAAMkD,OAAOgF,OACftC,EAAQ,6BACHD,GADE,IAEL3L,2BAA4BgG,EAAMkD,OAAOgF,MAAM,OAIrDzT,KAAK,cAIX,eAACoT,GAAA,EAAD,CAAYC,QAAQ,gBAAgBnI,GAAI,CAAEC,MAAOuG,GAAjD,SACE,gBAAC9B,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAS5C,eAAe,gBAAlD,UACG,kFAED,eAACoG,GAAA,EAAD,CACE/O,GAAG,gBACHgP,WAAY,CACVC,OAAQ,CAAC,OAAQ,MAAO,UAE1BlI,SAAU,SAACC,GACkB,OAAvBA,EAAMkD,OAAOgF,OACftC,EAAQ,6BACHD,GADE,IAEL1L,kBAAmB+F,EAAMkD,OAAOgF,MAAM,OAI5CzT,KAAK,cAIX,eAAC0T,GAAA,EAAD,CAAQ9G,QAAQ,YAAYwC,QA7cb,WACvB,IAAItL,OAAO6P,OAAOzC,GAAM0C,OAAM,SAACC,GAAD,OAAyB,OAAZA,OAEzC/P,OAAO6P,OAAO7C,GAAY8C,OACxB,SAACC,GAAD,OAAyB,OAAZA,GAAgC,KAAZA,MAI5B/P,OAAO6P,OAAO3C,GAAmB4C,OAAM,SAACC,GAAD,OAAaA,KAAxD,CACH,IAAMvR,EAAO,IAAIwR,SAMjBxR,EAAKgB,OAAO,oBAAqBwN,EAAWtM,mBAC5ChE,QAAQC,IAAIqQ,GACZtQ,QAAQC,IAAIyQ,GAEZ5O,EAAKgB,OACH,aAC0B,OAA1BwN,EAAWpJ,WAAsB,GAAKoJ,EAAWpJ,WAAW2K,YAE9D/P,EAAKgB,OAAO,OAAQwN,EAAWzT,MAC/BiF,EAAKgB,OACH,gBAC6B,OAA7BwN,EAAWhM,cACP,GACArD,GAAQqP,EAAWhM,eAAeuN,YAED,OAAnCvB,EAAW/L,qBACbzC,EAAKgB,OACH,sBACA7B,GAAQqP,EAAW/L,qBAAqBsN,YAGI,OAA5CvB,EAAW9L,8BACb1C,EAAKgB,OACH,+BACA7B,GAAQqP,EAAW9L,8BAA8BqN,YAGrD/P,EAAKgB,OACH,yCACsD,OAAtDwN,EAAW7L,uCACP,GACA3D,GAAWwP,EAAW7L,yCAGuC,OAAjE6L,EAAW5L,mDAEX5C,EAAKgB,OACH,oDACAhC,GACEwP,EAAW5L,oDAIgD,OAA7D4L,EAAW3L,+CACb7C,EAAKgB,OACH,gDACAhC,GAAWwP,EAAW3L,gDAIM,OAA5B+L,EAAK9L,oBACP9C,EAAKgB,OAAO,qBAAsB4N,EAAK9L,oBAGV,OAA3B8L,EAAK7L,mBACP/C,EAAKgB,OAAO,oBAAqB4N,EAAK7L,mBAGI,OAAxC6L,EAAK5L,gCACPhD,EAAKgB,OACH,iCACA4N,EAAK5L,gCAI+B,OAApC4L,EAAK3L,4BACPjD,EAAKgB,OACH,6BACA4N,EAAK3L,4BAIsB,OAA3B2L,EAAK1L,mBACPlD,EAAKgB,OAAO,oBAAqB4N,EAAK1L,mBAGxClD,EAAKgB,OAAO,SAAUwN,EAAWrM,QAEjC8K,ED3GsB,SAACjN,GAAD,8CAAoB,WAAOiN,GAAP,eAAAtN,EAAA,+EAE1BoH,GAAc0K,UAAUzR,GAFE,OAEtC8F,EAFsC,OAG5C5H,QAAQC,IAAI2H,GAEZmH,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,UACR0L,MAAO,WACPzL,QAAS,0BAT+B,gDAa5CT,QAAQC,IAAR,MACA8O,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,6BAlB+B,yDAApB,sDC2Gb+S,CAAa1R,MAgXhB,yE,sEChfG,SAAS2R,GAAWrQ,GAE/B,IAAD,EAC+BsQ,mBAAS,IADxC,oBACMC,EADN,KACaC,EADb,KAED,OACE,eAACnJ,GAAA,EAAD,CACEsB,UAAU,OACVrB,GAAI,CACF,uBAAwB,CAAEmJ,EAAG,EAAGlJ,MAAO,SAEzCmJ,YAAU,EACVzF,aAAa,MANf,SAQE,gBAAC8C,GAAA,EAAD,CACEpF,UAAU,OACVrB,GAAI,CACFqJ,EAAG,UACHnJ,QAAS,OACT2E,WAAY,SACZ5E,MAAO,KANX,UASE,eAACoD,GAAA,EAAD,CACEiG,WAAS,EACTjQ,GAAG,4BACHsH,MAAM,eACN7L,KAAK,SACLsL,SAAU,SAACC,GACT6I,EAAe7I,EAAMkD,OAAOnK,UAGhC,eAACoJ,GAAA,EAAD,CAASxC,GAAI,CAAEmC,OAAQ,GAAIgH,EAAG,IAAOI,YAAY,aAEjD,eAACf,GAAA,EAAD,CAAQ9G,QAAQ,OAAOwC,QAAS,kBAAMxL,EAAO8Q,SAASP,IAAtD,iD,gECjCO,SAASQ,GAAaC,GAGjC,IAoDgCC,EApDjC,EAC6BhK,WAVN,SAACiK,GACzB,IAAMtJ,EAAoB,GAE1B,OADAsJ,EAAE7M,QAAQmJ,SAAQ,SAAC7P,GAAD,OAAQiK,EAASjK,EAAEgD,IAAM,CAAEvD,QAAQ,MAC9CwK,EAQLuJ,CAAkBH,EAAM3M,UAFzB,oBACM+M,EADN,KACeC,EADf,KAKKC,EAAqB,SAAC3J,GAC1B,IAAMxH,EAAOD,OAAOC,KAAKiR,GACnBxJ,EAAoB,GAC1BzH,EAAKqN,SAAQ,SAAC+D,GAAD,OAAQ3J,EAAS2J,GAAK,CAAEnU,OAAQuK,EAAMkD,OAAOuG,YAC1DC,EAAWzJ,GACXoJ,EAAMQ,SAAS5J,EAAUoJ,EAAM3M,QAAQrD,WAGnCyQ,EAAoB,SAAC9J,GACzB,IAAMtH,EAAMsH,EAAMkD,OAAOnK,MACnBkH,EAAiB,gBAClBwJ,GAELxJ,EAASvH,GAAO,CAAEjD,OAAQuK,EAAMkD,OAAOuG,SACvCC,EAAWzJ,GACXoJ,EAAMQ,SAAS5J,EAAUoJ,EAAM3M,QAAQrD,WAGnC0Q,EAAc,SAACC,GAEnB,IADUP,EAAQO,EAAOhR,IACjB,CACN,IAAMiR,EAAaR,EACnBQ,EAAWD,EAAOhR,IAAM,CAAEvD,QAAQ,GAClCiU,EAAWO,GAGb,OACE,eAACC,GAAA,EAAD,CAEEC,OAAQH,EAAOlY,KACfwO,MACE,eAAC8J,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEvR,MAAOiR,EAAOhR,GACdyQ,QAASA,EAAQO,EAAOhR,IAAIvD,OAC5BsK,SAAU+J,IAGdxJ,MAAO0J,EAAOlY,MACTkY,EAAOhR,KAZXgR,EAAOhR,KAgDlB,OACE,eAACuR,GAAA,EAAD,CACEC,oBAAqB,eAACC,GAAA,EAAD,IACrBC,kBAAmB,eAACC,GAAA,EAAD,IACnBhL,GAAI,CAAE2G,SAAU,EAAG1G,MAAO,KAH5B,UA9BgC0J,EAmCJD,EAAM3M,QAjChC,eAACwN,GAAA,EAAD,CAEEC,OAAQb,EAAQxX,KAChBwO,MACE,eAAC8J,GAAA,EAAD,CACEC,QACE,eAACC,GAAA,EAAD,CACEM,cACErS,OAAOC,KAAKiR,GAASoB,MAAK,SAACC,GAAD,OAAQrB,EAAQqB,GAAIrV,YAC9C8C,OAAOC,KAAKiR,GAASpB,OAAM,SAACyC,GAAD,OAAQrB,EAAQqB,GAAIrV,UAEjDgU,QAASlR,OAAOC,KAAKiR,GAASpB,OAAM,SAACyC,GAAD,OAAQrB,EAAQqB,GAAIrV,UACxDsK,SAAU4J,IAGdrJ,MAAOgJ,EAAQxX,MACVwX,EAAQjQ,UAhBnB,SAoBG0R,MAAMC,QAAQ1B,EAAQ5M,SACnB4M,EAAQ5M,QAAQjE,IAAIsR,GACpB,MArBCT,EAAQjQ,aC1DrB,IAaa4R,GAAS,SAAC5B,GAGrB,IACM6B,EAjBW,SAAC5W,GAClB,OAAOA,EAAM0R,QAAO,SAACC,EAAcC,GAMjC,OALAD,EAAIC,EAAIlN,IAAM,CACZlH,KAAMoU,EAAIpU,KACVuH,SAAU6M,EAAIlN,GACd0D,QAAQ,aAAKwJ,EAAIxJ,UAEZuJ,IACN,IASckF,CADHtM,GAAiBrK,GACGF,OAE5B0P,EAAWrF,KAEjBW,aAAgB,WACd0E,EAASe,QACR,CAACf,IARA,MAU4B1E,WAAyB,IAVrD,oBAUG8L,EAVH,KAUaC,EAVb,KAYEC,EAAehM,eAAkB,SAACxN,GACtC,IAAMyZ,EAAgB,GAStB,OARAhT,OAAO6P,OAAOgD,GAAUvF,SAAQ,SAACiF,GAC/BvS,OAAOC,KAAKsS,GAAIjF,SAAQ,SAAC2F,UAK3BvW,QAAQC,IAAIqW,EAAI3S,KAAK,KAAM,QAEpByQ,EAAMQ,SAAS/X,EAAMyZ,EAAI3S,KAAK,QACpC,IAEH,OACE,qCACE,eAACwN,GAAA,EAAD,CAAOzG,GAAI,CAAE0G,OAAQ,OAAQC,SAAU,EAAG1G,MAAO,QAAjD,SACE,eAACF,GAAA,EAAD,CAAKC,GAAI,CAAE2G,SAAU,EAAG0C,EAAG,GAA3B,SACE,gBAAC3E,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACV5C,eAAe,eACf6C,WAAW,aACXgC,QAAS,EALX,UAOE,eAACkC,GAAD,CAAYS,SAAUmC,IAEtB,eAAC7E,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,aACf6C,WAAW,aACXgC,QAAS,EAJX,SAMGjO,OAAOC,KAAK0S,GAAUzS,KAAI,SAACM,GAU1B,OACE,eAACqQ,GAAD,CACE1M,QAASwO,EAASO,OAAO1S,IACzB8Q,SAZsB,SACxB6B,EACAhT,GAEA,IAAMuH,EAAkB,gBAAQmL,GAChCnL,EAASvH,GAAOgT,EAChBzW,QAAQC,IAAI+K,GACZoL,EAAYpL,qB,mFC5BxB0L,GAAoB,CACxB,CAAE3S,GAAI,SAAUsH,MAAO,SAAKsL,SAAU,GAAI3V,OAAQ0C,QAClD,CAAEK,GAAI,OAAQsH,MAAO,oGAAqBsL,SAAU,IACpD,CACE5S,GAAI,OACJsH,MAAO,kFACPrK,OAAQ,SAAC8C,GAAD,OACN,uCACE,6BAAIA,EAAM,KACV,wBACCA,EAAM,OAGX6S,SAAU,IAEZ,CAAE5S,GAAI,OAAQsH,MAAO,kFAAkBsL,SAAU,IACjD,CAAE5S,GAAI,YAAasH,MAAO,yIAC1B,CAAEtH,GAAI,UAAWsH,MAAO,6HAA0BrK,OAAQ0C,QAC1D,CACEK,GAAI,UACJsH,MAAO,6JACPrK,OAAQ,SAAC8C,GAAD,OAA2BA,EAAQJ,OAAOI,GAAS,QAE7D,CACEC,GAAI,SACJsH,MAAO,4MACPrK,OAAQ,SAAC8C,GAAD,OAA2BA,EAAQJ,OAAOI,GAAS,QAE7D,CACEC,GAAI,aACJsH,MAAO,8PACPrK,OAAQF,IAEV,CACEiD,GAAI,qBACJsH,MAAO,qVACPrK,OAAQ,SAAC8C,GAAD,OAAyBA,EAAQhD,GAAWgD,GAAS,QAE/D,CACEC,GAAI,YACJsH,MAAO,uUACPrK,OAAQ,SAAC8C,GAAD,OAAyBA,EAAQhD,GAAWgD,GAAS,SAI3D8S,GAA2B,CAC/B,CACE7S,GAAI,OACJsH,MAAO,0GACPrK,OAAQ,SAAC8C,GAAD,OACN,eAACoP,GAAA,EAAD,CACE/F,MAAM,OACN0J,UAAW,eAAC,KAAD,IACXzK,QAAQ,YACRwC,QAAS,WACP9K,EAAM8M,SAAQ,SAACtJ,EAAGwP,GAChBpU,MAAM4E,GACH0I,MAAK,SAACpI,GAAD,OAASA,EAAImP,UAClB/G,MAAK,SAAC+G,GACL,IAAM/M,EAAO,IAAIgN,IAAI1P,GAAG6C,SACxB8M,KAAOF,EAAD,cAAcD,GAAd,OAAoBnH,WAAa3F,YAVjD,oBAmBJ,CACEjG,GAAI,aACJsH,MAAO,sEACPrK,OAAQ,SAAC8C,GAAD,OACN,eAACoP,GAAA,EAAD,CACE/F,MAAM,YACN7B,KAAI,UAAKjP,EAAL,YAAwByH,GAC5B+S,UAAW,eAAC,KAAD,IACXzK,QAAQ,YAJV,qBA6DN,IAAM8K,GAA8B,CAClCla,KAAM,EACNC,MAAO,IAGM,SAASka,KAAe,IAC7BhN,EAAaC,cAAbD,SAEFpN,EAAU6M,GAAiBjM,GAC3B8K,EAAOmB,GAAiBP,IACxB0F,EAAWrF,KAEjBW,aAAgB,WACd0E,EAASoB,GAAiB+G,OACzB,CAACnI,IAEJ,IAKMsH,EAAehM,eACnB,SAACxN,EAAcyZ,GACbY,GAAcla,KAAO,EACrBka,GAAcja,MAAQ,GACtB+C,QAAQC,IAAIqW,GAEZY,GAAcZ,IAAMA,EACpBY,GAAcra,KAAOA,EACrBkS,EAASoB,GAAiB+G,OAE5B,CAACnI,IAGH,OACE,gBAACK,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SAEVC,WAAW,SAJb,UAMGpF,IAAa9N,GAAmB,eAAC,GAAD,CAAQuY,SAAUyB,IAEnD,gBAAClF,GAAA,EAAD,CAAOzG,GAAI,CAAEC,MAAO,QAApB,UACE,eAACyM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAOC,cAAY,EAACrM,aAAW,eAA/B,UACE,eAACsM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACGd,GAAQlT,KAAI,SAACiU,GAAD,OACX,eAACC,GAAA,EAAD,CAEEC,MAAOF,EAAOE,MACdnI,MAAO,CAAEmH,SAAUc,EAAOd,UAH5B,SAKGc,EAAOpM,OAJHoM,EAAO1T,OAOD,gBAAd0E,EAAKQ,MACJ2N,GAAepT,KAAI,SAACiU,GAAD,OACjB,eAACC,GAAA,EAAD,CAEEC,MAAOF,EAAOE,MACdnI,MAAO,CAAEmH,SAAUc,EAAOd,UAH5B,SAKGc,EAAOpM,OAJHoM,EAAO1T,YAStB,eAAC6T,GAAA,EAAD,UACG7a,EAAQA,QAAQyG,KAAI,SAAC5F,EAAQia,GAC5B,IAAMC,EAxGtB,SAAoBla,EAAmBia,EAAeE,GACpD,MAAO,CACLC,OAAQH,EACRrP,KAAM5K,EAAOoG,kBACbxE,KAAM,CACJ5B,EAAOuG,gBAAgBE,eAAexH,KACtCe,EAAOuG,gBAAgBtH,MAEzBA,KAAMe,EAAOf,KACbob,UAAWra,EAAOqG,OAClBiU,QAASta,EAAO0G,cAChB6T,QAASva,EAAO2G,oBAChB6T,OAAQxa,EAAO4G,6BACf6T,WAAY,IAAItS,KAAKnI,EAAO6G,wCAC5B6T,mBAAoB1a,EAAO8G,kDACvB,IAAIqB,KAAKnI,EAAO8G,mDAChB,KACJ6T,UAAW3a,EAAO+G,8CACd,IAAIoB,KAAKnI,EAAO+G,+CAChB,KACJ+L,KAAMqH,EACF,CACEna,EAAOkH,+BACPlH,EAAOmH,2BACPnH,EAAOgH,mBACPhH,EAAOoH,kBACPpH,EAAOiH,wBAET2T,EACJC,WAAYV,EAAWna,EAAOmG,QAAKyU,GA2EXtC,CACVtY,EACAia,EAAQ,EAAI9a,EAAQE,OAASF,EAAQC,KAAO,GAC9B,gBAAdyL,EAAKQ,MAEP,OACE,gBAACuO,GAAA,EAAD,CAAUkB,OAAK,EAACzP,KAAK,WAAW0P,UAAW,EAA3C,UACGjC,GAAQlT,KAAI,SAACiU,GACZ,IAAM3T,EAAQgU,EAAIL,EAAO1T,IACzB,OACE,eAAC2T,GAAA,EAAD,CAA2BC,MAAOF,EAAOE,MAAzC,SACGF,EAAOzW,QAA2B,kBAAV8C,EACrB2T,EAAOzW,OAAO8C,GACdA,GAHU2T,EAAO1T,OAOZ,gBAAd0E,EAAKQ,MACJ2N,GAAepT,KAAI,SAACiU,GAClB,IAAM3T,EAAQgU,EAAIL,EAAO1T,IACzB,OACE,eAAC2T,GAAA,EAAD,CAA2BC,MAAOF,EAAOE,MAAzC,SACGF,EAAOzW,QAA2B,kBAAV8C,EACrB2T,EAAOzW,OAAO8C,GACdA,GAHU2T,EAAO1T,SAfoB6U,kBA4B7D,eAACC,GAAA,EAAD,CACE7b,KAAMD,EAAQC,KACdC,MAAOF,EAAQG,WACf4N,SA5FiB,SAACC,EAAgB+N,GACxC5B,GAAcla,KAAO8b,EACrB/J,EAASoB,GAAiB+G,MA2FpB9K,QAAQ,WACR2M,MAAM,UACNtK,KAAK,gBChSR,IAAMuK,GACX,SAAC5T,GAAD,OAAwB,SAAC2J,GACvBrG,GACGuQ,SAAS7T,GACT4K,MAAK,SAAC5I,GACL2H,EACEpQ,EAAiBJ,aAAa,CAC5BL,WAAYkJ,EAAMA,MAClBjK,WAAYiK,EAAMnK,MAClBD,KAAMoI,EAAOpI,WAIlBiG,OAAM,SAAC+K,GAAD,OACLe,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,qCAMRyY,GAAsB,yDAAM,WAAOnK,GAAP,SAAAtN,EAAA,sDACvC0X,QAAQC,IAAI,CACV1Q,GAAY2Q,mBACZ3Q,GAAY4Q,eACZ5Q,GAAY6Q,iBACZ7Q,GAAY8Q,iBAEXxJ,MAAK,SAACmD,GACL,IAAMhV,EAAgBgV,EAAO,GAAGpC,QAC9B,SACEC,EACAC,GAKA,OAHAD,EAAIC,EAAIlN,IAAM,CACZlH,KAAMoU,EAAIpU,MAELmU,IAET,IAEFhR,QAAQC,IAAI9B,EAAe,iBAE3B,IAAMC,EAAY+U,EAAO,GAAGpC,QAC1B,SACEC,EACAC,GASA,OAPAD,EAAIC,EAAIlN,IAAM,CACZoE,KAAM8I,EAAI9I,KACVC,YAAa6I,EAAI7I,aAAe,KAChCC,aAAc4I,EAAI5I,aAClBC,OAAQ2I,EAAI3I,OACZC,OAAQ0I,EAAI1I,QAEPyI,IAET,IAEI3S,EAAc8U,EAAO,GAAGpC,QAC5B,SACEC,EAOAC,GAOA,OALAD,EAAIC,EAAIlN,IAAM,CACZyE,KAAMyI,EAAIzI,KACVhC,UAAWyK,EAAIzK,UACf3J,KAAMoU,EAAIpU,MAELmU,IAET,IAEI1S,EAAW6U,EAAO,GAAGpC,QACzB,SACEC,EACAC,GAKA,OAHAD,EAAIC,EAAIlN,IAAM,CACZlH,KAAMoU,EAAIpU,MAELmU,IAET,IAEFhR,QAAQC,IAAI5B,EAAa,eAEzB0Q,EACEpQ,EAAiBH,aAAa,CAC5BL,cAAeA,EACfE,YAAaA,EACbD,UAAWA,EACXE,SAAUA,QAIf2E,OAAM,SAAC+K,GACNe,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,6CAtFsB,2CAAN,uDCT7ByQ,GAAS,IAqBTuI,GAAoC,CACxC5T,UAAW,GACXC,cAAe,KACfG,gBAAiB,GACjBC,0BAA2B,KAC3BC,sCAAuC,KACvCC,IAAK,GACLC,MAAO,GACPC,QAAS,KACTC,iBAAkB,KAClBG,gBAAiB,GACjBD,YAAa,KACb6B,OAAQ,GACRH,KAAM,GACNI,OAAQ,GACRF,aAAc,KACdD,YAAa,MAmBTsR,GAAgC,CACpC7T,WAAW,EACXI,iBAAiB,EACjBE,uCAAuC,EACvCC,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,kBAAkB,EAClBG,iBAAiB,EACjBD,aAAa,EACb6B,QAAQ,EACRH,MAAM,EACNI,QAAQ,EACRF,cAAc,GAGT,SAASsR,KACd,IAAM5K,EAAWrF,KAEXkQ,EAAqBhQ,GAAiBnL,GAE5C4L,aAAgB,WACd0E,EAASmK,QACR,CAACnK,IAPuB,MAUzB1E,WAA4BoP,IAVH,oBASpBI,EAToB,KASVC,EATU,OAYzBzP,WAA2BqP,IAZF,oBAWpBK,EAXoB,KAqDrB5b,GArDqB,KAqDLmF,OAAOC,KAAKqW,EAAmBzb,eAAeqF,KAClE,SAAC8D,GAAD,MAAQ,CAAEvD,GAAIyS,OAAOlP,GAAIzK,KAAM+c,EAAmBzb,cAAcmJ,GAAGzK,UAI/DwB,EAAciF,OAAOC,KAAKqW,EAAmBvb,aAAamF,KAAI,SAAC8D,GAAD,MAAQ,CAC1EvD,GAAIyS,OAAOlP,GACXzK,KAAM+c,EAAmBvb,YAAYiJ,GAAGzK,SAIpCmd,EAAY1W,OAAOC,KAAKqW,EAAmBtb,UAAUkF,KAAI,SAAC8D,GAAD,MAAQ,CACrEvD,GAAIyS,OAAOlP,GACXzK,KAAM+c,EAAmBtb,SAASgJ,GAAGzK,SAGvC,OACE,gBAACsU,GAAA,EAAD,CACEzG,GAAI,CACF0G,OAAQ,OACRC,SAAU,EAEVC,QAAS,GALb,UAQE,gBAAClC,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACV5C,eAAe,eACf6C,WAAW,aAEXgC,QAAS,EANX,UAQE,gBAACC,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,aACf6C,WAAW,SACXgC,QAAS,EACT7G,GAAI,CAAEqJ,EAAG,GALX,UAOE,eAACpC,GAAA,EAAD,CACEsI,eAAa,EACblW,GAAG,iBACHrC,QAASvD,EACTuM,GAAI,CAAEC,MAAOuG,IACbe,eAAgB,SAACD,GAAD,OAAYA,EAAOnV,MACnCiO,SAAU,SACRC,EACAiH,GAFQ,OAIR8H,EAAY,6BACPD,GADM,IAETtT,iBAA6B,OAAXyL,EAAkB,KAAOA,EAAOjO,OAGtDmO,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBiI,MAAM,yIAGjC,eAAC0C,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,qBACNe,QAAQ,WACRqF,UAAQ,EACR3N,MAAO+V,EAAShU,UAChBiF,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAEThU,UAAWkF,EAAMkD,OAAOnK,UAG5B4G,GAAI,CAAEC,MAAOuG,MAEf,eAACoB,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACE,eAACC,GAAA,EAAD,CACEpH,MAAM,wFACNvH,MAAO+V,EAAS/T,cAChBgF,SAAU,SAACE,GACT8O,EAAY,6BAAKD,GAAN,IAAgB/T,cAAekF,MAE5CkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBsH,GAAI,CAAEC,MAAOuG,eAK5C,gBAACM,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,aACf6C,WAAW,SACXgC,QAAS,EACT7G,GAAI,CAAEqJ,EAAG,GALX,UAOE,eAACpC,GAAA,EAAD,CACEsI,eAAa,EACblW,GAAG,iBACHrC,QAASsY,EACTtP,GAAI,CAAEC,MAAOuG,IACbe,eAAgB,SAACD,GAAD,OAAYA,EAAOnV,MACnCiO,SAAU,SACRC,EACAiH,GAFQ,OAIR8H,EAAY,6BACPD,GADM,IAETpT,YAAwB,OAAXuL,EAAkB,KAAOA,EAAOjO,OAGjDmO,YAAa,SAAC9O,GAAD,OAAY,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBiI,MAAM,6CAExD,eAACsG,GAAA,EAAD,CACEsI,eAAa,EACblW,GAAG,iBACHrC,QAASrD,EACTqM,GAAI,CAAEC,MAAOuG,IACbe,eAAgB,SAACD,GAAD,OAAYA,EAAOnV,MACnCiO,SAAU,SACRC,EACAiH,GAFQ,OAIR8H,EAAY,6BACPD,GADM,IAET1T,sCACa,OAAX6L,EAAkB,KAAOA,EAAOjO,OAGtCmO,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBiI,MAAM,yIAGjC,eAAC0C,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,kFACNe,QAAQ,WACRqF,UAAQ,EACR3N,MAAO+V,EAASnT,gBAChBoE,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAETnT,gBAAiBqE,EAAMkD,OAAOnK,UAGlC4G,GAAI,CAAEC,MAAOuG,MAEf,eAACnD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,kFACNe,QAAQ,WACRtI,MAAO+V,EAAS5T,gBAChB6E,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAET5T,gBAAiB8E,EAAMkD,OAAOnK,UAGlC4G,GAAI,CAAEC,MAAOuG,MAEf,eAACoB,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACE,eAACC,GAAA,EAAD,CACEpH,MAAM,iHACNvH,MAAO+V,EAAS3T,0BAChB4E,SAAU,SAACE,GACT8O,EAAY,6BACPD,GADM,IAET3T,0BAA2B8E,MAG/BkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBsH,GAAI,CAAEC,MAAOuG,eAK5C,gBAACM,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,aACf6C,WAAW,SACXgC,QAAS,EACT7G,GAAI,CAAEqJ,EAAG,GALX,UAkCE,eAAChG,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,6PACNe,QAAQ,WACRqF,UAAQ,EACR3N,MAAO+V,EAASzT,IAChB0E,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAETzT,IAAK2E,EAAMkD,OAAOnK,UAGtB4G,GAAI,CAAEC,MAAOuG,MAEf,eAACnD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,oGACNe,QAAQ,WACRqF,UAAQ,EACR3N,MAAO+V,EAASxT,MAChByE,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAETxT,MAAO0E,EAAMkD,OAAOnK,UAGxB4G,GAAI,CAAEC,MAAOuG,MAEf,eAACnD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,oGACNe,QAAQ,WACRqF,UAAQ,EACR3N,MAAO+V,EAASxT,MAChByE,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAETxT,MAAO0E,EAAMkD,OAAOnK,UAGxB4G,GAAI,CAAEC,MAAOuG,MACZ,IACH,eAACnD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,oGACNe,QAAQ,WACRqF,UAAQ,EACR3N,MAAO+V,EAASxT,MAChByE,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAETxT,MAAO0E,EAAMkD,OAAOnK,UAGxB4G,GAAI,CAAEC,MAAOuG,MACZ,IACH,eAACnD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,oGACNe,QAAQ,WACRqF,UAAQ,EACR3N,MAAO+V,EAASxT,MAChByE,SAAU,SAACC,GAAD,OACR+O,EAAY,6BACPD,GADM,IAETxT,MAAO0E,EAAMkD,OAAOnK,UAGxB4G,GAAI,CAAEC,MAAOuG,YAInB,eAACzG,GAAA,EAAD,CAAKyP,UAAU,SAAf,SACE,eAAChH,GAAA,EAAD,CAAQ9G,QAAQ,WAAWwC,QA/TR,WACvB,IACEtL,OAAO6P,OAAO0G,GAAUzG,OACtB,SAACC,GAAD,OAAyB,OAAZA,GAAgC,KAAZA,MAI5B/P,OAAO6P,OAAO4G,GAAiB3G,OAAM,SAACC,GAAD,OAAaA,KAAU,CACnE,IAAM5K,EAAsB,CAC1BpC,MAAOwT,EAASxT,MAChBR,UAAWgU,EAAShU,UACpBC,cAC6B,OAA3B+T,EAAS/T,cACLhF,GAAW+Y,EAAS/T,eACpB,GACNG,gBAAiB4T,EAAS5T,gBAC1BS,gBAAiBmT,EAASnT,gBAC1BR,0BACyC,OAAvC2T,EAAS3T,0BACLpF,GAAW+Y,EAAS3T,2BACpB,GACNC,sCACqD,OAAnD0T,EAAS1T,sCACL,EACA0T,EAAS1T,sCACfC,IAAKyT,EAASzT,IACdG,iBACgC,OAA9BsT,EAAStT,iBAA4B,EAAIsT,EAAStT,iBACpDE,YAAsC,OAAzBoT,EAASpT,YAAuB,EAAIoT,EAASpT,YAC1D6B,OAAQuR,EAASvR,OACjBH,KAAM0R,EAAS1R,KACfI,OAAQsR,EAAStR,OACjBF,aAC4B,OAA1BwR,EAASxR,aAAwB,EAAIwR,EAASxR,aAChDD,YAAayR,EAASzR,aAExB2G,EDpBJ,SAACtG,GAAD,8CAAyB,WAAOsG,GAAP,eAAAtN,EAAA,+EAEHiH,GAAYyR,SAAS1R,GAFlB,OAEfb,EAFe,OAGrB5H,QAAQC,IAAI2H,GAEZmH,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,UACR0L,MAAO,WACPzL,QAAS,uBATQ,gDAarBT,QAAQC,IAAR,MACA8O,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,2BAlBQ,yDAAzB,sDCoBa2Z,CAAW3R,MA2RlB,mE,oJCvYR,SAAS4R,GAAIjG,GAWX,IAAMrF,EAAWrF,KADhB,EAGuCW,YAAe,GAHtD,oBAGMiQ,EAHN,KAGoBC,EAHpB,OAI2ClQ,YAAe,GAJ1D,oBAIMmQ,EAJN,KAIsBC,EAJtB,OAK+CpQ,YAAe,GAL9D,oBAKMqQ,EALN,KAKwBC,EALxB,KAeD,OACE,gBAAC,WAAD,WACE,gBAACnD,GAAA,EAAD,CAAU9M,GAAI,CAAE,QAAS,CAAEkQ,aAAc,UAAzC,UACE,eAAClD,GAAA,EAAD,UACE,eAAC5L,GAAA,EAAD,CACEb,aAAW,aACXwD,KAAK,QACLG,QAAS,kBAAM2L,GAAiBD,IAHlC,SAKGA,EAAe,eAAC,KAAD,IAA0B,eAAC,KAAD,QAG9C,eAAC5C,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACGzG,EAAM0D,IAAIjS,YAEb,gBAAC6R,GAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,eAACzE,GAAA,EAAD,CACE9G,QAAQ,YACRwC,QAAS,kBAAM6L,GAAkB,IACjCK,QAAS,eAAC,KAAD,IAHX,kBAOA,gBAACC,GAAA,EAAD,CACEC,KAAMR,EACNS,QAAS,kBAAMR,GAAkB,IACjCS,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,eAACC,GAAA,EAAD,CAAarX,GAAG,qBAAhB,SACG,0MAEH,eAACsX,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAmBvX,GAAG,2BAAtB,+PACmDqQ,EAAM0D,IAAIzR,MAD7D,KAEG,sEAGL,gBAACkV,GAAA,EAAD,WACE,eAACrI,GAAA,EAAD,CAAQtE,QA/CO,Wd8CR,IAAC7K,Ec7ClBgL,Gd6CkBhL,Ec7CIqQ,EAAM0D,IAAI/T,Gd6CC,SAACgL,GACpCrG,GACG8S,aAAazX,GACbiM,MAAK,SAACpI,GAAD,OACJmH,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,UACR0L,MAAO,WACPzL,QAAQ,0KAAD,OAAqCmH,EAAIvB,aAIrDpD,OAAM,SAAC+K,GACNhO,QAAQC,IAAI+N,GAEZe,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,mCclBgCgb,WAAS,EAA9C,gCAGA,eAACvI,GAAA,EAAD,CAAQtE,QAAS,kBAAM6L,GAAkB,IAAzC,mCAIN,gBAAC/C,GAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,eAACzE,GAAA,EAAD,CACE9G,QAAQ,WACRwC,QAAS,kBAAM+L,GAAoB,IACnC9D,UAAW,eAAC,KAAD,IAHb,oBAOA,gBAACkE,GAAA,EAAD,CACEC,KAAMN,EACNO,QAAS,kBAAMN,GAAoB,IACnCO,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,eAACC,GAAA,EAAD,CAAarX,GAAG,qBAAhB,SACG,yHAEH,eAACsX,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAmBvX,GAAG,2BAAtB,UACG,yOACA,sEAGL,gBAACwX,GAAA,EAAD,WACE,eAACrI,GAAA,EAAD,CAAQtE,QA1EK,WdmER,IAAC7K,EclEhBgL,GdkEgBhL,EclEIqQ,EAAM0D,IAAI/T,GdkEf,uCAAgB,WAAOgL,GAAP,SAAAtN,EAAA,+EAEbiH,GAAYgT,eAAe3X,GAFd,cAG/BgL,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,UACR0L,MAAO,WACPzL,QAAS,oKAPkB,gDAW/BT,QAAQC,IAAR,MAEA8O,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,8BAjBkB,yDAAhB,yDcO8Bgb,WAAS,EAA5C,gCAGA,eAACvI,GAAA,EAAD,CAAQtE,QAAS,kBAAM+L,GAAoB,IAA3C,sCAMR,eAACnD,GAAA,EAAD,UACE,eAACE,GAAA,EAAD,CAAWlI,MAAO,CAAEmM,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACE,eAACC,GAAA,EAAD,CAAUC,GAAIzB,EAAc0B,QAAQ,OAAOC,eAAa,EAAxD,SACE,gBAACxR,GAAA,EAAD,CAAKC,GAAI,CAAE0G,OAAQ,GAAnB,UACE,eAACjF,GAAA,EAAD,CAAYC,QAAQ,KAAK0B,cAAY,EAAC/B,UAAU,MAAhD,yGAGA,eAACsL,GAAA,EAAD,CAAO5I,KAAK,QAAQxD,aAAW,YAA/B,SACE,gBAAC2M,GAAA,EAAD,WAEI,gBAACJ,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG,qIAEH,eAACnD,GAAA,EAAD,UAAYtD,EAAM8H,iBAJLtD,QAQf,gBAACpB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG,0FAEH,eAACnD,GAAA,EAAD,UAAYtD,EAAM0D,IAAIhS,kBAJT8S,QAQf,gBAACpB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG,oFAEH,eAACnD,GAAA,EAAD,UAAYtD,EAAM0D,IAAI7R,oBAJT2S,QAQf,gBAACpB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG,oFAEH,eAACnD,GAAA,EAAD,UAAYtD,EAAM0D,IAAIpR,oBAJTkS,QAQf,gBAACpB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG,mHAEH,eAACnD,GAAA,EAAD,UACGtD,EAAM0D,IAAI5R,8BALA0S,QAUf,gBAACpB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG,2HAEH,eAACnD,GAAA,EAAD,oBAAetD,EAAM+H,UAAUtf,KAA/B,cAAyCuX,EAAM+H,UAAU3T,UAJ5CoQ,QAQf,gBAACpB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SAEI,0SAGJ,eAACnD,GAAA,EAAD,UAAYtD,EAAM0D,IAAI1R,QANTwS,QAUf,gBAACpB,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG,gGAEH,eAACnD,GAAA,EAAD,UAAYtD,EAAM0D,IAAIzR,UAJTuS,yBAiBnC,IAAMwD,GAAyB,CAC7Bpf,KAAM,EACNC,MAAO,IAGM,SAASof,KACtB,IAAMne,EAAa0L,GAAiBnL,GAE9BsQ,EAAWrF,KAEjBW,aAAgB,WACd0E,EAASmK,MACTnK,EAASiK,GAAoBoD,OAC5B,CAACrN,IAEC7Q,EAAWC,eACd4Q,EAASmK,MAG0B,IAAjChb,EAAWA,WAAWoe,QACxBvN,EAASiK,GAAoBoD,KAQ/B,OACmC,IAAjCle,EAAWA,WAAWoe,QAC2B,IAAjDhZ,OAAOC,KAAKrF,EAAWC,eAAeme,OAGpC,gBAAClF,GAAA,EAAD,CAAgBrL,UAAWoF,KAA3B,UACE,gBAACkG,GAAA,EAAD,CAAOpM,aAAW,oBAAlB,UACE,eAACsM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,IACA,eAACA,GAAA,EAAD,oGACA,eAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,+IACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,mEAGJ,eAACC,GAAA,EAAD,UACG1Z,EAAWA,WAAWsF,KAAI,SAACsU,GAAD,OACzB,eAACuC,GAAD,CAEEvC,IAAKA,EACLoE,aACEhe,EAAWC,cAAc2Z,EAAIvR,kBAAkB1J,KAEjD0f,QAASre,EAAWE,UAAU0Z,EAAItR,WAClC2V,UACEje,EAAWG,YACTyZ,EAAI3R,uCAGRqW,SAAU,kBAAMzN,EAASiK,GAAoBoD,OAXxCtE,EAAI/T,YAgBjB,eAAC8U,GAAA,EAAD,CACE7b,KAAMkB,EAAWlB,KACjBC,MAAOiB,EAAWhB,WAClB4N,SA1CiB,SAACC,EAAgB+N,GACxCsD,GAAWpf,KAAO8b,EAClB/J,EAASiK,GAAoBoD,MAyCvBhQ,QAAQ,WACR2M,MAAM,UACNtK,KAAK,aAID,KCtSP,IAAMgO,GACX,SAACrX,GAAD,OAA+B,SAAC2J,GAC9BpG,GACG+T,gBAAgBtX,GAChB4K,MAAK,SAAClR,GACLkB,QAAQC,IAAI,cAAenB,GAE3BiQ,EACE7P,EAAmBH,mBAAmB,CACpCD,aAAcA,EAAayI,KAC3BpK,WAAY2B,EAAa7B,MACzBD,KAAMoI,EAAOpI,WAIlBiG,OAAM,SAAC+K,GACNhO,QAAQC,IAAI+N,GAEZe,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,oC,8BCOfkc,GAAuC,CAC3C3f,KAAM,EACNC,MAAO,IAeH2f,GAA+B,CACnC/W,UAAW,GACXQ,MAAO,GACPmC,KAAM,IAGR,SAASqU,GAAiBzI,GAEtB,IAAD,EAEC/J,WAA6BuS,IAF9B,oBACME,EADN,KACkBC,EADlB,OAI6B1S,WAAgC,CAAC,KAAM,OAJpE,oBAIM2S,EAJN,KAIiBC,EAJjB,OAM2B5S,WAA8B,MANzD,oBAMM9M,EANN,KAMc2f,EANd,KAuBD,OACE,gBAACzS,GAAA,EAAD,CACEC,GAAI,CACFC,MAAO,QACPwS,GAAI,QAHR,UAME,gBAAC/N,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACV5C,eAAe,eACf6C,WAAW,aAJb,UAME,gBAACiC,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,aACf6C,WAAW,SACXgC,QAAS,EACT7G,GAAI,CAAEqJ,EAAG,GALX,UAOE,eAAChG,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,qBACNe,QAAQ,WACRtI,MAAOgZ,EAAWjX,UAClBqI,OAAQ,SAACnD,GAAD,OACNgS,EAAc,6BACTD,GADQ,IAEXjX,UAAWkF,EAAMkD,OAAOnK,MAAMqO,WAGlCzH,GAAI,CAAEC,MAjFH,OAmFL,eAACoD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,8FACNe,QAAQ,WACRtI,MAAOgZ,EAAWzW,MAClB6H,OAAQ,SAACnD,GAAD,OACNgS,EAAc,6BAAKD,GAAN,IAAkBzW,MAAO0E,EAAMkD,OAAOnK,MAAMqO,WAE3DzH,GAAI,CAAEC,MA3FH,OA6FL,eAACoD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,oGACNe,QAAQ,WACRtI,MAAOgZ,EAAWtU,KAClB0F,OAAQ,SAACnD,GAAD,OACNgS,EAAc,6BAAKD,GAAN,IAAkBtU,KAAMuC,EAAMkD,OAAOnK,MAAMqO,WAE1DzH,GAAI,CAAEC,MArGH,UAwGP,gBAAC6G,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,aACf6C,WAAW,SACXgC,QAAS,EACT7G,GAAI,CAAEqJ,EAAG,GALX,UAOE,eAACzB,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACE,eAAC4K,GAAA,EAAD,CACEC,UAAU,WACVC,QAAQ,YACRxZ,MAAOkZ,EACPlS,SAAU,SAACE,GACTiS,EAASjS,IAEXkH,YAAa,SAACqL,EAAYC,GAAb,OACX,gBAAC,WAAD,WACE,eAACzP,GAAA,EAAD,gBAAewP,IACf,eAAC9S,GAAA,EAAD,CAAKC,GAAI,CAAEyS,GAAI,GAAf,mBACA,eAACpP,GAAA,EAAD,gBAAeyP,YAKvB,gBAACC,GAAA,EAAD,CACEtQ,MAAM,UACNrJ,MAAOvG,EACPmgB,WAAS,EACT5S,SAjGiB,SACzBC,EACA4S,GAEAT,EAAUS,IAyFJ,UAME,eAACC,GAAA,EAAD,CAAc9Z,MAAO,EAArB,oEACA,eAAC8Z,GAAA,EAAD,CAAc9Z,MAAO,EAArB,qDAIN,eAAC2G,GAAA,EAAD,CAAKyP,UAAU,SAASxP,GAAI,CAAEqJ,EAAG,GAAjC,SACE,eAACb,GAAA,EAAD,CAAQ9G,QAAQ,WAAWwC,QAlGZ,WACnB,IAAMiP,EAAsB,CAC1BC,MAAwB,OAAjBd,EAAU,GAAc,KAAOlc,GAAWkc,EAAU,IAC3De,MAAwB,OAAjBf,EAAU,GAAc,KAAOlc,GAAWkc,EAAU,IAC3DgB,cAA0B,OAAXzgB,EAAkB,KAAOA,EAAS,GAEnD6W,EAAMQ,SAASkI,EAAYe,IA4FvB,iDAQD,SAASI,KACd,IAAMnf,EAAe8K,GAAiB5K,GAEhC+P,EAAWrF,KAOjBW,aAAgB,WACd0E,EAAS0N,GAAqBE,OAC7B,CAAC5N,IAEJ,IAAMsH,EAAehM,eACnB,SAACyS,EAA0Be,GACzBlB,GAAkB3f,KAAO,EACzB2f,GAAkB1f,MAAQ,GACrBkR,KAAUiE,QAAQ0K,EAAWjX,aAChC8W,GAAkB9W,UAAYiX,EAAWjX,WACtCsI,KAAUiE,QAAQ0K,EAAWtU,QAChCmU,GAAkBnU,KAAOsU,EAAWtU,MACjC2F,KAAUiE,QAAQ0K,EAAWzW,SAChCsW,GAAkBtW,MAAQyW,EAAWzW,OAClB,OAAjBwX,EAAOC,QAAgBnB,GAAkBmB,MAAQD,EAAOC,OACvC,OAAjBD,EAAOE,QAAgBpB,GAAkBoB,MAAQF,EAAOE,OAC/B,OAAzBF,EAAOG,gBACTrB,GAAkBqB,cAAgBH,EAAOG,eAC3CjP,EAAS0N,GAAqBE,OAEhC,CAAC5N,IAGH,OACE,uCACE,eAAC8N,GAAD,CAAkBjI,SAAUyB,IAC5B,gBAACe,GAAA,EAAD,CAAgBrL,UAAWoF,KAA3B,UACE,gBAACkG,GAAA,EAAD,CAAO3M,GAAI,CAAEiM,SAAU,KAAO1L,aAAW,eAAzC,UACE,eAACsM,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,gOACA,eAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,+GACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,mGACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,uFACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,qKAGJ,eAACC,GAAA,EAAD,UACG9Y,EAAaA,aAAa0E,KAAI,SAACsU,EAAKD,GAAN,OAC7B,gBAACL,GAAA,EAAD,CAEE9M,GAAI,CAAE,mCAAoC,CAAEwT,OAAQ,IAFtD,UAIE,eAACxG,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACGE,EAAQ,EAAI/Y,EAAa7B,OAAS6B,EAAa9B,KAAO,KAEzD,eAAC0a,GAAA,EAAD,CAAW3L,UAAU,KAAK8O,MAAM,MAAhC,SACG/C,EAAIlR,WAEP,eAAC8Q,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAI1Q,MAAMf,QACpC,eAACqR,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAI1Q,MAAMvB,YACpC,eAAC6R,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAI3Q,WAAWtK,OACzC,eAAC6a,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACuB,OAApBG,EAAI7Q,YACD,GACA6Q,EAAI7Q,YAAYjD,sBAfjB8T,EAAI/T,YAqBjB,eAAC8U,GAAA,EAAD,CACE7b,KAAM8B,EAAa9B,KACnBC,MAAO6B,EAAa5B,WACpB4N,SAtEiB,SAACC,EAAgB+N,GACxC6D,GAAkB3f,KAAO8b,EACzB/J,EAAS0N,GAAqBE,MAqExBvQ,QAAQ,WACR2M,MAAM,UACNtK,KAAK,gBC5OR,IAAMwB,GAAwC,CACnDjM,mBAAmB,EACnBnH,MAAM,EACNoH,QAAQ,EACRiD,YAAY,GAEDpK,GAA8B,CACzCkH,kBAAmB,GACnBnH,KAAM,GACNoH,OAAQ,GACRiD,WAAY,KAEZ5C,cAAe,KACfC,oBAAqB,KACrBC,6BAA8B,KAE9BC,uCAAwC,KACxCC,kDAAmD,KACnDC,8CAA+C,MCfpCwZ,GAAe,SAAC/J,GAC3B,IAAM/U,EAAQuK,GAAiBrK,GACzBwP,EAAWrF,KAEjBW,aAAgB,WACd0E,EAASe,QACR,CAACf,IANiD,MASnD1E,WAA8BvN,IATqB,oBAQ9CwT,EAR8C,KAQlCC,EARkC,OAWVlG,WACzC4F,IAZmD,oBAW9CO,EAX8C,KAW3BC,EAX2B,KAuE/ChJ,EAAuB,GAC7BpI,EAAMA,MAAMuR,SAAQ,SAACpR,GACnBiI,EAAQoJ,KAAR,MAAApJ,EAAO,aAASjI,EAAKiI,aAGvB,IAAMqJ,EAAYzR,EAAMA,MAAM0R,QAC5B,SACEC,EAGAC,GAGA,OADAD,EAAIC,EAAIlN,IAAMkN,EAAIpU,KACXmU,IAET,IAGIE,EAAS,IACf,OACE,eAACC,GAAA,EAAD,CAAOzG,GAAI,CAAE0G,OAAQ,OAAQC,SAAU,EAAGC,QAAS,GAAnD,SACE,eAAClC,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACV5C,eAAe,SACf6C,WAAW,SACXC,MAAO,CAAEC,UAAW,QALtB,SAOE,gBAACL,GAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACV5C,eAAe,eACf6C,WAAW,aACX7E,GAAI,CAAE2G,SAAU,GAChBE,QAAS,EANX,UAQE,gBAACC,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,eACf6C,WAAW,SACXgC,QAAS,EAJX,UAME,eAACxD,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,oGACNe,QAAQ,WACRtI,MAAOwM,EAAWtM,kBAClBgK,OAAQwC,EAAkBxM,kBAC1B8G,SAAU,SAACC,GAAD,OACRwF,EAAc,6BACTD,GADQ,IAEXtM,kBAAmB+G,EAAMkD,OAAOnK,UAGpCoK,OAAQ,WACNqC,EAAc,6BACTD,GADQ,IAEXtM,kBAAmBsM,EAAWtM,kBAAkBmO,UAElD1B,EAAc,6BACTD,GADQ,IAEXxM,kBACE,6BAA6B0N,KAC3BpB,EAAWtM,oBACRmK,KAAUiE,QAAQ9B,EAAWtM,uBAGxCyK,KAAK,QACL/D,GAAI,CAAEC,MAAOuG,KAEf,eAACS,GAAA,EAAD,CACE5N,GAAG,eACHrC,QAAS+F,EAAQmK,MACf,SAACnQ,EAAGmB,GAAJ,OACGA,EAAEwB,SAASyN,WAAWC,cAAcrQ,EAAE2C,SAASyN,eAEpDE,QAAS,SAACC,GAAD,OAAYlB,EAAUkB,EAAO5N,WACtC6N,eAAgB,SAACD,GAAD,OAAYA,EAAOnV,MACnCiO,SAAU,SAACC,EAAYiH,GAAb,OACRzB,EAAc,6BACTD,GADQ,IAEXpJ,WAAuB,OAAX8K,EAAkB,KAAOA,EAAOjO,OAGhD2G,GAAI,CAAEC,MAAOuG,GACbgB,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BACM3K,GADN,IAEEqL,KAAK,QACLpD,MAAM,kFACN2C,OAAQwC,EAAkBtJ,iBAKhC,eAAC6G,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,kFACNe,QAAQ,WACRqC,KAAK,QACL/D,GAAI,CAAEC,MAAOuG,GACbpN,MAAOwM,EAAWzT,KAClBqR,OAAQ,SAACnD,GACPwF,EAAc,6BACTD,GADQ,IAEXzT,KAAMkO,EAAMkD,OAAOnK,MAAMqO,WAG7BrH,SAAU,SAACC,GAAD,OACRwF,EAAc,6BACTD,GADQ,IAEXzT,KAAMkO,EAAMkD,OAAOnK,YAIzB,eAACiK,GAAA,EAAD,CACEhK,GAAG,iBACHsH,MAAM,iCACNe,QAAQ,WACRqC,KAAK,QACL/D,GAAI,CAAEC,MAAOuG,GACbpN,MAAOwM,EAAWrM,OAClB6G,SAAU,SAACC,GAAD,OACRwF,EAAc,6BACTD,GADQ,IAEXrM,OAAQ8G,EAAMkD,OAAOnK,UAGzBoK,OAAQ,SAACnD,GACPwF,EAAc,6BACTD,GADQ,IAEXrM,OAAQ8G,EAAMkD,OAAOnK,MAAMqO,aAIjC,gBAACG,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,UACE,eAACC,GAAA,EAAD,CACEC,MAAO,CAAC,QACRrH,MAAM,6HACNvH,MAAOwM,EAAWhM,cAClBqO,QAAS,IAAI5M,KACb+E,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEXhM,cAAe0G,MAGnBkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,2BAAWU,KAAK,SAAYrL,GAA5B,IAAoCsH,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEC,MAAO,CAAC,QACRrH,MAAM,6JACNvH,MAAOwM,EAAW/L,oBAClBuG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX/L,oBAAqByG,MAGzBkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEC,MAAO,CAAC,QACRrH,MAAM,4MACNvH,MAAOwM,EAAW9L,6BAClBsG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX9L,6BAA8BwG,MAGlCkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEpH,MAAM,8PACNvH,MAAOwM,EAAW7L,uCAClBqG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX7L,uCAAwCuG,MAG5CkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEpH,MAAM,kRACNvH,MACEwM,EAAW5L,kDAEboG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX5L,kDAAmDsG,MAGvDkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,SAGrD,eAACuB,GAAA,EAAD,CACEpH,MAAM,uUACNvH,MAAOwM,EAAW3L,8CAClBmG,SAAU,SAACE,GAAD,OACRuF,EAAc,6BACTD,GADQ,IAEX3L,8CAA+CqG,MAGnDkH,YAAa,SAAC9O,GAAD,OACX,eAAC2K,GAAA,EAAD,6BAAe3K,GAAf,IAAuBqL,KAAK,QAAQ/D,GAAI,CAAEC,MAAOuG,eAKzD,eAACM,GAAA,EAAD,CACElC,UAAU,SACV5C,eAAe,eACf6C,WAAW,SACXgC,QAAS,EAJX,SAME,eAAC2B,GAAA,EAAD,CAAQ9G,QAAQ,YAAYwC,QA5RV,WAG1B,GAFA5O,QAAQC,IAAIqQ,GAERhN,OAAO6P,OAAO3C,GAAmB4C,OAAM,SAACC,GAAD,OAAaA,KAAxD,CACE,IAAMvR,EAAO,IAAIwR,SACZnF,KAAUiE,QAAQ9B,EAAWtM,oBAChClC,EAAKgB,OAAO,oBAAqBwN,EAAWtM,mBAChB,OAA1BsM,EAAWpJ,YACbpF,EAAKgB,OAAO,aAAcwN,EAAWpJ,WAAW2K,YAC7C1D,KAAUiE,QAAQ9B,EAAWzT,OAChCiF,EAAKgB,OAAO,OAAQwN,EAAWzT,MAEA,OAA7ByT,EAAWhM,eACbxC,EAAKgB,OACH,gBACA7B,GAAQqP,EAAWhM,eAAeuN,YAEC,OAAnCvB,EAAW/L,qBACbzC,EAAKgB,OACH,sBACA7B,GAAQqP,EAAW/L,qBAAqBsN,YAGI,OAA5CvB,EAAW9L,8BACb1C,EAAKgB,OACH,+BACA7B,GAAQqP,EAAW9L,8BAA8BqN,YAGK,OAAtDvB,EAAW7L,wCACb3C,EAAKgB,OACH,yCACAhC,GAAWwP,EAAW7L,yCAE2C,OAAjE6L,EAAW5L,mDACb5C,EAAKgB,OACH,oDACAhC,GACEwP,EAAW5L,oDAIgD,OAA7D4L,EAAW3L,+CACb7C,EAAKgB,OACH,gDACAhC,GAAWwP,EAAW3L,gDAG1B7C,EAAKgB,OAAO,SAAUwN,EAAWrM,QAEjC8K,EZjCJ,SAAChL,EAAYjC,GAAb,8CAAgC,WAAOiN,GAAP,eAAAtN,EAAA,+EAEVoH,GAAcuV,YAAYra,EAAIjC,GAFpB,OAEtB8F,EAFsB,OAG5B5H,QAAQC,IAAI2H,GAEZmH,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,UACR0L,MAAO,WACPzL,QAAS,qBATe,gDAa5BT,QAAQC,IAAR,MACA8O,EACE3O,EAAUN,iBAAiB,CACzBU,OAAQ,QACR0L,MAAO,SACPzL,QAAS,6BAlBe,yDAAhC,sDYiCa4d,CAAajK,EAAMrQ,GAAIjC,MA0O1B,kEC5OGwc,GA/DC,WACd,IAAM1e,EAAegK,GAAiB1J,GAEhCuI,EAAOmB,GAAiBP,IAExB0F,EAAWrF,KAEX6U,EAAc,SAACxT,GACnBgE,EAAS3O,EAAUL,sBAgBfye,EAdS,WACb,GAAI5e,EAAc,CAAC,IACTY,EAAoBZ,EAApBY,OAAQC,EAAYb,EAAZa,QAEhB,OACE,eAACge,GAAA,EAAD,CAAUzD,MAAM,EAAM0D,iBAAkB,IAAMzD,QAASsD,EAAvD,SACE,eAACI,GAAA,EAAD,CAAO1D,QAASsD,EAAaK,SAAUpe,EAAQkK,GAAI,CAAEC,MAAO,QAA5D,SACGlK,MAIF,OAAO,KAGDoe,GAEf,OACE,uCACE,eAACtS,GAAD,IACCiS,EACD,gBAAC,IAAD,WACE,eAAC,IAAD,CACEM,OAAK,EACLnP,KAAM,CAACtT,EAAeA,GACtB0P,UAAWoL,KAEb,eAAC,IAAD,CAAO2H,OAAK,EAACnP,KAAMtT,EAAgB0P,UAAW+C,KAE/B,UAAdrG,EAAKQ,MACJ,uCACE,eAAC,IAAD,CAAO0G,KAAMtT,EAA0B0P,UAAW4N,KAClD,eAAC,IAAD,CAAOhK,KAAMtT,EAAmB0P,UAAWsQ,KAC3C,eAAC,IAAD,CAAO1M,KAAMtT,EAAsB0P,UAAWkS,QAInC,gBAAdxV,EAAKQ,MACJ,uCACE,eAAC,IAAD,CAAO0G,KAAMtT,EAAwB0P,UAAWsE,KAChD,eAAC,IAAD,CACEV,KAAMtT,EACN0iB,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,eAAC,GAAD,CAAcjb,GAAIyS,OAAOwI,EAAM5b,OAAOW,YAK9C,eAAC,IAAD,CAAO4L,KAAMtT,EAAc0P,UAAW8D,YCrE/BoP,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnP,MAAK,YAAkD,IAA/CoP,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASV,OACP,eAAC,IAAD,CAAUvV,MAAOA,GAAjB,SAEE,eAAC,KAAD,UACE,eAAC,GAAD,QAGJkW,SAASC,eAAe,SAG1BV,O","file":"static/js/main.93881a7e.chunk.js","sourcesContent":["export const AppRoute = {\r\n  ROOT: '/',\r\n  ANY: '*',\r\n  LOGIN: '/login',\r\n\r\n  UPDATE_METHOD: '/method/:id',\r\n  METHOD: '/method',\r\n  CREATE_METHOD: '/method-create',\r\n  REGISTRY: '/registry',\r\n  CREATE_REGISTRY: '/registry-create',\r\n  TRANSACTION: '/transaction',\r\n\r\n  USER: '/user',\r\n  SEARCH: '/search',\r\n};\r\n","const StorageKey = {\n  TOKEN: 'token',\n  USER: 'user',\n  REFRESH_TOKEN: 'refresh',\n};\n\nexport { StorageKey };\n","const ExceptionName = {\n  HTTP_ERROR: 'HttpError'\n};\n\nexport { ExceptionName };\n","const ContentType = {\r\n  JSON: 'application/json',\r\n  MULTIPART: 'multipart/form-data; charset=UTF-8',\r\n};\r\n\r\nexport { ContentType };\r\n","const HttpHeader = {\n  CONTENT_TYPE: 'Content-Type',\n  CONTENT_LENGTH: 'Content-Length',\n  AUTHORIZATION: 'Authorization',\n  HOST: 'Host',\n};\n\nexport { HttpHeader };\n","const HttpMethod = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE',\n};\n\nexport { HttpMethod };\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { MethodDTO } from '../../common/dtos/method/MethodDTO';\r\nimport { RootState } from '../store';\r\n\r\ninterface MethodContent {\r\n  methods: MethodDTO[];\r\n  totalCount: number;\r\n  page: number;\r\n}\r\n\r\ninterface MethodState {\r\n  methods: MethodDTO[];\r\n  page: number;\r\n  count: number;\r\n  totalPages: number;\r\n  totalCount: number;\r\n}\r\n\r\nconst initialState: MethodState = {\r\n  methods: [],\r\n  page: 1,\r\n  count: 10,\r\n  totalPages: 1,\r\n  totalCount: 0,\r\n};\r\n\r\nconst methodSlice = createSlice({\r\n  name: 'method',\r\n  initialState,\r\n  reducers: {\r\n    replaceMethod: (state, action: PayloadAction<MethodContent>) => {\r\n      state.methods = action.payload.methods;\r\n      state.page = action.payload.page;\r\n      state.totalCount = action.payload.totalCount;\r\n      state.totalPages = Math.ceil(action.payload.totalCount / state.count);\r\n    },\r\n  },\r\n});\r\n\r\nexport const loadMethods = (state: RootState) => state.method;\r\n\r\nexport const methodActions = methodSlice.actions;\r\n\r\nexport const methodReducer = methodSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AddressDTO } from '../../common/dtos/address/AddressDTO';\r\nimport { UserDTO } from '../../common/dtos/user/UserDTO';\r\nimport { RootState } from '../store';\r\n\r\ninterface IOrganizations {\r\n  [id: string | number]: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface IAddresses {\r\n  [id: string | number]: Omit<AddressDTO, 'id'>;\r\n}\r\n\r\ninterface IAuthorities {\r\n  [id: string | number]: {\r\n    code: number;\r\n    id_adress: number;\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface RegistrarContent {\r\n  registrars: UserDTO[];\r\n  totalCount: number;\r\n  page: number;\r\n}\r\ninterface IPosition {\r\n  [id: string | number]: {\r\n    name: string;\r\n  };\r\n}\r\n\r\ninterface RegistrarState {\r\n  registrars: UserDTO[];\r\n  organizations: IOrganizations;\r\n  addresses: IAddresses;\r\n  authorities: IAuthorities;\r\n  position: IPosition;\r\n  page: number;\r\n  count: number;\r\n  totalPages: number;\r\n  totalCount: number;\r\n}\r\n\r\nconst initialState: RegistrarState = {\r\n  registrars: [],\r\n  organizations: {},\r\n  addresses: {},\r\n  authorities: {},\r\n  position: {},\r\n  page: 1,\r\n  count: 10,\r\n  totalPages: 1,\r\n  totalCount: 0,\r\n};\r\n\r\nconst registorSlice = createSlice({\r\n  name: 'registrar',\r\n  initialState,\r\n  reducers: {\r\n    getRegistors: (state, action: PayloadAction<RegistrarContent>) => {\r\n      state.registrars = action.payload.registrars;\r\n      state.page = action.payload.page;\r\n      state.totalCount = action.payload.totalCount;\r\n      state.totalPages = Math.ceil(action.payload.totalCount / state.count);\r\n    },\r\n    getRelations: (\r\n      state,\r\n      action: PayloadAction<{\r\n        organizations: IOrganizations;\r\n        addresses: IAddresses;\r\n        authorities: IAuthorities;\r\n        position: IPosition;\r\n      }>,\r\n    ) => {\r\n      state.organizations = action.payload.organizations;\r\n      state.addresses = action.payload.addresses;\r\n      state.authorities = action.payload.authorities;\r\n      state.position = action.payload.position;\r\n    },\r\n  },\r\n});\r\n\r\nexport const loadRegistrars = (state: RootState) => state.registrar;\r\n\r\nexport const registrarActions = registorSlice.actions;\r\n\r\nexport const registrarReducer = registorSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { TransactionDTO } from '../../common/dtos/transaction/TransactionDTO';\r\nimport { RootState } from '../store';\r\n\r\ninterface TransactionContent {\r\n  transactions: TransactionDTO[];\r\n  totalCount: number;\r\n  page: number;\r\n}\r\n\r\ninterface TransactionState {\r\n  transactions: TransactionDTO[];\r\n  totalCount: number;\r\n  count: number;\r\n  page: number;\r\n  totalPages: number;\r\n}\r\n\r\nconst initialState: TransactionState = {\r\n  transactions: [],\r\n  totalCount: 0,\r\n  count: 10,\r\n  page: 1,\r\n  totalPages: 1,\r\n};\r\n\r\nconst transactionSlice = createSlice({\r\n  name: 'transaction',\r\n  initialState,\r\n  reducers: {\r\n    replaceTransaction: (state, action: PayloadAction<TransactionContent>) => {\r\n      state.transactions = action.payload.transactions;\r\n      state.page = action.payload.page;\r\n      state.totalCount = action.payload.totalCount;\r\n      state.totalPages = Math.ceil(action.payload.totalCount / state.count);\r\n    },\r\n  },\r\n});\r\n\r\nexport const loadTransactios = (state: RootState) => state.transaction;\r\n\r\nexport const transactionActions = transactionSlice.actions;\r\n\r\nexport const transactionReducer = transactionSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { TypeDTO } from '../../common/dtos/type/TypeDTO';\r\nimport { RootState } from '../store';\r\n\r\ninterface TypeContent {\r\n  types: TypeDTO[];\r\n}\r\n\r\ninterface TypeState {\r\n  types: TypeDTO[];\r\n}\r\n\r\nconst initialState: TypeState = {\r\n  types: [],\r\n};\r\n\r\nconst typeSlice = createSlice({\r\n  name: 'type',\r\n  initialState,\r\n  reducers: {\r\n    setTypes: (state, action: PayloadAction<TypeContent>) => {\r\n      state.types = action.payload.types;\r\n    },\r\n  },\r\n});\r\n\r\nexport const loadTypes = (state: RootState) => state.type;\r\n\r\nexport const typeActions = typeSlice.actions;\r\n\r\nexport const typeReducer = typeSlice.reducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\n\r\ninterface UiState {\r\n  notification: NotificationInterface | null;\r\n  currentPage: number;\r\n}\r\n\r\nexport interface NotificationInterface {\r\n  status: 'success' | 'info' | 'warning' | 'error';\r\n  title: string;\r\n  message: string;\r\n}\r\n\r\nconst initialState: UiState = {\r\n  notification: null,\r\n  currentPage: 1,\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState: initialState,\r\n  reducers: {\r\n    showNotification: (state, action: PayloadAction<NotificationInterface>) => {\r\n      state.notification = action.payload;\r\n    },\r\n    clearNotification: (state, action: PayloadAction<void>) => {\r\n      console.log('act');\r\n\r\n      state.notification = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectNotification = (state: RootState) => state.ui.notification;\r\n\r\nexport const uiActions = uiSlice.actions;\r\n\r\nexport const uiReducer = uiSlice.reducer;\r\n","import { HttpCode, ExceptionName } from '../../common/enum/enums';\n\nconst DEFAULT_MESSAGE = 'Network Error';\n\nclass HttpError extends Error {\n  constructor({\n    status = HttpCode.INTERNAL_SERVER_ERROR,\n    message = DEFAULT_MESSAGE,\n  } = {}) {\n    super(message);\n    // this.status = status;\n    this.name = ExceptionName.HTTP_ERROR;\n  }\n}\n\nexport { HttpError };\n","import dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\ndayjs.extend(relativeTime);\r\nconst getDateStr = (d: Date) => dayjs(d).format('YYYY-MM-DD');\r\n\r\nconst getYear = (d: Date): number => dayjs(d).year();\r\n\r\nexport { dayjs, getDateStr, getYear };\r\n","import { HttpError } from '../../exceptions/exceptions';\r\nimport { getStringifiedQuery } from '../../helpers/helpers';\r\nimport {\r\n  StorageKey,\r\n  HttpHeader,\r\n  HttpMethod,\r\n  ContentType,\r\n} from '../../common/enum/enums';\r\nimport { StorageService } from '../storage/storage.service';\r\nimport { Options, Query } from '../interfaces/interfaces';\r\nimport { IHttpService } from './IHttpServise';\r\nimport { config } from 'dotenv';\r\nimport axios from 'axios';\r\nimport { Method } from '@testing-library/react';\r\n\r\nconfig();\r\n\r\ntype HMethod =\r\n  | 'get'\r\n  | 'GET'\r\n  | 'delete'\r\n  | 'DELETE'\r\n  | 'head'\r\n  | 'HEAD'\r\n  | 'options'\r\n  | 'OPTIONS'\r\n  | 'post'\r\n  | 'POST'\r\n  | 'put'\r\n  | 'PUT';\r\n\r\nclass Http implements IHttpService {\r\n  private _storage: StorageService;\r\n\r\n  constructor(storage: StorageService) {\r\n    this._storage = storage;\r\n  }\r\n\r\n  async load(url: string, options: Options = {}): Promise<any> {\r\n    const {\r\n      method = HttpMethod.GET,\r\n      payload = null,\r\n      hasAuth = false,\r\n      contentType,\r\n      query,\r\n      form = null,\r\n    } = options;\r\n\r\n    const headers = this._getHeaders(hasAuth, contentType);\r\n\r\n    if (contentType === ContentType.MULTIPART) {\r\n      console.log(form, 'form');\r\n\r\n      const token = this._storage.getItem(StorageKey.TOKEN);\r\n      if (method === HttpMethod.PUT) {\r\n        const a = await axios({\r\n          method: 'put',\r\n          data: form,\r\n          url: this._getUrl(url, query),\r\n          headers: {\r\n            'Content-Type': ContentType.MULTIPART,\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        return a;\r\n      }\r\n      if (method === HttpMethod.POST) {\r\n        const a = await axios({\r\n          method: 'post',\r\n          data: form,\r\n          url: this._getUrl(url, query),\r\n          headers: {\r\n            'Content-Type': ContentType.MULTIPART,\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        return a;\r\n      }\r\n\r\n      // const request = new Request(this._getUrl(url, query), {\r\n      //   method: method,\r\n      //   headers: headers,\r\n      //   body: form,\r\n      // });\r\n\r\n      // // request.post(\"http://127.0.0.1:8080/add_foo\", data={'foo': 'foobar'})\r\n\r\n      // console.log('221345t6y4321', request.body);\r\n      // const a = await fetch(request);\r\n      // this._checkStatus(a);\r\n      // console.log(a.body);\r\n\r\n      // const b = await a.json();\r\n\r\n      // console.log(a);\r\n    } else {\r\n      const request = new Request(this._getUrl(url, query), {\r\n        method: method,\r\n        headers: headers,\r\n        body: payload,\r\n      });\r\n      console.log('1');\r\n\r\n      const a = await fetch(request);\r\n      // this._checkStatus(a);\r\n      const b = await a.json();\r\n\r\n      console.log(b);\r\n\r\n      return b;\r\n    }\r\n\r\n    // return this._parseJSON(a);\r\n    // .then(this._checkStatus)\r\n    // .then(this._parseJSON)\r\n    // .catch(this._throwError);\r\n  }\r\n\r\n  private _getHeaders(hasAuth: boolean, contentType?: string): Headers {\r\n    const headers = new Headers();\r\n\r\n    if (contentType) {\r\n      headers.append(HttpHeader.CONTENT_TYPE, contentType);\r\n      // headers.append(\r\n      //   HttpHeader.CONTENT_TYPE,\r\n      //   'multipart/form-data; boundary=AaB03x;  charset=utf-8',\r\n      // );\r\n    }\r\n\r\n    if (hasAuth) {\r\n      const token = this._storage.getItem(StorageKey.TOKEN);\r\n\r\n      headers.append(HttpHeader.AUTHORIZATION, `Bearer ${token}`);\r\n    }\r\n\r\n    return headers;\r\n  }\r\n\r\n  private async _checkStatus(response: Response): Promise<Response> {\r\n    console.log('in check status', response);\r\n\r\n    if (!response.ok) {\r\n      const parsedException = await response.json().catch(() => ({\r\n        message: response.statusText,\r\n      }));\r\n\r\n      throw new HttpError({\r\n        status: response.status,\r\n        message: parsedException?.message,\r\n      });\r\n    }\r\n    return response;\r\n  }\r\n\r\n  private _getUrl(url: string, query?: Query) {\r\n    console.log(url, query);\r\n\r\n    const api = process.env.REACT_APP_HOST_API;\r\n\r\n    return `${api}${url}${query ? `?${getStringifiedQuery(query)}` : ''}`;\r\n  }\r\n\r\n  private async _parseJSON(response: Response): Promise<any> {\r\n    console.log('in parse', response);\r\n    return response.json();\r\n  }\r\n\r\n  private _throwError(err: Error) {\r\n    console.log('err', err);\r\n\r\n    throw err;\r\n  }\r\n}\r\n\r\nexport { Http };\r\n","import { Query } from '../../../services/interfaces/interfaces';\n\nconst getStringifiedQuery = (params: Query) =>\n  Object.keys(params)\n    .map((key) => key + '=' + (params[key] ? String(params[key]) : ''))\n    .join('&');\n\nexport { getStringifiedQuery };\n","import { MethodDTO } from '../../common/dtos/method/MethodDTO';\r\n\r\nexport class MethodMapper {\r\n  public static toDTO(value: { [x: string | number]: any }): MethodDTO {\r\n    return {\r\n      id: value.id,\r\n      registration_code: value.registration_code,\r\n      name: value.name,\r\n\r\n      author: value.author,\r\n\r\n      id_domaims: value.id_domaims,\r\n      domainsOfMethod: {\r\n        id: value.domainsOfMethod.id,\r\n        name: value.domainsOfMethod.name,\r\n        id_types: value.domainsOfMethod.id_types,\r\n        typesOfMethods: {\r\n          id: value.domainsOfMethod.typesOfMethods.id,\r\n          name: value.domainsOfMethod.typesOfMethods.name,\r\n        },\r\n      },\r\n\r\n      year_creation: value.year_creation,\r\n      year_making_changes: value.year_making_changes || null,\r\n      year_termination_application: value.year_termination_application || null,\r\n\r\n      date_of_decision_on_state_registration:\r\n        value.date_of_decision_on_state_registration,\r\n\r\n      date_of_decision_on_state_registration_of_changes:\r\n        value.date_of_decision_on_state_registration_of_changes || null,\r\n      date_of_decision_to_terminate_the_application:\r\n        value.date_of_decision_to_terminate_the_application || null,\r\n\r\n      doc_copy_of_method: value.doc_copy_of_method,\r\n      doc_report_review: value.doc_report_review,\r\n      doc_certificate_of_approbation: value.doc_certificate_of_approbation,\r\n      doc_copy_of_implementation: value.doc_copy_of_implementation,\r\n      doc_discount_card: value.doc_discount_card,\r\n    };\r\n  }\r\n}\r\n","import { HttpMethod, ContentType } from '../../common/enum/enums';\r\nimport { IHttpService } from '../http/IHttpServise';\r\nimport { MethodCreateDTO } from '../../common/dtos/method/MethodCreateDTO';\r\nimport { MethodDTO } from '../../common/dtos/method/MethodDTO';\r\nimport { MethodUpdateDTO } from '../../common/dtos/method/MethodUpdateDTO';\r\nimport { IMethodService } from './IMethodServise';\r\nimport { MethodMapper } from './MethodMapper';\r\nimport { MethodFilter } from '../interfaces/interfaces';\r\n\r\nclass MethodService implements IMethodService {\r\n  private _http: IHttpService;\r\n  constructor(http: IHttpService) {\r\n    this._http = http;\r\n  }\r\n\r\n  async getAllMethods(\r\n    filter: MethodFilter,\r\n  ): Promise<{ methods: MethodDTO[]; count: number }> {\r\n    console.log(filter);\r\n\r\n    const methods = await this._http.load('/main/method', {\r\n      method: HttpMethod.GET,\r\n      query: { ...filter },\r\n    });\r\n    return {\r\n      methods: methods.methods.map(MethodMapper.toDTO),\r\n      count: methods.count,\r\n    };\r\n  }\r\n\r\n  async getMethod(id: number): Promise<MethodDTO> {\r\n    const metod = await this._http.load(`/main/method/${id}`, {\r\n      method: HttpMethod.GET,\r\n    });\r\n    return MethodMapper.toDTO(metod);\r\n  }\r\n\r\n  async addMethod(payload: FormData): Promise<{ id: number }> {\r\n    return this._http.load('/main/method', {\r\n      method: HttpMethod.POST,\r\n      contentType: ContentType.MULTIPART,\r\n      form: payload,\r\n      hasAuth: true,\r\n    });\r\n  }\r\n\r\n  async updateMetod(id: number, method: FormData): Promise<{ id: number }> {\r\n    return this._http.load(`/main/method/${id}`, {\r\n      method: HttpMethod.PUT,\r\n      contentType: ContentType.MULTIPART,\r\n      form: method,\r\n      hasAuth: true,\r\n    });\r\n  }\r\n}\r\n\r\nexport { MethodService };\r\n","interface IStorage {\n  clear(): void;\n  getItem(key: string): string | null;\n  removeItem(key: string): void;\n  setItem(key: string, value: string): void;\n}\n\nclass StorageService {\n  private _storage: IStorage;\n\n  constructor(storage: IStorage) {\n    this._storage = storage;\n  }\n\n  getItem(key: string): string | null {\n    return this._storage.getItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    return this._storage.setItem(key, value);\n  }\n\n  removeItem(key: string): void {\n    return this._storage.removeItem(key);\n  }\n\n  clear(): void {\n    return this._storage.clear();\n  }\n}\n\nexport { StorageService };\n","import { UserDTO } from '../../common/dtos/user/UserDTO';\r\n\r\nexport class UserMapper {\r\n  public static toDTO(value: { [x: string | number]: any }): UserDTO {\r\n    return {\r\n      id: value.id,\r\n      full_name: value.full_name,\r\n      date_of_birth: new Date(value.date_of_birth).toDateString(),\r\n      series_passport: value.series_passport || null,\r\n      date_of_issue_of_passport: new Date(\r\n        value.date_of_issue_of_passport,\r\n      ).toDateString(),\r\n      id_authority_that_issued_the_passport:\r\n        value.id_authority_that_issued_the_passport,\r\n      ITN: value.ITN,\r\n      email: value.email,\r\n      id_role: value.id_role,\r\n      id_organizations: value.id_organizations,\r\n      id_adress: value.id_adress,\r\n      id_position: value.id_position,\r\n      passport_number: value.passport_number,\r\n    };\r\n  }\r\n}\r\n","import { TransactionDTO } from '../../common/dtos/transaction/TransactionDTO';\r\nimport { UserMapper } from '../user/UserMapper';\r\n\r\nexport class TransactionMapper {\r\n  public static toDTO(value: { [x: string | number]: any }): TransactionDTO {\r\n    return {\r\n      id: value.id,\r\n      datetime: value.datetime,\r\n      id_method: value.id_method,\r\n      id_old_value: value.id_old_value || null,\r\n      id_type: value.id_type,\r\n      id_user: value.id_user,\r\n      methodslogs:\r\n        value.methodslogs === null\r\n          ? null\r\n          : {\r\n              id: value.methodslogs.id,\r\n              registration_code: value.methodslogs.registration_code,\r\n              name: value.methodslogs.name,\r\n\r\n              id_domains: value.methodslogs.id_domains,\r\n\r\n              author: value.methodslogs.author,\r\n\r\n              year_creation: value.methodslogs.year_creation,\r\n              year_making_changes:\r\n                value.methodslogs.year_making_changes || null,\r\n              year_termination_application:\r\n                value.methodslogs.year_termination_application || null,\r\n\r\n              date_of_decision_on_state_registration:\r\n                value.methodslogs.date_of_decision_on_state_registration,\r\n              date_of_decision_on_state_registration_of_changes:\r\n                value.methodslogs\r\n                  .date_of_decision_on_state_registration_of_changes || null,\r\n              date_of_decision_to_terminate_the_application:\r\n                value.methodslogs\r\n                  .date_of_decision_to_terminate_the_application || null,\r\n\r\n              doc_copy_of_method: value.methodslogs.doc_copy_of_method,\r\n              doc_report_review: value.methodslogs.doc_report_review,\r\n              doc_certificate_of_approbation:\r\n                value.methodslogs.doc_certificate_of_approbation,\r\n              doc_copy_of_implementation:\r\n                value.methodslogs.doc_copy_of_implementation,\r\n              doc_discount_card: value.methodslogs.doc_discount_card,\r\n            },\r\n      typeAction: { id: value.typeAction.id, name: value.typeAction.name },\r\n      users: UserMapper.toDTO(value.users),\r\n    };\r\n  }\r\n}\r\n","import { TransactionDTO } from '../../common/dtos/transaction/TransactionDTO';\r\nimport { HttpMethod, ContentType } from '../../common/enum/enums';\r\nimport { IHttpService } from '../http/IHttpServise';\r\nimport { TransactionFilter } from '../interfaces/interfaces';\r\nimport { ITransactionService } from './ITransactionService';\r\nimport { TransactionMapper } from './TransactionMapper';\r\n\r\nexport class TransactionService implements ITransactionService {\r\n  private _http: IHttpService;\r\n  constructor(http: IHttpService) {\r\n    this._http = http;\r\n  }\r\n  async getActions(): Promise<{ id: number; name: string }[]> {\r\n    const actions = await this._http.load('/main/actions', {\r\n      contentType: ContentType.JSON,\r\n    });\r\n    return actions.map((e: { [x: string]: number | string }) => ({\r\n      id: e.id,\r\n      name: e.name,\r\n    }));\r\n  }\r\n  async deleteTransaction(id: number): Promise<{ id: number }> {\r\n    return this._http.load(`/main/log/${id}`, {\r\n      method: HttpMethod.DELETE,\r\n      contentType: ContentType.JSON,\r\n      hasAuth: true,\r\n    });\r\n  }\r\n\r\n  async getTransactions(\r\n    filter: TransactionFilter,\r\n  ): Promise<{ logs: TransactionDTO[]; count: number }> {\r\n    const transactions = await this._http.load('/main/log', {\r\n      contentType: ContentType.JSON,\r\n      query: { ...filter },\r\n      hasAuth: true,\r\n    });\r\n\r\n    return {\r\n      logs: transactions.logs.map(TransactionMapper.toDTO),\r\n      count: transactions.count,\r\n    };\r\n  }\r\n}\r\n","import { TypeDTO } from '../../common/dtos/type/TypeDTO';\r\n\r\nexport class TypeMapper {\r\n  public static toDTO(value: { [x: string | number]: any }): TypeDTO {\r\n    return {\r\n      id: value.id,\r\n      name: value.name,\r\n      domains: value.domains.map((e: { [x: string]: string | number }) => ({\r\n        id: e.id,\r\n        name: e.name,\r\n        id_types: e.id_types,\r\n      })),\r\n    };\r\n  }\r\n}\r\n","import { TypeDTO } from '../../common/dtos/type/TypeDTO';\r\nimport { ContentType } from '../../common/enum/enums';\r\nimport { IHttpService } from '../http/IHttpServise';\r\nimport { ITypeService } from './ITypeService';\r\nimport { TypeMapper } from './TypeMapper';\r\n\r\nexport class TypeService implements ITypeService {\r\n  private _http: IHttpService;\r\n  constructor(http: IHttpService) {\r\n    this._http = http;\r\n  }\r\n  async getTypeById(id: number): Promise<TypeDTO> {\r\n    const type = await this._http.load(`/main/method/type/${id}`, {\r\n      contentType: ContentType.JSON,\r\n    });\r\n    return TypeMapper.toDTO(type);\r\n  }\r\n  async getAllTypes(): Promise<TypeDTO[]> {\r\n    const types = await this._http.load('/main/method/type', {\r\n      contentType: ContentType.JSON,\r\n    });\r\n\r\n    return types.map(TypeMapper.toDTO);\r\n  }\r\n}\r\n","import { AddressDTO } from '../../common/dtos/address/AddressDTO';\r\nimport { UserCreateDTO } from '../../common/dtos/user/UserCreateDTO';\r\nimport { UserDTO } from '../../common/dtos/user/UserDTO';\r\nimport { ContentType, HttpMethod, StorageKey } from '../../common/enum/enums';\r\nimport { IHttpService } from '../http/IHttpServise';\r\nimport { UserFilter } from '../interfaces/interfaces';\r\nimport { IUserService } from './IUserService';\r\nimport { UserMapper } from './UserMapper';\r\n\r\nexport class UserService implements IUserService {\r\n  private _http: IHttpService;\r\n  constructor(http: IHttpService) {\r\n    this._http = http;\r\n  }\r\n\r\n  async __refreshToken(): Promise<void> {\r\n    try {\r\n      const res = await this.token();\r\n      console.log(res);\r\n      localStorage.setItem(StorageKey.TOKEN, res.Token);\r\n      if (localStorage.getItem(StorageKey.TOKEN)) {\r\n        setTimeout(async () => {\r\n          if (localStorage.getItem(StorageKey.REFRESH_TOKEN)) {\r\n            await this.__refreshToken();\r\n          }\r\n        }, 60000);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      localStorage.clear();\r\n    }\r\n  }\r\n\r\n  async login(payload: {\r\n    email: string;\r\n    password: string;\r\n  }): Promise<{ Token: string }> {\r\n    const res = await this._http.load('/main/login', {\r\n      method: HttpMethod.POST,\r\n      contentType: ContentType.JSON,\r\n      payload: JSON.stringify(payload),\r\n    });\r\n    // this.__refreshToken();\r\n    return { Token: res.Token };\r\n  }\r\n\r\n  async token(): Promise<{ Token: string }> {\r\n    const res = await this._http.load('/main/token', {\r\n      contentType: ContentType.JSON,\r\n      hasAuth: true,\r\n    });\r\n    return { Token: res.Token };\r\n  }\r\n\r\n  async getPositions(): Promise<{ id: number; name: string }[]> {\r\n    const res = await this._http.load('/main/user/position', {\r\n      contentType: ContentType.JSON,\r\n    });\r\n    return res.map((e: { [x: string]: string | number }) => ({\r\n      id: e.id,\r\n      name: e.name,\r\n    }));\r\n  }\r\n\r\n  async getAddresses(): Promise<AddressDTO[]> {\r\n    const res = await this._http.load('/main/addresses', {\r\n      contentType: ContentType.JSON,\r\n    });\r\n    return res.map((e: { [x: string]: string | number }) => ({\r\n      id: e.id,\r\n      city: e.city,\r\n      flat_number: e.flat_number || null,\r\n      house_number: e.house_number,\r\n      region: e.region,\r\n      street: e.street,\r\n    }));\r\n  }\r\n\r\n  async getAuthorities(): Promise<\r\n    { id: number; code: number; id_adress: number; name: string }[]\r\n  > {\r\n    const res = await this._http.load('/main/authorities', {\r\n      contentType: ContentType.JSON,\r\n    });\r\n    return res.map((e: { [x: string]: string | number }) => ({\r\n      id: e.id,\r\n      code: e.code,\r\n      id_adress: e.id_adress,\r\n      name: e.name,\r\n    }));\r\n  }\r\n\r\n  async getOrganizations(): Promise<{ id: number; name: string }[]> {\r\n    const res = await this._http.load('/main/organization', {\r\n      contentType: ContentType.JSON,\r\n    });\r\n    return res.map((e: { [x: string]: string | number }) => ({\r\n      id: e.id,\r\n      name: e.name,\r\n    }));\r\n  }\r\n\r\n  async getUsers(\r\n    filter: UserFilter,\r\n  ): Promise<{ users: UserDTO[]; count: number }> {\r\n    const users = await this._http.load('/main/user', {\r\n      hasAuth: true,\r\n      contentType: ContentType.JSON,\r\n      query: { ...filter },\r\n    });\r\n    return { users: users.users.map(UserMapper.toDTO), count: users.count };\r\n  }\r\n\r\n  async getUserByToken(): Promise<UserDTO> {\r\n    const user = await this._http.load('/main/user/info', {\r\n      hasAuth: true,\r\n    });\r\n    return UserMapper.toDTO(user);\r\n  }\r\n\r\n  async deleteUserById(id: number): Promise<{ id: number }> {\r\n    const user = await this._http.load(`/main/user/${id}`, {\r\n      method: HttpMethod.DELETE,\r\n      hasAuth: true,\r\n    });\r\n    return { id: user.id };\r\n  }\r\n\r\n  async postUser(user: UserCreateDTO): Promise<{ id: number }> {\r\n    const res = await this._http.load('/main/user', {\r\n      method: HttpMethod.POST,\r\n      contentType: ContentType.JSON,\r\n      hasAuth: true,\r\n      payload: JSON.stringify(user),\r\n    });\r\n    return { id: res.id };\r\n  }\r\n\r\n  async getUserPosition(): Promise<{ id: number; name: string }[]> {\r\n    const res = await this._http.load('/main/position', {\r\n      contentType: ContentType.JSON,\r\n    });\r\n    return res.map((e: { [x: string]: string | number }) => ({\r\n      id: e.id,\r\n      name: e.name,\r\n    }));\r\n  }\r\n\r\n  async sendDataUser(id: number): Promise<{ email: string }> {\r\n    const res = await this._http.load('/main/user/send', {\r\n      method: HttpMethod.POST,\r\n      contentType: ContentType.JSON,\r\n      hasAuth: true,\r\n      payload: JSON.stringify({ id_user: id }),\r\n    });\r\n    return { email: res.email };\r\n  }\r\n}\r\n","import { Http } from './http/http.service';\nimport { MethodService } from './method/method.service';\nimport { StorageService } from './storage/storage.service';\nimport { TransactionService } from './transaction/transaction.service';\nimport { TypeService } from './type/type.service';\nimport { UserService } from './user/user.service';\n\nconst storage = new StorageService(localStorage);\n\nconst http = new Http(storage);\n\nconst userService = new UserService(http);\n\nconst transactionService = new TransactionService(http);\n\nconst typeService = new TypeService(http);\n\nconst methodService = new MethodService(http);\n\nexport {\n  http,\n  storage,\n  userService,\n  transactionService,\n  methodService,\n  typeService,\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UserDTO } from '../../common/dtos/user/UserDTO';\nimport { RootState } from '../store';\nimport { storage as storageService } from '../../services/services';\nimport { StorageKey } from '../../common/enum/enums';\n\nexport type UserRole = 'user' | 'registrator' | 'admin';\n\ninterface UserContent {\n  user: UserDTO | null;\n  role: UserRole;\n}\n\ninterface UserState {\n  user: UserDTO | null;\n  role: UserRole;\n}\n\nconst getUserRole = (id: number): UserRole => {\n  switch (id) {\n    case 1:\n      return 'registrator';\n    case 2:\n      return 'admin';\n    default:\n      return 'user';\n  }\n};\n\nconst getInitialState = (): UserState => {\n  const user: UserDTO | null = JSON.parse(\n    storageService.getItem(StorageKey.USER) || 'null',\n  );\n  if (user === null) {\n    return {\n      user: null,\n      role: 'user',\n    };\n  } else {\n    return { user: user, role: getUserRole(user.id_role) };\n  }\n};\n\nconst initialState: UserState = getInitialState();\n\n// const initialState: UserState = {\n//   user: null,\n//   role: 'user',\n// };\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<UserContent>) => {\n      state.user = action.payload.user;\n      state.role = action.payload.role;\n    },\n  },\n});\n\nexport const getUser = (state: RootState) => state.user;\n\nexport const userActions = userSlice.actions;\n\nexport const userReduser = userSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { methodReducer } from './method/slice';\nimport { registrarReducer } from './registrar/slice';\nimport { transactionReducer } from './transaction/slice';\nimport { typeReducer } from './type/slice';\n// import { sessionReducer } from 'redux-react-session';\n\nimport { uiReducer } from './ui/slice';\nimport { userReduser } from './user/slice';\n\nexport const store = configureStore({\n  reducer: {\n    method: methodReducer,\n    user: userReduser,\n    ui: uiReducer,\n    type: typeReducer,\n    // session: sessionReducer,\n    registrar: registrarReducer,\n    transaction: transactionReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useTypedDispatch = () => useDispatch<AppDispatch>();\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\r\nimport { useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { Tabs, Tab, Box } from '@mui/material';\r\nimport { AppRoute } from '../../../common/enum/enums';\r\nimport { useTypedSelector } from '../../../store/store';\r\nimport { getUser } from '../../../store/user/slice';\r\n\r\nconst menuTabs = {\r\n  public: [\r\n    { name: 'Методики', link: AppRoute.ROOT },\r\n    { name: 'Пошук', link: AppRoute.SEARCH },\r\n    { name: 'Вхід', link: AppRoute.LOGIN },\r\n  ],\r\n  admin: [\r\n    { name: 'Реєстратори', link: AppRoute.REGISTRY },\r\n    { name: 'Транзакції', link: AppRoute.TRANSACTION },\r\n  ],\r\n};\r\n\r\nexport default function Menu() {\r\n  const { pathname } = useLocation();\r\n\r\n  const getTab = (pathLink: string): number => {\r\n    switch (pathLink) {\r\n      case AppRoute.SEARCH: {\r\n        return 1;\r\n      }\r\n      case AppRoute.LOGIN: {\r\n        return 2;\r\n      }\r\n      case AppRoute.REGISTRY: {\r\n        return user.role === 'admin' ? 3 : 0;\r\n      }\r\n      case AppRoute.TRANSACTION: {\r\n        return user.role === 'admin' ? 4 : 0;\r\n      }\r\n\r\n      default: {\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n  const user = useTypedSelector(getUser);\r\n\r\n  const [value, setValue] = React.useState(getTab(pathname));\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', display: 'flex' }}>\r\n      <Tabs\r\n        onChange={handleChange}\r\n        value={value}\r\n        aria-label=\"Tabs where selection follows focus\"\r\n        selectionFollowsFocus\r\n      >\r\n        {menuTabs.public.map((tab) => (\r\n          <Tab label={tab.name} key={tab.name} href={tab.link} />\r\n        ))}\r\n        {user.role === 'admin' &&\r\n          menuTabs.admin.map((tab) => (\r\n            <Tab label={tab.name} key={tab.name} href={tab.link} />\r\n          ))}\r\n      </Tabs>\r\n    </Box>\r\n  );\r\n}\r\n","import { Avatar, CardHeader, IconButton, Typography } from '@mui/material';\r\nimport * as React from 'react';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { green } from '@mui/material/colors';\r\nimport { useTypedSelector } from '../../../store/store';\r\nimport { getUser, UserRole } from '../../../store/user/slice';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppRoute } from '../../../common/enum/enums';\r\n\r\nconst getLinkByRole = (role: UserRole) => {\r\n  switch (role) {\r\n    case 'registrator':\r\n      return AppRoute.CREATE_METHOD;\r\n    case 'admin':\r\n      return AppRoute.CREATE_REGISTRY;\r\n    default:\r\n      return AppRoute.ROOT;\r\n  }\r\n};\r\n\r\nexport default function UserCard() {\r\n  const user = useTypedSelector(getUser);\r\n\r\n  if (user.user) {\r\n    return (\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: green[500] }} aria-label=\"recipe\">\r\n            <IconButton\r\n              aria-label=\"settings\"\r\n              component={Link}\r\n              to={getLinkByRole(user.role)}\r\n            >\r\n              <AddIcon />\r\n            </IconButton>\r\n          </Avatar>\r\n        }\r\n        title={\r\n          <Typography component=\"div\" variant=\"h6\">\r\n            {user.role}\r\n          </Typography>\r\n        }\r\n        subheader={user.user.full_name}\r\n      />\r\n    );\r\n  } else return null;\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Box,\r\n  CardMedia,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Divider,\r\n} from '@mui/material';\r\n\r\nimport Menu from './Menu';\r\nimport UserCard from './UserCard';\r\n\r\nconst headerInfo = {\r\n  logo: '/logo512.png',\r\n  title: 'МІНІСТЕРСТВО ЮСТИЦІЇ УКРАЇНИ',\r\n  subheader: 'Реєстр методик проведення судових експертиз',\r\n};\r\n\r\nexport default function Header() {\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n      }}\r\n    >\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={headerInfo.title}\r\n          sx={{ width: 142, height: 90 }}\r\n          src={headerInfo.logo}\r\n          title={headerInfo.title}\r\n        />\r\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n          <CardContent sx={{ flex: '1 0 auto' }}>\r\n            <Typography component=\"div\" variant=\"h5\">\r\n              {headerInfo.title}\r\n            </Typography>\r\n            <Divider />\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              color=\"text.secondary\"\r\n              component=\"div\"\r\n            >\r\n              {headerInfo.subheader}\r\n            </Typography>\r\n            <Menu />\r\n          </CardContent>\r\n        </Box>\r\n      </Box>\r\n      <UserCard />\r\n    </Card>\r\n  );\r\n}\r\n","import { Dispatch } from '@reduxjs/toolkit';\r\nimport { StorageKey } from '../../common/enum/enums';\r\nimport {\r\n  storage as storageService,\r\n  userService,\r\n} from '../../services/services';\r\nimport { userActions, UserRole } from './slice';\r\nimport { uiActions } from '../ui/slice';\r\n\r\nconst getUserRole = (id: number): UserRole => {\r\n  switch (id) {\r\n    case 1:\r\n      return 'registrator';\r\n    case 2:\r\n      return 'admin';\r\n    default:\r\n      return 'user';\r\n  }\r\n};\r\n\r\nconst refreshToken = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    const res = await userService.token();\r\n    console.log(res);\r\n    storageService.setItem(StorageKey.TOKEN, res.Token);\r\n    if (storageService.getItem(StorageKey.TOKEN)) {\r\n      setTimeout(() => {\r\n        if (storageService.getItem(StorageKey.REFRESH_TOKEN)) {\r\n          refreshToken()(dispatch);\r\n        }\r\n      }, 600000);\r\n    }\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'success',\r\n        title: 'Success!',\r\n        message: 'Token Refreshed!',\r\n      }),\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    localStorage.clear();\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'error',\r\n        title: 'Error!',\r\n        message: 'Failed Refresh Token!',\r\n      }),\r\n    );\r\n  }\r\n};\r\n\r\nconst login =\r\n  (request: { email: string; password: string }) =>\r\n  async (dispatch: Dispatch) => {\r\n    try {\r\n      const res = await userService.login(request);\r\n      console.log(res);\r\n      storageService.setItem(StorageKey.TOKEN, res.Token);\r\n\r\n      const user = await userService.getUserByToken();\r\n      storageService.setItem(StorageKey.USER, JSON.stringify(user));\r\n\r\n      storageService.setItem(\r\n        StorageKey.REFRESH_TOKEN,\r\n        StorageKey.REFRESH_TOKEN,\r\n      );\r\n\r\n      // userService.setRefreshToken(\r\n      // refreshToken()(dispatch)\r\n\r\n      dispatch(\r\n        userActions.setUser({ user: user, role: getUserRole(user.id_role) }),\r\n      );\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: `Користувач ${user.full_name} увійшов`,\r\n        }),\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Failed Login!',\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\nconst logout = () => (dispatch: Dispatch) => {\r\n  storageService.removeItem(StorageKey.TOKEN);\r\n  dispatch(userActions.setUser({ user: null, role: 'user' }));\r\n};\r\n\r\nconst sendUserInfo = (id: number) => (dispatch: Dispatch) => {\r\n  userService\r\n    .sendDataUser(id)\r\n    .then((res) =>\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: `Дані успішно надіслані на пошту ${res.email}`,\r\n        }),\r\n      ),\r\n    )\r\n    .catch((error) => {\r\n      console.log(error);\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Failed Send User Data!',\r\n        }),\r\n      );\r\n    });\r\n};\r\n\r\nconst deleteUser = (id: number) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const res = await userService.deleteUserById(id);\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'success',\r\n        title: 'Success!',\r\n        message: 'Реєстратора успішно видалено',\r\n      }),\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'error',\r\n        title: 'Error!',\r\n        message: 'Failed Delete Registrar!',\r\n      }),\r\n    );\r\n  }\r\n};\r\n\r\nexport { login, logout, sendUserInfo, deleteUser };\r\n","import * as React from 'react';\r\nimport {\r\n  Divider,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport validator from 'validator';\r\n\r\nexport default function LoginForm(params: {\r\n  onLogin: (loginPayload: { email: string; password: string }) => void;\r\n}) {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [isEmailValid, setIsEmailValid] = React.useState(true);\r\n  const [isPasswordValid, setIsPasswordValid] = React.useState(true);\r\n\r\n  const emailChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n    setIsEmailValid(true);\r\n  };\r\n\r\n  const passwordChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(event.target.value);\r\n    setIsPasswordValid(true);\r\n  };\r\n\r\n  const handleLoginClick = () => {\r\n    const isValid = isEmailValid && isPasswordValid;\r\n    if (!isValid || isLoading) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n\r\n    params.onLogin({ email, password });\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent sx={{ display: 'flex', flexDirection: 'column' }}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          Login to your account\r\n        </Typography>\r\n        <Divider />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Email\"\r\n          variant=\"standard\"\r\n          error={!isEmailValid}\r\n          onChange={emailChanged}\r\n          onBlur={() => setIsEmailValid(validator.isEmail(email))}\r\n        />\r\n\r\n        <TextField\r\n          id=\"standard-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          variant=\"standard\"\r\n          error={!isPasswordValid}\r\n          onChange={passwordChanged}\r\n          onBlur={() => setIsPasswordValid(Boolean(password))}\r\n        />\r\n      </CardContent>\r\n      <CardActions>\r\n        <LoadingButton\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          loading={isLoading}\r\n          loadingIndicator=\"Loading...\"\r\n          onClick={handleLoginClick}\r\n        >\r\n          Login\r\n        </LoadingButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useTypedDispatch } from '../../../store/store';\r\nimport { login } from '../../../store/user/actions';\r\nimport { AppRoute } from '../../../common/enum/enums';\r\nimport { Grid } from '@mui/material';\r\nimport LoginForm from './LoginForm';\r\n\r\nexport const SignPage = () => {\r\n  const dispatch = useTypedDispatch();\r\n  const { pathname } = useLocation();\r\n\r\n  const handleLogin = React.useCallback(\r\n    (loginPayload: { email: string; password: string }) =>\r\n      dispatch(login(loginPayload)),\r\n    [dispatch],\r\n  );\r\n\r\n  const getScreen = (path: string) => {\r\n    switch (path) {\r\n      case AppRoute.LOGIN: {\r\n        return <LoginForm onLogin={handleLogin} />;\r\n      }\r\n      default: {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ minHeight: '80vh' }}\r\n    >\r\n      <Grid item sx={{ width: 500 }}>\r\n        {getScreen(pathname)}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { AppRoute } from '../../common/enum/enums';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nconst NotFound = () => (\r\n  <h2>\r\n    <SentimentVeryDissatisfiedIcon />\r\n    <span>404 Not Found</span>\r\n    Go to\r\n    <NavLink to={AppRoute.ROOT}> Home </NavLink>\r\n    page\r\n  </h2>\r\n);\r\n\r\nexport default NotFound;\r\n","import { Dispatch } from '@reduxjs/toolkit';\r\nimport { typeService } from '../../services/services';\r\nimport { uiActions } from '../ui/slice';\r\nimport { typeActions } from './slice';\r\n\r\nexport const fetchTypesData = () => (dispatch: Dispatch) => {\r\n  typeService\r\n    .getAllTypes()\r\n    .then((types) => {\r\n      dispatch(typeActions.setTypes({ types: types }));\r\n    })\r\n    .catch(() => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Fetching type data failed!',\r\n        }),\r\n      );\r\n    });\r\n};\r\n","export interface IMethodCreate {\r\n  registration_code: string;\r\n  name: string;\r\n  id_domains: number | null;\r\n\r\n  year_creation: Date | null;\r\n  year_making_changes: Date | null;\r\n  year_termination_application: Date | null;\r\n\r\n  date_of_decision_on_state_registration: Date | null;\r\n  date_of_decision_on_state_registration_of_changes: Date | null;\r\n  date_of_decision_to_terminate_the_application: Date | null;\r\n\r\n  author: string;\r\n}\r\n\r\nexport interface IMethodCheck {\r\n  registration_code: boolean;\r\n  name: boolean;\r\n  author: boolean;\r\n  id_domains: boolean;\r\n}\r\n\r\nexport const initialMethodCheckValid: IMethodCheck = {\r\n  registration_code: true,\r\n  name: true,\r\n  author: true,\r\n  id_domains: true,\r\n};\r\n\r\nexport const initialState: IMethodCreate = {\r\n  registration_code: '',\r\n  name: '',\r\n  author: '',\r\n  id_domains: null,\r\n\r\n  year_creation: null,\r\n  year_making_changes: null,\r\n  year_termination_application: null,\r\n\r\n  date_of_decision_on_state_registration: null,\r\n  date_of_decision_on_state_registration_of_changes: null,\r\n  date_of_decision_to_terminate_the_application: null,\r\n};\r\n\r\nexport interface IDoc {\r\n  doc_copy_of_method: File | null;\r\n  doc_report_review: File | null;\r\n\r\n  doc_certificate_of_approbation: File | null;\r\n  doc_copy_of_implementation: File | null;\r\n\r\n  doc_discount_card: File | null;\r\n}\r\n\r\nexport const initialDocsState: IDoc = {\r\n  doc_copy_of_method: null,\r\n  doc_report_review: null,\r\n\r\n  doc_certificate_of_approbation: null,\r\n  doc_copy_of_implementation: null,\r\n\r\n  doc_discount_card: null,\r\n};\r\n","import { Dispatch } from '@reduxjs/toolkit';\r\nimport { MethodDTO } from '../../common/dtos/method/MethodDTO';\r\nimport { MethodFilter } from '../../services/interfaces/interfaces';\r\nimport { methodService } from '../../services/services';\r\nimport { uiActions } from '../ui/slice';\r\nimport { methodActions } from './slice';\r\n\r\nexport const fetchMethodsData =\r\n  (filter: MethodFilter) => (dispatch: Dispatch) => {\r\n    console.log(filter, 'tut');\r\n\r\n    methodService\r\n      .getAllMethods(filter)\r\n      .then((methods) => {\r\n        dispatch(\r\n          methodActions.replaceMethod({\r\n            methods: methods.methods,\r\n            totalCount: methods.count,\r\n            page: filter.page,\r\n          }),\r\n        );\r\n      })\r\n      .catch(() => {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Fetching method data failed!',\r\n          }),\r\n        );\r\n      });\r\n  };\r\n\r\nexport const createMethod = (form: FormData) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const res = await methodService.addMethod(form);\r\n    console.log(res);\r\n\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'success',\r\n        title: 'Success!',\r\n        message: 'New  method created!',\r\n      }),\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: 'error',\r\n        title: 'Error!',\r\n        message: 'Creating method failed!',\r\n      }),\r\n    );\r\n  }\r\n};\r\n\r\nexport const updateMethod =\r\n  (id: number, form: FormData) => async (dispatch: Dispatch) => {\r\n    try {\r\n      const res = await methodService.updateMetod(id, form);\r\n      console.log(res);\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: 'Method updated!',\r\n        }),\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Updating method failed!',\r\n        }),\r\n      );\r\n    }\r\n  };\r\n","import {\r\n  Paper,\r\n  Grid,\r\n  Stack,\r\n  TextField,\r\n  Autocomplete,\r\n  Input,\r\n  InputLabel,\r\n  Button,\r\n} from '@mui/material';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport * as React from 'react';\r\nimport { useTypedDispatch, useTypedSelector } from '../../../store/store';\r\nimport { fetchTypesData } from '../../../store/type/actions';\r\nimport { loadTypes } from '../../../store/type/slice';\r\nimport { DomainDTO } from '../../../common/dtos/domain/DomainDTO';\r\nimport validator from 'validator';\r\nimport {\r\n  IDoc,\r\n  IMethodCheck,\r\n  IMethodCreate,\r\n  initialDocsState,\r\n  initialMethodCheckValid,\r\n  initialState,\r\n} from './interfaces';\r\nimport { getDateStr, getYear } from '../../../helpers/date/dayjs/dayjs';\r\nimport { createMethod } from '../../../store/method/actions';\r\n\r\nexport const CreateMethod = () => {\r\n  const types = useTypedSelector(loadTypes);\r\n  const dispatch = useTypedDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchTypesData());\r\n  }, [dispatch]);\r\n\r\n  const [methodData, setMethodData] =\r\n    React.useState<IMethodCreate>(initialState);\r\n\r\n  const [methodCheckFields, setCheckField] = React.useState<IMethodCheck>(\r\n    initialMethodCheckValid,\r\n  );\r\n\r\n  const [docs, setDocs] = React.useState<IDoc>(initialDocsState);\r\n\r\n  const handleOnClickAdd = () => {\r\n    if (Object.values(docs).every((element) => element === null)) return;\r\n    else if (\r\n      Object.values(methodData).every(\r\n        (element) => element === null || element === '',\r\n      )\r\n    )\r\n      return;\r\n    else if (Object.values(methodCheckFields).every((element) => element)) {\r\n      const form = new FormData();\r\n      // form.\r\n\r\n      // form.append('data', methodData.registration_code, 'f');\r\n      // form.append('data', methodData.registration_code, 'files');\r\n\r\n      form.append('registration_code', methodData.registration_code);\r\n      console.log(methodData);\r\n      console.log(docs);\r\n\r\n      form.append(\r\n        'id_domains',\r\n        methodData.id_domains === null ? '' : methodData.id_domains.toString(),\r\n      );\r\n      form.append('name', methodData.name);\r\n      form.append(\r\n        'year_creation',\r\n        methodData.year_creation === null\r\n          ? ''\r\n          : getYear(methodData.year_creation).toString(),\r\n      );\r\n      if (methodData.year_making_changes !== null) {\r\n        form.append(\r\n          'year_making_changes',\r\n          getYear(methodData.year_making_changes).toString(),\r\n        );\r\n      }\r\n      if (methodData.year_termination_application !== null) {\r\n        form.append(\r\n          'year_termination_application',\r\n          getYear(methodData.year_termination_application).toString(),\r\n        );\r\n      }\r\n      form.append(\r\n        'date_of_decision_on_state_registration',\r\n        methodData.date_of_decision_on_state_registration === null\r\n          ? ''\r\n          : getDateStr(methodData.date_of_decision_on_state_registration),\r\n      );\r\n      if (\r\n        methodData.date_of_decision_on_state_registration_of_changes !== null\r\n      ) {\r\n        form.append(\r\n          'date_of_decision_on_state_registration_of_changes',\r\n          getDateStr(\r\n            methodData.date_of_decision_on_state_registration_of_changes,\r\n          ),\r\n        );\r\n      }\r\n      if (methodData.date_of_decision_to_terminate_the_application !== null) {\r\n        form.append(\r\n          'date_of_decision_to_terminate_the_application',\r\n          getDateStr(methodData.date_of_decision_to_terminate_the_application),\r\n        );\r\n      }\r\n\r\n      if (docs.doc_copy_of_method !== null) {\r\n        form.append('doc_copy_of_method', docs.doc_copy_of_method);\r\n      }\r\n\r\n      if (docs.doc_report_review !== null) {\r\n        form.append('doc_report_review', docs.doc_report_review);\r\n      }\r\n\r\n      if (docs.doc_certificate_of_approbation !== null) {\r\n        form.append(\r\n          'doc_certificate_of_approbation',\r\n          docs.doc_certificate_of_approbation,\r\n        );\r\n      }\r\n\r\n      if (docs.doc_copy_of_implementation !== null) {\r\n        form.append(\r\n          'doc_copy_of_implementation',\r\n          docs.doc_copy_of_implementation,\r\n        );\r\n      }\r\n\r\n      if (docs.doc_discount_card !== null) {\r\n        form.append('doc_discount_card', docs.doc_discount_card);\r\n      }\r\n\r\n      form.append('author', methodData.author);\r\n\r\n      dispatch(createMethod(form));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const domains: DomainDTO[] = [];\r\n  types.types.forEach((type) => {\r\n    domains.push(...type.domains);\r\n  });\r\n\r\n  const typeNames = types.types.reduce(\r\n    (\r\n      acc: {\r\n        [id: number | string]: string;\r\n      },\r\n      obj,\r\n    ) => {\r\n      acc[obj.id] = obj.name;\r\n      return acc;\r\n    },\r\n    {},\r\n  );\r\n\r\n  const fWidth = 500;\r\n  return (\r\n    <Paper sx={{ margin: 'auto', flexGrow: 1, padding: 2 }}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ minHeight: '80vh' }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n          sx={{ flexGrow: 1 }}\r\n          spacing={2}\r\n        >\r\n          <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Реєстраційний код\"\r\n              variant=\"outlined\"\r\n              value={methodData.registration_code}\r\n              error={!methodCheckFields.registration_code}\r\n              required\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  registration_code: event.target.value,\r\n                })\r\n              }\r\n              onBlur={() =>\r\n                setCheckField({\r\n                  ...methodCheckFields,\r\n                  registration_code: /^[0-9]+[.][0-9]+[.][0-9]+$/.test(\r\n                    methodData.registration_code,\r\n                  ),\r\n                })\r\n              }\r\n              size=\"small\"\r\n              sx={{ width: fWidth }}\r\n            />\r\n            <Autocomplete\r\n              id=\"grouped-demo\"\r\n              options={domains.sort(\r\n                (a, b) =>\r\n                  -b.id_types.toString().localeCompare(a.id_types.toString()),\r\n              )}\r\n              groupBy={(option) => typeNames[option.id_types]}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={(event: any, option: DomainDTO | null) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  id_domains: option === null ? null : option.id,\r\n                })\r\n              }\r\n              sx={{ width: fWidth }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  required\r\n                  size=\"small\"\r\n                  label=\"Вид експертизи\"\r\n                  error={!methodCheckFields.id_domains}\r\n                  onBlur={() =>\r\n                    setCheckField({\r\n                      ...methodCheckFields,\r\n                      id_domains: methodData.id_domains !== null,\r\n                    })\r\n                  }\r\n                />\r\n              )}\r\n            />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Назва методики\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ width: fWidth }}\r\n              required\r\n              value={methodData.name}\r\n              error={!methodCheckFields.name}\r\n              onBlur={(event: React.FocusEvent<HTMLInputElement>) => {\r\n                setMethodData({\r\n                  ...methodData,\r\n                  name: event.target.value.trim(),\r\n                });\r\n                setCheckField({\r\n                  ...methodCheckFields,\r\n                  name: !validator.isEmpty(methodData.name, {\r\n                    ignore_whitespace: true,\r\n                  }),\r\n                });\r\n              }}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  name: event.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Автор\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ width: fWidth }}\r\n              required\r\n              value={methodData.author}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  author: event.target.value,\r\n                })\r\n              }\r\n              error={!methodCheckFields.author}\r\n              onBlur={(event: React.FocusEvent<HTMLInputElement>) => {\r\n                setMethodData({\r\n                  ...methodData,\r\n                  author: event.target.value.trim(),\r\n                });\r\n                setCheckField({\r\n                  ...methodCheckFields,\r\n                  author: !validator.isEmpty(methodData.author, {\r\n                    ignore_whitespace: true,\r\n                  }),\r\n                });\r\n              }}\r\n            />\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                views={['year']}\r\n                label=\"Рік створення методики\"\r\n                value={methodData.year_creation}\r\n                maxDate={new Date()}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    year_creation: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    required\r\n                    size=\"small\"\r\n                    {...params}\r\n                    sx={{ width: fWidth }}\r\n                  />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                views={['year']}\r\n                label=\"Рік внесення змін до методики\"\r\n                value={methodData.year_making_changes}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    year_making_changes: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                views={['year']}\r\n                label=\"Рік припинення застосування методики\"\r\n                value={methodData.year_termination_application}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    year_termination_application: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                label=\"Дата прийняття рішення про державну реєстрацію\"\r\n                value={methodData.date_of_decision_on_state_registration}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    date_of_decision_on_state_registration: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    required\r\n                    size=\"small\"\r\n                    sx={{ width: fWidth }}\r\n                  />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                label=\"Дата прийняття рішення про внесення змін у методику\"\r\n                value={\r\n                  methodData.date_of_decision_on_state_registration_of_changes\r\n                }\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    date_of_decision_on_state_registration_of_changes: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                label=\"Дата прийняття рішення про припинення застосування методики\"\r\n                value={methodData.date_of_decision_to_terminate_the_application}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    date_of_decision_to_terminate_the_application: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Stack>\r\n          <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <InputLabel htmlFor=\"import-button\" sx={{ width: fWidth }}>\r\n              <Grid container direction=\"column\" justifyContent=\"space-between\">\r\n                {'Рецензія на звіт'}\r\n\r\n                <Input\r\n                  id=\"import-button\"\r\n                  inputProps={{\r\n                    accept: ['.png', 'jpg', '.jpeg'],\r\n                  }}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    if (event.target.files !== null) {\r\n                      setDocs({\r\n                        ...docs,\r\n                        doc_report_review: event.target.files[0],\r\n                      });\r\n                    }\r\n                  }}\r\n                  type=\"file\"\r\n                />\r\n              </Grid>\r\n            </InputLabel>\r\n            <InputLabel htmlFor=\"import-button\" sx={{ width: fWidth }}>\r\n              <Grid container direction=\"column\" justifyContent=\"space-between\">\r\n                {'Рiшення наукової ради щодо впровадження'}\r\n\r\n                <Input\r\n                  id=\"import-button\"\r\n                  inputProps={{\r\n                    accept: ['.png', 'jpg', '.jpeg'],\r\n                  }}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    if (event.target.files !== null) {\r\n                      setDocs({\r\n                        ...docs,\r\n                        doc_copy_of_method: event.target.files[0],\r\n                      });\r\n                    }\r\n                  }}\r\n                  type=\"file\"\r\n                />\r\n              </Grid>\r\n            </InputLabel>\r\n            <InputLabel htmlFor=\"import-button\" sx={{ width: fWidth }}>\r\n              <Grid container direction=\"column\" justifyContent=\"space-between\">\r\n                {'Довідка про апробацію'}\r\n\r\n                <Input\r\n                  id=\"import-button\"\r\n                  inputProps={{\r\n                    accept: ['.png', 'jpg', '.jpeg'],\r\n                  }}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    if (event.target.files !== null) {\r\n                      setDocs({\r\n                        ...docs,\r\n                        doc_certificate_of_approbation: event.target.files[0],\r\n                      });\r\n                    }\r\n                  }}\r\n                  type=\"file\"\r\n                />\r\n              </Grid>\r\n            </InputLabel>\r\n            <InputLabel htmlFor=\"import-button\" sx={{ width: fWidth }}>\r\n              <Grid container direction=\"column\" justifyContent=\"space-between\">\r\n                {'Рішення щодо впровадження методики в експертну практику'}\r\n\r\n                <Input\r\n                  id=\"import-button\"\r\n                  inputProps={{\r\n                    accept: ['.png', 'jpg', '.jpeg'],\r\n                  }}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    if (event.target.files !== null) {\r\n                      setDocs({\r\n                        ...docs,\r\n                        doc_copy_of_implementation: event.target.files[0],\r\n                      });\r\n                    }\r\n                  }}\r\n                  type=\"file\"\r\n                />\r\n              </Grid>\r\n            </InputLabel>\r\n            <InputLabel htmlFor=\"import-button\" sx={{ width: fWidth }}>\r\n              <Grid container direction=\"column\" justifyContent=\"space-between\">\r\n                {'Облікова карта'}\r\n\r\n                <Input\r\n                  id=\"import-button\"\r\n                  inputProps={{\r\n                    accept: ['.png', 'jpg', '.jpeg'],\r\n                  }}\r\n                  onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    if (event.target.files !== null) {\r\n                      setDocs({\r\n                        ...docs,\r\n                        doc_discount_card: event.target.files[0],\r\n                      });\r\n                    }\r\n                  }}\r\n                  type=\"file\"\r\n                />\r\n              </Grid>\r\n            </InputLabel>\r\n            <Button variant=\"contained\" onClick={handleOnClickAdd}>\r\n              Добавити\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n","import {\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  TextField,\r\n  Paper,\r\n  Divider,\r\n  Button,\r\n} from '@mui/material';\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function SearchLine(params: {\r\n  onSubmit: (name: string) => void;\r\n}) {\r\n  const [field, setSearchField] = useState('');\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '100%' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <Paper\r\n        component=\"form\"\r\n        sx={{\r\n          p: '2px 4px',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          width: 500,\r\n        }}\r\n      >\r\n        <TextField\r\n          fullWidth\r\n          id=\"outlined-search fullWidth\"\r\n          label=\"Search field\"\r\n          type=\"search\"\r\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n            setSearchField(event.target.value);\r\n          }}\r\n        />\r\n        <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n\r\n        <Button variant=\"text\" onClick={() => params.onSubmit(field)}>\r\n          Пошук\r\n        </Button>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { FormControlLabel, Checkbox } from '@mui/material';\r\nimport { TreeView, TreeItem } from '@mui/lab';\r\nimport { ExpandLess, ExpandMore } from '@mui/icons-material';\r\nimport { Checked, DomainData, TypeData } from './interfaces';\r\n\r\nconst createCheckedData = (t: TypeData) => {\r\n  const newValue: Checked = {};\r\n  t.domains.forEach((d) => (newValue[d.id] = { status: false }));\r\n  return newValue;\r\n};\r\n\r\nexport default function CheckBoxTree(props: {\r\n  domains: TypeData;\r\n  onSearch: (checkBoxPaiload: Checked, key: number) => void;\r\n}) {\r\n  const [checked, setChecked] = React.useState<Checked>(\r\n    createCheckedData(props.domains),\r\n  );\r\n\r\n  const handleChangeParent = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const keys = Object.keys(checked);\r\n    const newValue: Checked = {};\r\n    keys.forEach((k) => (newValue[k] = { status: event.target.checked }));\r\n    setChecked(newValue);\r\n    props.onSearch(newValue, props.domains.id_types);\r\n  };\r\n\r\n  const handleChangeChild = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const key = event.target.value;\r\n    const newValue: Checked = {\r\n      ...checked,\r\n    };\r\n    newValue[key] = { status: event.target.checked };\r\n    setChecked(newValue);\r\n    props.onSearch(newValue, props.domains.id_types);\r\n  };\r\n\r\n  const RenderChild = (domain: DomainData) => {\r\n    const s = checked[domain.id];\r\n    if (!s) {\r\n      const newChecked = checked;\r\n      newChecked[domain.id] = { status: false };\r\n      setChecked(newChecked);\r\n    }\r\n\r\n    return (\r\n      <TreeItem\r\n        key={domain.id}\r\n        nodeId={domain.name}\r\n        label={\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                value={domain.id}\r\n                checked={checked[domain.id].status}\r\n                onChange={handleChangeChild}\r\n              />\r\n            }\r\n            label={domain.name}\r\n            key={domain.id}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const RenderTreeWithCheckboxes = (section: TypeData) => {\r\n    return (\r\n      <TreeItem\r\n        key={section.id_types}\r\n        nodeId={section.name}\r\n        label={\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                indeterminate={\r\n                  Object.keys(checked).some((el) => checked[el].status) !==\r\n                  Object.keys(checked).every((el) => checked[el].status)\r\n                }\r\n                checked={Object.keys(checked).every((el) => checked[el].status)}\r\n                onChange={handleChangeParent}\r\n              />\r\n            }\r\n            label={section.name}\r\n            key={section.id_types}\r\n          />\r\n        }\r\n      >\r\n        {Array.isArray(section.domains)\r\n          ? section.domains.map(RenderChild)\r\n          : null}\r\n      </TreeItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TreeView\r\n      defaultCollapseIcon={<ExpandMore />}\r\n      defaultExpandIcon={<ExpandLess />}\r\n      sx={{ flexGrow: 1, width: 500 }}\r\n    >\r\n      {RenderTreeWithCheckboxes(props.domains)}\r\n    </TreeView>\r\n  );\r\n}\r\n","import { Grid, Paper, Stack, Box } from '@mui/material';\r\nimport * as React from 'react';\r\nimport SearchLine from './SearchLine';\r\nimport { Checked, Section } from './interfaces';\r\nimport CheckBoxTree from './CheckBoxListItem';\r\nimport { TypeDTO } from '../../../common/dtos/type/TypeDTO';\r\nimport { loadTypes } from '../../../store/type/slice';\r\nimport { useTypedDispatch, useTypedSelector } from '../../../store/store';\r\nimport { fetchTypesData } from '../../../store/type/actions';\r\nimport { MethodFilter } from '../../../services/interfaces/interfaces';\r\nimport { check } from 'prettier';\r\n\r\nconst createData = (types: TypeDTO[]): Section => {\r\n  return types.reduce((acc: Section, obj: TypeDTO) => {\r\n    acc[obj.id] = {\r\n      name: obj.name,\r\n      id_types: obj.id,\r\n      domains: [...obj.domains],\r\n    };\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\ntype Selected = { [x: string]: Checked };\r\n\r\nexport const Search = (props: {\r\n  onSearch: (name: string, ids: string) => void;\r\n}) => {\r\n  const types = useTypedSelector(loadTypes);\r\n  const sections = createData(types.types);\r\n\r\n  const dispatch = useTypedDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchTypesData());\r\n  }, [dispatch]);\r\n\r\n  const [selected, setSelected] = React.useState<Selected>({});\r\n\r\n  const handleSearch = React.useCallback((name: string) => {\r\n    const ids: string[] = [];\r\n    Object.values(selected).forEach((el: Checked) => {\r\n      Object.keys(el).forEach((idType: string) => {\r\n        // console.log(id, 'asdas');\r\n        // if (el[id].status === true) ids.push(id);\r\n      });\r\n    });\r\n    console.log(ids.join(','), 'suka');\r\n\r\n    return props.onSearch(name, ids.join(','));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ margin: 'auto', flexGrow: 1, width: '100%' }}>\r\n        <Box sx={{ flexGrow: 1, p: 3 }}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justifyContent=\"space-evenly\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}\r\n          >\r\n            <SearchLine onSubmit={handleSearch} />\r\n\r\n            <Stack\r\n              direction=\"column\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n              spacing={0}\r\n            >\r\n              {Object.keys(sections).map((value: string) => {\r\n                const handleCheckAction = (\r\n                  checkBoxPaiload: Checked,\r\n                  key: number,\r\n                ) => {\r\n                  const newValue: Selected = { ...selected };\r\n                  newValue[key] = checkBoxPaiload;\r\n                  console.log(newValue);\r\n                  setSelected(newValue);\r\n                };\r\n                return (\r\n                  <CheckBoxTree\r\n                    domains={sections[Number(value)]}\r\n                    onSearch={handleCheckAction}\r\n                  />\r\n                );\r\n              })}\r\n            </Stack>\r\n          </Grid>\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Pagination,\r\n  Grid,\r\n  Button,\r\n} from '@mui/material';\r\nimport { MethodDTO } from '../../../common/dtos/method/MethodDTO';\r\nimport { useTypedDispatch, useTypedSelector } from '../../../store/store';\r\nimport { loadMethods } from '../../../store/method/slice';\r\nimport { fetchMethodsData } from '../../../store/method/actions';\r\nimport { getDateStr } from '../../../helpers/date/dayjs/dayjs';\r\nimport { getUser } from '../../../store/user/slice';\r\nimport { MethodFilter } from '../../../services/interfaces/interfaces';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { AppRoute } from '../../../common/enum/enums';\r\nimport { Search } from '../search/Search';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport * as uuid from 'uuid';\r\nimport saveAs from 'file-saver';\r\nimport * as path from 'path';\r\n\r\ninterface Column {\r\n  id:\r\n    | 'number'\r\n    | 'code'\r\n    | 'type'\r\n    | 'name'\r\n    | 'developer'\r\n    | 'created'\r\n    | 'updated'\r\n    | 'stoped'\r\n    | 'registered'\r\n    | 'registered_changes'\r\n    | 'stop_date'\r\n    | 'docs'\r\n    | 'change_row';\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: 'right';\r\n  format?: (value: any) => any;\r\n}\r\n\r\nconst columns: Column[] = [\r\n  { id: 'number', label: '№', minWidth: 10, format: String },\r\n  { id: 'code', label: 'Реєстраційний код', minWidth: 10 },\r\n  {\r\n    id: 'type',\r\n    label: 'Вид експертизи',\r\n    format: (value: [string, string]) => (\r\n      <>\r\n        <b>{value[0]}</b>\r\n        <br />\r\n        {value[1]}\r\n      </>\r\n    ),\r\n    minWidth: 90,\r\n  },\r\n  { id: 'name', label: 'Назва методики', minWidth: 90 },\r\n  { id: 'developer', label: 'Найменування розробника' },\r\n  { id: 'created', label: 'Рік створення методики', format: String },\r\n  {\r\n    id: 'updated',\r\n    label: 'Рік внесення змін до методики',\r\n    format: (value: number | null) => (value ? String(value) : '---'),\r\n  },\r\n  {\r\n    id: 'stoped',\r\n    label: 'Рік припинення застосування методики',\r\n    format: (value: number | null) => (value ? String(value) : '---'),\r\n  },\r\n  {\r\n    id: 'registered',\r\n    label: 'Дата прийняття рішення про державну реєстрацію',\r\n    format: getDateStr,\r\n  },\r\n  {\r\n    id: 'registered_changes',\r\n    label: 'Дата прийняття рішення про державну реєстрацію змін до методики',\r\n    format: (value: Date | null) => (value ? getDateStr(value) : '---'),\r\n  },\r\n  {\r\n    id: 'stop_date',\r\n    label: 'Дата прийняття рішення про припинення застосування методики',\r\n    format: (value: Date | null) => (value ? getDateStr(value) : '---'),\r\n  },\r\n];\r\n\r\nconst privateColumns: Column[] = [\r\n  {\r\n    id: 'docs',\r\n    label: 'Вкладені документи',\r\n    format: (value: string[]) => (\r\n      <Button\r\n        color=\"info\"\r\n        startIcon={<SaveIcon />}\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          value.forEach((e, ind) => {\r\n            fetch(e)\r\n              .then((res) => res.blob())\r\n              .then((blob) => {\r\n                const link = new URL(e).pathname;\r\n                saveAs(blob, `doc_${ind}${path.extname(link)}`);\r\n              });\r\n          });\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n    ),\r\n  },\r\n  {\r\n    id: 'change_row',\r\n    label: 'Внести зміни',\r\n    format: (value: number) => (\r\n      <Button\r\n        color=\"secondary\"\r\n        href={`${AppRoute.METHOD}/${value}`}\r\n        startIcon={<EditIcon />}\r\n        variant=\"contained\"\r\n      >\r\n        Edit\r\n      </Button>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface Data {\r\n  number: number;\r\n  code: string;\r\n  type: [string, string];\r\n  name: string;\r\n  developer: string;\r\n  created: number;\r\n  updated: number | null;\r\n  stoped: number | null;\r\n  registered: Date;\r\n  registered_changes: Date | null;\r\n  stop_date: Date | null;\r\n  docs?: string[];\r\n  change_row?: number;\r\n}\r\n\r\nfunction createData(method: MethodDTO, index: number, isPrivat: boolean): Data {\r\n  return {\r\n    number: index,\r\n    code: method.registration_code,\r\n    type: [\r\n      method.domainsOfMethod.typesOfMethods.name,\r\n      method.domainsOfMethod.name,\r\n    ],\r\n    name: method.name,\r\n    developer: method.author,\r\n    created: method.year_creation,\r\n    updated: method.year_making_changes,\r\n    stoped: method.year_termination_application,\r\n    registered: new Date(method.date_of_decision_on_state_registration),\r\n    registered_changes: method.date_of_decision_on_state_registration_of_changes\r\n      ? new Date(method.date_of_decision_on_state_registration_of_changes)\r\n      : null,\r\n    stop_date: method.date_of_decision_to_terminate_the_application\r\n      ? new Date(method.date_of_decision_to_terminate_the_application)\r\n      : null,\r\n    docs: isPrivat\r\n      ? [\r\n          method.doc_certificate_of_approbation,\r\n          method.doc_copy_of_implementation,\r\n          method.doc_copy_of_method,\r\n          method.doc_discount_card,\r\n          method.doc_report_review,\r\n        ]\r\n      : undefined,\r\n    change_row: isPrivat ? method.id : undefined,\r\n  };\r\n}\r\n\r\nconst methodsFilter: MethodFilter = {\r\n  page: 1,\r\n  count: 10,\r\n};\r\n\r\nexport default function MethodTable() {\r\n  const { pathname } = useLocation();\r\n\r\n  const methods = useTypedSelector(loadMethods);\r\n  const user = useTypedSelector(getUser);\r\n  const dispatch = useTypedDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchMethodsData(methodsFilter));\r\n  }, [dispatch]);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    methodsFilter.page = newPage;\r\n    dispatch(fetchMethodsData(methodsFilter));\r\n  };\r\n\r\n  const handleSearch = React.useCallback(\r\n    (name: string, ids: string) => {\r\n      methodsFilter.page = 1;\r\n      methodsFilter.count = 10;\r\n      console.log(ids);\r\n\r\n      methodsFilter.ids = ids;\r\n      methodsFilter.name = name;\r\n      dispatch(fetchMethodsData(methodsFilter));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      //   justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      {pathname === AppRoute.SEARCH && <Search onSearch={handleSearch} />}\r\n\r\n      <Paper sx={{ width: '100%' }}>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n                {user.role === 'registrator' &&\r\n                  privateColumns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {methods.methods.map((method, index) => {\r\n                const row = createData(\r\n                  method,\r\n                  index + 1 + methods.count * (methods.page - 1),\r\n                  user.role === 'registrator',\r\n                );\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={uuid.v1()}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value !== 'string'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                    {user.role === 'registrator' &&\r\n                      privateColumns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value !== 'string'\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Pagination\r\n          page={methods.page}\r\n          count={methods.totalPages}\r\n          onChange={handleChangePage}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          size=\"small\"\r\n        />\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Dispatch } from '@reduxjs/toolkit';\r\nimport { UserFilter } from '../../services/interfaces/interfaces';\r\nimport { userService } from '../../services/services';\r\nimport { uiActions } from '../ui/slice';\r\nimport { registrarActions } from './slice';\r\nimport { AddressDTO } from '../../common/dtos/address/AddressDTO';\r\nimport { UserCreateDTO } from '../../common/dtos/user/UserCreateDTO';\r\n\r\nexport const fetchRegistrarsData =\r\n  (filter: UserFilter) => (dispatch: Dispatch) => {\r\n    userService\r\n      .getUsers(filter)\r\n      .then((users) => {\r\n        dispatch(\r\n          registrarActions.getRegistors({\r\n            registrars: users.users,\r\n            totalCount: users.count,\r\n            page: filter.page,\r\n          }),\r\n        );\r\n      })\r\n      .catch((error) =>\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Fetching user data failed!',\r\n          }),\r\n        ),\r\n      );\r\n  };\r\n\r\nexport const fetchUsersRelations = () => async (dispatch: Dispatch) => {\r\n  Promise.all([\r\n    userService.getOrganizations(),\r\n    userService.getAddresses(),\r\n    userService.getAuthorities(),\r\n    userService.getPositions(),\r\n  ])\r\n    .then((values) => {\r\n      const organizations = values[0].reduce(\r\n        (\r\n          acc: { [id: string | number]: { name: string } },\r\n          obj: { id: number; name: string },\r\n        ) => {\r\n          acc[obj.id] = {\r\n            name: obj.name,\r\n          };\r\n          return acc;\r\n        },\r\n        {},\r\n      );\r\n      console.log(organizations, 'organizations');\r\n\r\n      const addresses = values[1].reduce(\r\n        (\r\n          acc: { [id: string | number]: Omit<AddressDTO, 'id'> },\r\n          obj: AddressDTO,\r\n        ) => {\r\n          acc[obj.id] = {\r\n            city: obj.city,\r\n            flat_number: obj.flat_number || null,\r\n            house_number: obj.house_number,\r\n            region: obj.region,\r\n            street: obj.street,\r\n          };\r\n          return acc;\r\n        },\r\n        {},\r\n      );\r\n      const authorities = values[2].reduce(\r\n        (\r\n          acc: {\r\n            [id: string | number]: {\r\n              code: number;\r\n              id_adress: number;\r\n              name: string;\r\n            };\r\n          },\r\n          obj: { id: number; code: number; id_adress: number; name: string },\r\n        ) => {\r\n          acc[obj.id] = {\r\n            code: obj.code,\r\n            id_adress: obj.id_adress,\r\n            name: obj.name,\r\n          };\r\n          return acc;\r\n        },\r\n        {},\r\n      );\r\n      const position = values[3].reduce(\r\n        (\r\n          acc: { [id: string | number]: { name: string } },\r\n          obj: { id: number; name: string },\r\n        ) => {\r\n          acc[obj.id] = {\r\n            name: obj.name,\r\n          };\r\n          return acc;\r\n        },\r\n        {},\r\n      );\r\n      console.log(authorities, 'authorities');\r\n\r\n      dispatch(\r\n        registrarActions.getRelations({\r\n          organizations: organizations,\r\n          authorities: authorities,\r\n          addresses: addresses,\r\n          position: position,\r\n        }),\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Fetching registats relations failed!',\r\n        }),\r\n      );\r\n    });\r\n};\r\n\r\nexport const createUser =\r\n  (user: UserCreateDTO) => async (dispatch: Dispatch) => {\r\n    try {\r\n      const res = await userService.postUser(user);\r\n      console.log(res);\r\n\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'success',\r\n          title: 'Success!',\r\n          message: 'New user created!',\r\n        }),\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Creating user failed!',\r\n        }),\r\n      );\r\n    }\r\n  };\r\n","import {\r\n  Autocomplete,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  Stack,\r\n  TextField,\r\n} from '@mui/material';\r\n\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport * as React from 'react';\r\nimport {\r\n  createUser,\r\n  fetchUsersRelations,\r\n} from '../../../store/registrar/actions';\r\nimport { useTypedDispatch, useTypedSelector } from '../../../store/store';\r\nimport { loadRegistrars } from '../../../store/registrar/slice';\r\nimport { getDateStr } from '../../../helpers/date/dayjs/dayjs';\r\nimport { UserCreateDTO } from '../../../common/dtos/user/UserCreateDTO';\r\n\r\nconst fWidth = 500;\r\n\r\nexport interface IUserCreate {\r\n  full_name: string;\r\n  date_of_birth: Date | null;\r\n  series_passport: string;\r\n  date_of_issue_of_passport: Date | null;\r\n  id_authority_that_issued_the_passport: number | null;\r\n  ITN: string;\r\n  email: string;\r\n  id_role: number | null;\r\n  id_organizations: number | null;\r\n  passport_number: string;\r\n  id_position: number | null;\r\n  region: string;\r\n  city: string;\r\n  street: string;\r\n  house_number: number | null;\r\n  flat_number: number | null;\r\n}\r\n\r\nconst initialStateUserData: IUserCreate = {\r\n  full_name: '',\r\n  date_of_birth: null,\r\n  series_passport: '',\r\n  date_of_issue_of_passport: null,\r\n  id_authority_that_issued_the_passport: null,\r\n  ITN: '',\r\n  email: '',\r\n  id_role: null,\r\n  id_organizations: null,\r\n  passport_number: '',\r\n  id_position: null,\r\n  region: '',\r\n  city: '',\r\n  street: '',\r\n  house_number: null,\r\n  flat_number: null,\r\n};\r\n\r\ninterface IUserCheck {\r\n  full_name: boolean;\r\n  series_passport: boolean;\r\n  id_authority_that_issued_the_passport: boolean;\r\n  ITN: boolean;\r\n  email: boolean;\r\n  id_role: boolean;\r\n  id_organizations: boolean;\r\n  passport_number: boolean;\r\n  id_position: boolean;\r\n  region: boolean;\r\n  city: boolean;\r\n  street: boolean;\r\n  house_number: boolean;\r\n}\r\n\r\nconst initialCheckState: IUserCheck = {\r\n  full_name: true,\r\n  series_passport: true,\r\n  id_authority_that_issued_the_passport: true,\r\n  ITN: true,\r\n  email: true,\r\n  id_role: true,\r\n  id_organizations: true,\r\n  passport_number: true,\r\n  id_position: true,\r\n  region: true,\r\n  city: true,\r\n  street: true,\r\n  house_number: true,\r\n};\r\n\r\nexport function CreateUser() {\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const autocompleteFields = useTypedSelector(loadRegistrars);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchUsersRelations());\r\n  }, [dispatch]);\r\n\r\n  const [userData, setUserData] =\r\n    React.useState<IUserCreate>(initialStateUserData);\r\n  const [userCheckFields, setUserCheckFields] =\r\n    React.useState<IUserCheck>(initialCheckState);\r\n\r\n  const handleOnClickAdd = () => {\r\n    if (\r\n      Object.values(userData).every(\r\n        (element) => element === null || element === '',\r\n      )\r\n    )\r\n      return;\r\n    else if (Object.values(userCheckFields).every((element) => element)) {\r\n      const user: UserCreateDTO = {\r\n        email: userData.email,\r\n        full_name: userData.full_name,\r\n        date_of_birth:\r\n          userData.date_of_birth !== null\r\n            ? getDateStr(userData.date_of_birth)\r\n            : '',\r\n        series_passport: userData.series_passport,\r\n        passport_number: userData.passport_number,\r\n        date_of_issue_of_passport:\r\n          userData.date_of_issue_of_passport !== null\r\n            ? getDateStr(userData.date_of_issue_of_passport)\r\n            : '',\r\n        id_authority_that_issued_the_passport:\r\n          userData.id_authority_that_issued_the_passport === null\r\n            ? 0\r\n            : userData.id_authority_that_issued_the_passport,\r\n        ITN: userData.ITN,\r\n        id_organizations:\r\n          userData.id_organizations === null ? 0 : userData.id_organizations,\r\n        id_position: userData.id_position === null ? 0 : userData.id_position,\r\n        region: userData.region,\r\n        city: userData.city,\r\n        street: userData.street,\r\n        house_number:\r\n          userData.house_number === null ? 0 : userData.house_number,\r\n        flat_number: userData.flat_number,\r\n      };\r\n      dispatch(createUser(user));\r\n    }\r\n  };\r\n  const organizations = Object.keys(autocompleteFields.organizations).map(\r\n    (e) => ({ id: Number(e), name: autocompleteFields.organizations[e].name }),\r\n  );\r\n\r\n  //держ орган що видав папорт\r\n  const authorities = Object.keys(autocompleteFields.authorities).map((e) => ({\r\n    id: Number(e),\r\n    name: autocompleteFields.authorities[e].name,\r\n  }));\r\n\r\n  //посада\r\n  const positions = Object.keys(autocompleteFields.position).map((e) => ({\r\n    id: Number(e),\r\n    name: autocompleteFields.position[e].name,\r\n  }));\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        margin: 'auto',\r\n        flexGrow: 1,\r\n\r\n        padding: 2,\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"flex-start\"\r\n        // spacing={{ xs: 1, sm: 2, md: 4, p: 2 }}\r\n        spacing={2}\r\n      >\r\n        <Stack\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          sx={{ p: 1 }}\r\n        >\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={organizations}\r\n            sx={{ width: fWidth }}\r\n            getOptionLabel={(option) => option.name}\r\n            onChange={(\r\n              event: any,\r\n              option: { name: string; id: number } | null,\r\n            ) =>\r\n              setUserData({\r\n                ...userData,\r\n                id_organizations: option === null ? null : option.id,\r\n              })\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Назва державного органу\" />\r\n            )}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"ПІБ\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={userData.full_name}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                full_name: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DatePicker\r\n              label=\"Дата народження\"\r\n              value={userData.date_of_birth}\r\n              onChange={(newValue) => {\r\n                setUserData({ ...userData, date_of_birth: newValue });\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} sx={{ width: fWidth }} />\r\n              )}\r\n            />\r\n          </LocalizationProvider>\r\n        </Stack>\r\n        <Stack\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          sx={{ p: 1 }}\r\n        >\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={positions}\r\n            sx={{ width: fWidth }}\r\n            getOptionLabel={(option) => option.name}\r\n            onChange={(\r\n              event: any,\r\n              option: { name: string; id: number } | null,\r\n            ) =>\r\n              setUserData({\r\n                ...userData,\r\n                id_position: option === null ? null : option.id,\r\n              })\r\n            }\r\n            renderInput={(params) => <TextField {...params} label=\"Посада\" />}\r\n          />\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={authorities}\r\n            sx={{ width: fWidth }}\r\n            getOptionLabel={(option) => option.name}\r\n            onChange={(\r\n              event: any,\r\n              option: { name: string; id: number } | null,\r\n            ) =>\r\n              setUserData({\r\n                ...userData,\r\n                id_authority_that_issued_the_passport:\r\n                  option === null ? null : option.id,\r\n              })\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Назва державного органу\" />\r\n            )}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Номер паспорта\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={userData.passport_number}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                passport_number: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Серія паспорта\"\r\n            variant=\"outlined\"\r\n            value={userData.series_passport}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                series_passport: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DatePicker\r\n              label=\"Дата видачі паспорту\"\r\n              value={userData.date_of_issue_of_passport}\r\n              onChange={(newValue) => {\r\n                setUserData({\r\n                  ...userData,\r\n                  date_of_issue_of_passport: newValue,\r\n                });\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField {...params} sx={{ width: fWidth }} />\r\n              )}\r\n            />\r\n          </LocalizationProvider>\r\n        </Stack>\r\n        <Stack\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          sx={{ p: 1 }}\r\n        >\r\n          {/* <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Орган, що видав паспорт\"\r\n            variant=\"outlined\"\r\n            \r\n            sx={{ width: fWidth }}\r\n          /> */}\r\n          {/* <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={authorities}\r\n            sx={{ width: fWidth }}\r\n            getOptionLabel={(option) => option.name}\r\n            onChange={(\r\n              event: any,\r\n              option: { name: string; id: number } | null,\r\n            ) =>\r\n              setUserData({\r\n                ...userData,\r\n                id_authority_that_issued_the_passport:\r\n                  option === null ? null : option.id,\r\n              })\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Орган, що видав паспорт\" />\r\n            )}\r\n          /> */}\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Індифікаційний номер облікової карти платника\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={userData.ITN}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                ITN: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Електронна адреса\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={userData.email}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                email: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Електронна адреса\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={userData.email}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                email: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />{' '}\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Електронна адреса\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={userData.email}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                email: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />{' '}\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Електронна адреса\"\r\n            variant=\"outlined\"\r\n            required\r\n            value={userData.email}\r\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUserData({\r\n                ...userData,\r\n                email: event.target.value,\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n        </Stack>\r\n      </Grid>\r\n      <Box textAlign=\"center\">\r\n        <Button variant=\"outlined\" onClick={handleOnClickAdd}>\r\n          Добавити\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { loadRegistrars } from '../../../store/registrar/slice';\r\nimport { useTypedDispatch, useTypedSelector } from '../../../store/store';\r\nimport { UserDTO } from '../../../common/dtos/user/UserDTO';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {\r\n  fetchRegistrarsData,\r\n  fetchUsersRelations,\r\n} from '../../../store/registrar/actions';\r\nimport { UserFilter } from '../../../services/interfaces/interfaces';\r\nimport { AddressDTO } from '../../../common/dtos/address/AddressDTO';\r\nimport * as uuid from 'uuid';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Pagination,\r\n} from '@mui/material';\r\nimport { deleteUser, sendUserInfo } from '../../../store/user/actions';\r\n\r\nfunction Row(props: {\r\n  row: UserDTO;\r\n  organization: string;\r\n  address: Omit<AddressDTO, 'id'>;\r\n  authority: {\r\n    code: number;\r\n    id_adress: number;\r\n    name: string;\r\n  };\r\n  onDelete: () => void;\r\n}) {\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const [openUserInfo, setOpenUserInfo] = React.useState(false);\r\n  const [openDialogSend, setOpenDialogSend] = React.useState(false);\r\n  const [openDialogDelete, setOpenDialogDelete] = React.useState(false);\r\n\r\n  const handleSendUserInfo = () => {\r\n    dispatch(sendUserInfo(props.row.id));\r\n  };\r\n\r\n  const handleDeleteUser = () => {\r\n    dispatch(deleteUser(props.row.id));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpenUserInfo(!openUserInfo)}\r\n          >\r\n            {openUserInfo ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {props.row.full_name}\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setOpenDialogSend(true)}\r\n            endIcon={<SendIcon />}\r\n          >\r\n            Send\r\n          </Button>\r\n          <Dialog\r\n            open={openDialogSend}\r\n            onClose={() => setOpenDialogSend(false)}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n              {'Надіслати дані для входу Реєстратору?'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {`Дані будуть надіслані на цю електрону адресу ${props.row.email} `}\r\n                {'Ви впевнені?'}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleSendUserInfo} autoFocus>\r\n                Так\r\n              </Button>\r\n              <Button onClick={() => setOpenDialogSend(false)}>Ні</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => setOpenDialogDelete(true)}\r\n            startIcon={<DeleteIcon />}\r\n          >\r\n            Delete\r\n          </Button>\r\n          <Dialog\r\n            open={openDialogDelete}\r\n            onClose={() => setOpenDialogDelete(false)}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n              {'Видалити Реєстратора?'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {'Реєстратор та всі його дані будуть видалені. '}\r\n                {'Ви впевнені?'}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleDeleteUser} autoFocus>\r\n                Так\r\n              </Button>\r\n              <Button onClick={() => setOpenDialogDelete(false)}>Ні</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={openUserInfo} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Повна інформація\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableBody>\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {'Назва державного органу'}\r\n                      </TableCell>\r\n                      <TableCell>{props.organization}</TableCell>\r\n                    </TableRow>\r\n                  }\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {'Дата нарождення'}\r\n                      </TableCell>\r\n                      <TableCell>{props.row.date_of_birth}</TableCell>\r\n                    </TableRow>\r\n                  }\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {'Серія паспорта'}\r\n                      </TableCell>\r\n                      <TableCell>{props.row.series_passport}</TableCell>\r\n                    </TableRow>\r\n                  }\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {'Номер паспорта'}\r\n                      </TableCell>\r\n                      <TableCell>{props.row.passport_number}</TableCell>\r\n                    </TableRow>\r\n                  }\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {'Дата видачі паспорта'}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {props.row.date_of_issue_of_passport}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  }\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {'Орган, що видав паспорт'}\r\n                      </TableCell>\r\n                      <TableCell>{`${props.authority.name} - ${props.authority.code}`}</TableCell>\r\n                    </TableRow>\r\n                  }\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {\r\n                          'Реєстраційний номер облікової карти платника податків'\r\n                        }\r\n                      </TableCell>\r\n                      <TableCell>{props.row.ITN}</TableCell>\r\n                    </TableRow>\r\n                  }\r\n                  {\r\n                    <TableRow key={uuid.v1()}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {'Електронна пошта'}\r\n                      </TableCell>\r\n                      <TableCell>{props.row.email}</TableCell>\r\n                    </TableRow>\r\n                  }\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst userFilter: UserFilter = {\r\n  page: 1,\r\n  count: 10,\r\n};\r\n\r\nexport default function UserTable() {\r\n  const registrars = useTypedSelector(loadRegistrars);\r\n\r\n  const dispatch = useTypedDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchUsersRelations());\r\n    dispatch(fetchRegistrarsData(userFilter));\r\n  }, [dispatch]);\r\n\r\n  if (!registrars.organizations) {\r\n    dispatch(fetchUsersRelations());\r\n  }\r\n\r\n  if (registrars.registrars.length === 0) {\r\n    dispatch(fetchRegistrarsData(userFilter));\r\n  }\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    userFilter.page = newPage;\r\n    dispatch(fetchRegistrarsData(userFilter));\r\n  };\r\n\r\n  if (\r\n    registrars.registrars.length !== 0 &&\r\n    Object.keys(registrars.organizations).length !== 0\r\n  )\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>ПІБ Реєстратора</TableCell>\r\n              <TableCell align=\"right\">Надіслати дані для входу</TableCell>\r\n              <TableCell align=\"right\">Видалити</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {registrars.registrars.map((row) => (\r\n              <Row\r\n                key={row.id}\r\n                row={row}\r\n                organization={\r\n                  registrars.organizations[row.id_organizations].name\r\n                }\r\n                address={registrars.addresses[row.id_adress]}\r\n                authority={\r\n                  registrars.authorities[\r\n                    row.id_authority_that_issued_the_passport\r\n                  ]\r\n                }\r\n                onDelete={() => dispatch(fetchRegistrarsData(userFilter))}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <Pagination\r\n          page={registrars.page}\r\n          count={registrars.totalPages}\r\n          onChange={handleChangePage}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          size=\"small\"\r\n        />\r\n      </TableContainer>\r\n    );\r\n  else return null;\r\n}\r\n","import { Dispatch } from '@reduxjs/toolkit';\r\nimport { TransactionFilter } from '../../services/interfaces/interfaces';\r\nimport { transactionService } from '../../services/services';\r\nimport { uiActions } from '../ui/slice';\r\nimport { transactionActions } from './slice';\r\n\r\nexport const fetchTransactionData =\r\n  (filter: TransactionFilter) => (dispatch: Dispatch) => {\r\n    transactionService\r\n      .getTransactions(filter)\r\n      .then((transactions) => {\r\n        console.log('in ac store', transactions);\r\n\r\n        dispatch(\r\n          transactionActions.replaceTransaction({\r\n            transactions: transactions.logs,\r\n            totalCount: transactions.count,\r\n            page: filter.page,\r\n          }),\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Fetching log data failed!',\r\n          }),\r\n        );\r\n      });\r\n  };\r\n","import * as React from 'react';\r\nimport { useTypedDispatch, useTypedSelector } from '../../../store/store';\r\nimport { loadTransactios } from '../../../store/transaction/slice';\r\nimport { TransactionFilter } from '../../../services/interfaces/interfaces';\r\nimport { fetchTransactionData } from '../../../store/transaction/actions';\r\nimport DateRangePicker, { DateRange } from '@mui/lab/DateRangePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  Grid,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Pagination,\r\n  Paper,\r\n  Box,\r\n  Stack,\r\n  TextField,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Button,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n} from '@mui/material';\r\nimport validator from 'validator';\r\nimport { getDateStr } from '../../../helpers/date/dayjs/dayjs';\r\n\r\nconst fWidth = 300;\r\n\r\nconst transactionFilter: TransactionFilter = {\r\n  page: 1,\r\n  count: 10,\r\n};\r\n\r\ninterface SearchFields {\r\n  full_name: string;\r\n  email: string;\r\n  code: string;\r\n}\r\n\r\ninterface CheckFields {\r\n  date1: string | null;\r\n  date2: string | null;\r\n  id_typeAction: number | null;\r\n}\r\n\r\nconst initialSFields: SearchFields = {\r\n  full_name: '',\r\n  email: '',\r\n  code: '',\r\n};\r\n\r\nfunction PaginationSearch(props: {\r\n  onSearch: (searchData: SearchFields, check: CheckFields) => void;\r\n}) {\r\n  const [searchData, setSearchData] =\r\n    React.useState<SearchFields>(initialSFields);\r\n\r\n  const [dateValue, setDates] = React.useState<DateRange<Date>>([null, null]);\r\n\r\n  const [action, setAction] = React.useState<number | null>(null);\r\n\r\n  const handleChangeAction = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    newAction: number,\r\n  ) => {\r\n    setAction(newAction);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const fields: CheckFields = {\r\n      date1: dateValue[0] === null ? null : getDateStr(dateValue[0]),\r\n      date2: dateValue[1] === null ? null : getDateStr(dateValue[1]),\r\n      id_typeAction: action === null ? null : action + 1,\r\n    };\r\n    props.onSearch(searchData, fields);\r\n  };\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: '100wh',\r\n        mx: 'auto',\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Stack\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          sx={{ p: 1 }}\r\n        >\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"ПІБ\"\r\n            variant=\"outlined\"\r\n            value={searchData.full_name}\r\n            onBlur={(event: React.FocusEvent<HTMLInputElement>) =>\r\n              setSearchData({\r\n                ...searchData,\r\n                full_name: event.target.value.trim(),\r\n              })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Електронна пошта\"\r\n            variant=\"outlined\"\r\n            value={searchData.email}\r\n            onBlur={(event: React.FocusEvent<HTMLInputElement>) =>\r\n              setSearchData({ ...searchData, email: event.target.value.trim() })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Реєстраційний код\"\r\n            variant=\"outlined\"\r\n            value={searchData.code}\r\n            onBlur={(event: React.FocusEvent<HTMLInputElement>) =>\r\n              setSearchData({ ...searchData, code: event.target.value.trim() })\r\n            }\r\n            sx={{ width: fWidth }}\r\n          />\r\n        </Stack>\r\n        <Stack\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          sx={{ p: 1 }}\r\n        >\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DateRangePicker\r\n              startText=\"Check-in\"\r\n              endText=\"Check-out\"\r\n              value={dateValue}\r\n              onChange={(newValue) => {\r\n                setDates(newValue);\r\n              }}\r\n              renderInput={(startProps, endProps) => (\r\n                <React.Fragment>\r\n                  <TextField {...startProps} />\r\n                  <Box sx={{ mx: 2 }}> --- </Box>\r\n                  <TextField {...endProps} />\r\n                </React.Fragment>\r\n              )}\r\n            />\r\n          </LocalizationProvider>\r\n          <ToggleButtonGroup\r\n            color=\"primary\"\r\n            value={action}\r\n            exclusive\r\n            onChange={handleChangeAction}\r\n          >\r\n            <ToggleButton value={1}>Створення</ToggleButton>\r\n            <ToggleButton value={2}>Зміна</ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Stack>\r\n      </Grid>\r\n      <Box textAlign=\"center\" sx={{ p: 2 }}>\r\n        <Button variant=\"outlined\" onClick={handleSearch}>\r\n          Пошук\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function TransactionTable() {\r\n  const transactions = useTypedSelector(loadTransactios);\r\n\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    transactionFilter.page = newPage;\r\n    dispatch(fetchTransactionData(transactionFilter));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchTransactionData(transactionFilter));\r\n  }, [dispatch]);\r\n\r\n  const handleSearch = React.useCallback(\r\n    (searchData: SearchFields, fields: CheckFields) => {\r\n      transactionFilter.page = 1;\r\n      transactionFilter.count = 10;\r\n      if (!validator.isEmpty(searchData.full_name))\r\n        transactionFilter.full_name = searchData.full_name;\r\n      if (!validator.isEmpty(searchData.code))\r\n        transactionFilter.code = searchData.code;\r\n      if (!validator.isEmpty(searchData.email))\r\n        transactionFilter.email = searchData.email;\r\n      if (fields.date1 !== null) transactionFilter.date1 = fields.date1;\r\n      if (fields.date2 !== null) transactionFilter.date2 = fields.date2;\r\n      if (fields.id_typeAction !== null)\r\n        transactionFilter.id_typeAction = fields.id_typeAction;\r\n      dispatch(fetchTransactionData(transactionFilter));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PaginationSearch onSearch={handleSearch} />\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>№</TableCell>\r\n              <TableCell>Час внесення змін Реєстратором у Реєстр</TableCell>\r\n              <TableCell align=\"right\">Логін Реєстратора</TableCell>\r\n              <TableCell align=\"right\">ПІБ Реєстратора</TableCell>\r\n              <TableCell align=\"right\">Опис операції</TableCell>\r\n              <TableCell align=\"right\">Реєстраційний код методики</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {transactions.transactions.map((row, index) => (\r\n              <TableRow\r\n                key={row.id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell align=\"right\">\r\n                  {index + 1 + transactions.count * (transactions.page - 1)}\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.datetime}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.users.email}</TableCell>\r\n                <TableCell align=\"right\">{row.users.full_name}</TableCell>\r\n                <TableCell align=\"right\">{row.typeAction.name}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  {row.methodslogs === null\r\n                    ? ''\r\n                    : row.methodslogs.registration_code}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <Pagination\r\n          page={transactions.page}\r\n          count={transactions.totalPages}\r\n          onChange={handleChangePage}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          size=\"small\"\r\n        />\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","export interface IUpdateMethod {\r\n  registration_code: string;\r\n  name: string;\r\n  id_domains: number | null;\r\n\r\n  year_creation: Date | null;\r\n  year_making_changes: Date | null;\r\n  year_termination_application: Date | null;\r\n\r\n  date_of_decision_on_state_registration: Date | null;\r\n  date_of_decision_on_state_registration_of_changes: Date | null;\r\n  date_of_decision_to_terminate_the_application: Date | null;\r\n\r\n  author: string;\r\n}\r\n\r\nexport interface IMethodCheck {\r\n  registration_code: boolean;\r\n  name: boolean;\r\n  author: boolean;\r\n  id_domains: boolean;\r\n}\r\n\r\nexport const initialMethodCheckValid: IMethodCheck = {\r\n  registration_code: true,\r\n  name: true,\r\n  author: true,\r\n  id_domains: true,\r\n};\r\nexport const initialState: IUpdateMethod = {\r\n  registration_code: '',\r\n  name: '',\r\n  author: '',\r\n  id_domains: null,\r\n\r\n  year_creation: null,\r\n  year_making_changes: null,\r\n  year_termination_application: null,\r\n\r\n  date_of_decision_on_state_registration: null,\r\n  date_of_decision_on_state_registration_of_changes: null,\r\n  date_of_decision_to_terminate_the_application: null,\r\n};\r\n","import {\r\n  Paper,\r\n  Grid,\r\n  Stack,\r\n  TextField,\r\n  Autocomplete,\r\n  Button,\r\n} from '@mui/material';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport * as React from 'react';\r\nimport { useTypedDispatch, useTypedSelector } from '../../../store/store';\r\nimport { fetchTypesData } from '../../../store/type/actions';\r\nimport { loadTypes } from '../../../store/type/slice';\r\nimport { DomainDTO } from '../../../common/dtos/domain/DomainDTO';\r\nimport validator from 'validator';\r\nimport {\r\n  IMethodCheck,\r\n  IUpdateMethod,\r\n  initialMethodCheckValid,\r\n  initialState,\r\n} from './interfaces';\r\nimport { getDateStr, getYear } from '../../../helpers/date/dayjs/dayjs';\r\nimport { updateMethod } from '../../../store/method/actions';\r\n\r\nexport const UpdateMethod = (props: { id: number }) => {\r\n  const types = useTypedSelector(loadTypes);\r\n  const dispatch = useTypedDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchTypesData());\r\n  }, [dispatch]);\r\n\r\n  const [methodData, setMethodData] =\r\n    React.useState<IUpdateMethod>(initialState);\r\n\r\n  const [methodCheckFields, setCheckField] = React.useState<IMethodCheck>(\r\n    initialMethodCheckValid,\r\n  );\r\n\r\n  const handleOnClickChange = () => {\r\n    console.log(methodData);\r\n\r\n    if (Object.values(methodCheckFields).every((element) => element)) {\r\n      const form = new FormData();\r\n      if (!validator.isEmpty(methodData.registration_code))\r\n        form.append('registration_code', methodData.registration_code);\r\n      if (methodData.id_domains !== null)\r\n        form.append('id_domains', methodData.id_domains.toString());\r\n      if (!validator.isEmpty(methodData.name))\r\n        form.append('name', methodData.name);\r\n\r\n      if (methodData.year_creation !== null)\r\n        form.append(\r\n          'year_creation',\r\n          getYear(methodData.year_creation).toString(),\r\n        );\r\n      if (methodData.year_making_changes !== null) {\r\n        form.append(\r\n          'year_making_changes',\r\n          getYear(methodData.year_making_changes).toString(),\r\n        );\r\n      }\r\n      if (methodData.year_termination_application !== null)\r\n        form.append(\r\n          'year_termination_application',\r\n          getYear(methodData.year_termination_application).toString(),\r\n        );\r\n\r\n      if (methodData.date_of_decision_on_state_registration !== null)\r\n        form.append(\r\n          'date_of_decision_on_state_registration',\r\n          getDateStr(methodData.date_of_decision_on_state_registration),\r\n        );\r\n      if (methodData.date_of_decision_on_state_registration_of_changes !== null)\r\n        form.append(\r\n          'date_of_decision_on_state_registration_of_changes',\r\n          getDateStr(\r\n            methodData.date_of_decision_on_state_registration_of_changes,\r\n          ),\r\n        );\r\n\r\n      if (methodData.date_of_decision_to_terminate_the_application !== null)\r\n        form.append(\r\n          'date_of_decision_to_terminate_the_application',\r\n          getDateStr(methodData.date_of_decision_to_terminate_the_application),\r\n        );\r\n\r\n      form.append('author', methodData.author);\r\n\r\n      dispatch(updateMethod(props.id, form));\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const domains: DomainDTO[] = [];\r\n  types.types.forEach((type) => {\r\n    domains.push(...type.domains);\r\n  });\r\n\r\n  const typeNames = types.types.reduce(\r\n    (\r\n      acc: {\r\n        [id: number | string]: string;\r\n      },\r\n      obj,\r\n    ) => {\r\n      acc[obj.id] = obj.name;\r\n      return acc;\r\n    },\r\n    {},\r\n  );\r\n\r\n  const fWidth = 500;\r\n  return (\r\n    <Paper sx={{ margin: 'auto', flexGrow: 1, padding: 2 }}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ minHeight: '80vh' }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-evenly\"\r\n          alignItems=\"flex-start\"\r\n          sx={{ flexGrow: 1 }}\r\n          spacing={2}\r\n        >\r\n          <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Реєстраційний код\"\r\n              variant=\"outlined\"\r\n              value={methodData.registration_code}\r\n              error={!methodCheckFields.registration_code}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  registration_code: event.target.value,\r\n                })\r\n              }\r\n              onBlur={() => {\r\n                setMethodData({\r\n                  ...methodData,\r\n                  registration_code: methodData.registration_code.trim(),\r\n                });\r\n                setCheckField({\r\n                  ...methodCheckFields,\r\n                  registration_code:\r\n                    /^[0-9]+[.][0-9]+[.][0-9]+$/.test(\r\n                      methodData.registration_code,\r\n                    ) || validator.isEmpty(methodData.registration_code),\r\n                });\r\n              }}\r\n              size=\"small\"\r\n              sx={{ width: fWidth }}\r\n            />\r\n            <Autocomplete\r\n              id=\"grouped-demo\"\r\n              options={domains.sort(\r\n                (a, b) =>\r\n                  -b.id_types.toString().localeCompare(a.id_types.toString()),\r\n              )}\r\n              groupBy={(option) => typeNames[option.id_types]}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={(event: any, option: DomainDTO | null) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  id_domains: option === null ? null : option.id,\r\n                })\r\n              }\r\n              sx={{ width: fWidth }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  size=\"small\"\r\n                  label=\"Вид експертизи\"\r\n                  error={!methodCheckFields.id_domains}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Назва методики\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ width: fWidth }}\r\n              value={methodData.name}\r\n              onBlur={(event: React.FocusEvent<HTMLInputElement>) => {\r\n                setMethodData({\r\n                  ...methodData,\r\n                  name: event.target.value.trim(),\r\n                });\r\n              }}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  name: event.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Автор\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ width: fWidth }}\r\n              value={methodData.author}\r\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\r\n                setMethodData({\r\n                  ...methodData,\r\n                  author: event.target.value,\r\n                })\r\n              }\r\n              onBlur={(event: React.FocusEvent<HTMLInputElement>) => {\r\n                setMethodData({\r\n                  ...methodData,\r\n                  author: event.target.value.trim(),\r\n                });\r\n              }}\r\n            />\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n              <DatePicker\r\n                views={['year']}\r\n                label=\"Рік створення методики\"\r\n                value={methodData.year_creation}\r\n                maxDate={new Date()}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    year_creation: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField size=\"small\" {...params} sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                views={['year']}\r\n                label=\"Рік внесення змін до методики\"\r\n                value={methodData.year_making_changes}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    year_making_changes: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                views={['year']}\r\n                label=\"Рік припинення застосування методики\"\r\n                value={methodData.year_termination_application}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    year_termination_application: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                label=\"Дата прийняття рішення про державну реєстрацію\"\r\n                value={methodData.date_of_decision_on_state_registration}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    date_of_decision_on_state_registration: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                label=\"Дата прийняття рішення про внесення змін у методику\"\r\n                value={\r\n                  methodData.date_of_decision_on_state_registration_of_changes\r\n                }\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    date_of_decision_on_state_registration_of_changes: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n              <DatePicker\r\n                label=\"Дата прийняття рішення про припинення застосування методики\"\r\n                value={methodData.date_of_decision_to_terminate_the_application}\r\n                onChange={(newValue) =>\r\n                  setMethodData({\r\n                    ...methodData,\r\n                    date_of_decision_to_terminate_the_application: newValue,\r\n                  })\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField {...params} size=\"small\" sx={{ width: fWidth }} />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Stack>\r\n          <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            <Button variant=\"contained\" onClick={handleOnClickChange}>\r\n              Оновити\r\n            </Button>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport { AppRoute } from '../../common/enum/enums';\r\n\r\nimport Spinner from '../common/Spinner';\r\nimport {\r\n  RootState,\r\n  useTypedDispatch,\r\n  useTypedSelector,\r\n} from '../../store/store';\r\nimport Header from '../common/header/Header';\r\nimport { selectNotification, uiActions } from '../../store/ui/slice';\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport { SignPage } from '../common/sign/Sign';\r\nimport { Search } from '../common/search/Search';\r\nimport NotFound from '../common/NotFound';\r\nimport { getUser } from '../../store/user/slice';\r\nimport { CreateMethod } from '../common/create/CreateMethod';\r\nimport MethodTable from '../common/table/MethodTable';\r\nimport { CreateUser } from '../common/create/CreateUser';\r\nimport UserTable from '../common/table/UserTable';\r\nimport { TransactionTable } from '../common/table/TransactionTable';\r\nimport { UpdateMethod } from '../common/update/UpdateMethod';\r\n\r\nconst Routing = () => {\r\n  const notification = useTypedSelector(selectNotification);\r\n\r\n  const user = useTypedSelector(getUser);\r\n\r\n  const dispatch = useTypedDispatch();\r\n\r\n  const handleClose = (event?: React.SyntheticEvent) => {\r\n    dispatch(uiActions.clearNotification());\r\n  };\r\n  const notify = () => {\r\n    if (notification) {\r\n      const { status, message } = notification;\r\n\r\n      return (\r\n        <Snackbar open={true} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={status} sx={{ width: '100%' }}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      );\r\n    } else return null;\r\n  };\r\n\r\n  const notice = notify();\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {notice}\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={[AppRoute.ROOT, AppRoute.SEARCH]}\r\n          component={MethodTable}\r\n        />\r\n        <Route exact path={AppRoute.LOGIN} component={SignPage} />\r\n\r\n        {user.role === 'admin' && (\r\n          <>\r\n            <Route path={AppRoute.CREATE_REGISTRY} component={CreateUser} />\r\n            <Route path={AppRoute.REGISTRY} component={UserTable} />\r\n            <Route path={AppRoute.TRANSACTION} component={TransactionTable} />\r\n          </>\r\n        )}\r\n\r\n        {user.role === 'registrator' && (\r\n          <>\r\n            <Route path={AppRoute.CREATE_METHOD} component={CreateMethod} />\r\n            <Route\r\n              path={AppRoute.UPDATE_METHOD}\r\n              render={({ match }) => (\r\n                <UpdateMethod id={Number(match.params.id)} />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        <Route path={AppRoute.ANY} component={NotFound} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routing;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <BrowserRouter basename=\"/register-of-forensic-methods\"> */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}